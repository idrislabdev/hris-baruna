<? 
/* *******************************************************************************************************
MODUL NAME 			: SIMWEB
FILE NAME 			: LogPengunjungBase.php
AUTHOR				: MRF
VERSION				: 1.0
MODIFICATION DOC	:
DESCRIPTION			: Entity-base class for tabel Log_Pengunjung implementation
***************************************************************************************************** */

  /***
  * Entity-base class untuk mengimplementasikan tabel Log_Pengunjung.
  * 
  * @author M Reza Faisal
  * @generated by Entity Generator 5.8.3
  * @generated on 21-Apr-2005,13:47
  ***/
  include_once("../WEB-INF/classes/db/Entity.php");

  class LogPengunjungBase extends Entity{ 

	var $query;
    /**
    * Class constructor.
    * @author M Reza Faisal
    **/
    function LogPengunjungBase(){
      $this->Entity(); 
    }

    /**
    * Cek apakah operasi insert dapat dilakukan atau tidak 
    * @author M Reza Faisal
    * @return boolean True jika insert boleh dilakukan, false jika tidak.
    **/
    function canInsert(){
      return true;
    }

    /**
    * Insert record ke database. 
    * @author M Reza Faisal
    * @return boolean True jika insert sukses, false jika tidak.
    **/
    function insert(){
      if(!$this->canInsert())
        showMessageDlg("Data Log_Pengunjung tidak dapat di-insert",true);
      else{  		
	  	/*Auto-generate primary key(s) by next max value (integer) */
		//$this->setField("ID_LOG_PENGUNJUNG", $this->getNextId("ID_LOG_PENGUNJUNG","log_pengunjung")); 
				
        $str = "INSERT INTO log_pengunjung 
                (TANGGAL,IP_ADDRESS, LOGIN_UID, ACTION) 
                VALUES(
                  '".$this->getField("TANGGAL")."',
                  '".$this->getField("IP_ADDRESS")."',
				  '".$this->getField("LOGIN_UID")."',
				  '".$this->getField("ACTION")."'
                )"; 
				
		$this->query = $str;
        return $this->execQuery($str);
      }
    }

    /**
    * Cek apakah operasi update dapat dilakukan atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika update dapat dilakukan, false jika tidak.
    **/
    function canUpdate(){
      return true;
    }

    /**
    * Update record. 
    * @author M Reza Faisal
    * @return boolean True jika update sukses, false jika tidak.
    **/
    function update(){
      if(!$this->canUpdate())
        showMessageDlg("Data Log_Pengunjung tidak dapat diupdate",true);
      else{
        $str = "UPDATE log_pengunjung 
                SET 
                  TANGGAL = '".$this->getField("TANGGAL")."',
                  IP_ADDRESS = '".$this->getField("IP_ADDRESS")."',
				  LOGIN_UID = '".$this->getField("LOGIN_UID")."',
				  ACTION = '".$this->getField("ACTION")."'
                WHERE 
                  ID_LOG_PENGUNJUNG = '".$this->getField("ID_LOG_PENGUNJUNG")."'"; 
        return $this->execQuery($str);
      }
    }

    /**
    * Cek apakah record dapat dihapus atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika record dapat dihapus, false jika tidak.
    **/
    function canDelete(){
      return true;
    }

    /**
    * Menghapus record sesuai id-nya. 
    * @author M Reza Faisal
    * @return boolean True jika penghapusan sukses, false jika tidak.
    **/
    function delete(){
      if(!$this->canDelete())
        showMessageDlg("Data Log_Pengunjung tidak dapat di-hapus",true);
      else{
        $str = "DELETE FROM log_pengunjung 
                WHERE 
                  ID_LOG_PENGUNJUNG = '".$this->getField("ID_LOG_PENGUNJUNG")."'"; 
        return $this->execQuery($str);
      }
    }

    /**
    * Cari record berdasarkan id-nya. 
    * @author M Reza Faisal
    * @param int ID_LOG_PENGUNJUNG Id record 
    * @return boolean True jika pencarian sukses, false jika tidak.
    **/
    function selectById($ID_LOG_PENGUNJUNG){
      $str = "SELECT * FROM log_Pengunjung
              WHERE 
                ID_LOG_PENGUNJUNG = '".$ID_LOG_PENGUNJUNG."'"; 
      return $this->select($str);
    }

    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 
    function selectByParams($paramsArray=array(),$limit=-1,$from=-1,$varStatement=""){
      $str = "SELECT * FROM log_pengunjung WHERE ID_LOG_PENGUNJUNG IS NOT NULL "; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key = '$val' ";
      }
      $str .= $varStatement." ORDER BY ID_LOG_PENGUNJUNG DESC";
	  $this->query = $str;
      return $this->selectLimit($str,$limit,$from); 
    }

	function selectByParamsLike($paramsArray=array(),$limit=-1,$from=-1,$varStatement=""){
      $str = "SELECT * FROM log_pengunjung WHERE ID_LOG_PENGUNJUNG IS NOT NULL "; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key LIKE '%$val%' ";
      }
      $str .= $varStatement." ORDER BY ID_LOG_PENGUNJUNG DESC";
	  $this->query = $str;
      return $this->selectLimit($str,$limit,$from); 
    }
    /** 
    * Hitung jumlah record berdasarkan parameter (array). 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @return long Jumlah record yang sesuai kriteria 
    **/ 
    function getCountByParams($paramsArray=array(),$varStatement=""){
      $str = "SELECT COUNT(ID_LOG_PENGUNJUNG) AS ROWCOUNT FROM log_pengunjung WHERE ID_LOG_PENGUNJUNG IS NOT NULL "; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key = '$val' ";
      }
	  $str .= " ".$varStatement." ";
      $this->select($str); 
	  $this->query = $str;
      if($this->firstRow()) 
        return $this->getField("ROWCOUNT"); 
      else 
         return 0; 
    }
	function getCountByParamsLike($paramsArray=array(),$varStatement=""){
      $str = "SELECT COUNT(ID_LOG_PENGUNJUNG) AS ROWCOUNT FROM log_pengunjung WHERE ID_LOG_PENGUNJUNG IS NOT NULL "; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key LIKE '%$val%' ";
      }
	  $str .= " ".$varStatement." ";
      $this->select($str); 
	  $this->query = $str;
      if($this->firstRow()) 
        return $this->getField("ROWCOUNT"); 
      else 
         return 0; 
    }
  } 
?>