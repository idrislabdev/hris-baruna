<? 
/* *******************************************************************************************************
MODUL NAME 			: SIMWEB
FILE NAME 			: UsersBase.php
AUTHOR				: MRF
VERSION				: 1.0
MODIFICATION DOC	:
DESCRIPTION			: Entity-base class for tabel Users implementation
***************************************************************************************************** */

  /***
  * Entity-base class untuk mengimplementasikan tabel Users.
  * 
  * @author M Reza Faisal
  * @generated by Entity Generator 5.8.3
  * @generated on 27-Apr-2005,14:15
  ***/
  include_once("../WEB-INF/classes/db/Entity.php");

  class UsersBase extends Entity{ 

	var $query;
    /**
    * Class constructor.
    * @author M Reza Faisal
    **/
    function UsersBase(){
      $this->Entity(); 
    }

    /**
    * Cek apakah operasi insert dapat dilakukan atau tidak 
    * @author M Reza Faisal
    * @return boolean True jika insert boleh dilakukan, false jika tidak.
    **/
    function canInsert(){
      return true;
    }

    /**
    * Insert record ke database. 
    * @author M Reza Faisal
    * @return boolean True jika insert sukses, false jika tidak.
    **/
    function insert(){
      if(!$this->canInsert())
        showMessageDlg("Data Users tidak dapat di-insert",true);
      else{
	  	/*Auto-generate primary key(s) by next max value (integer) */
		$this->setField("USER_LOGIN_ID", $this->getNextId("USER_LOGIN_ID","USER_LOGIN"));
        $this->setField("USER_PASSWORD", md5($this->getField("USER_PASSWORD")));
		
		$str = "
				INSERT INTO USER_LOGIN (
				   USER_LOGIN_ID, USER_TYPE_ID, REKANAN_ID, 
				   USER_NAMA, USER_JABATAN, USER_ALAMAT, 
				   USER_TELEPON, USER_LOGIN, USER_PASSWORD, USER_STATUS) 
  			 	VALUES (
				  ".$this->getField("USER_LOGIN_ID").",
  				  ".$this->getField("USER_TYPE_ID").",
				  ".$this->getField("REKANAN_ID").", 	
    			  '".$this->getField("USER_NAMA")."',
      			  '".$this->getField("USER_JABATAN")."',
  				  '".$this->getField("USER_ALAMAT")."',
				  '".$this->getField("USER_TELEPON")."',	
				  '".$this->getField("USER_LOGIN")."',
				  '".$this->getField("USER_PASSWORD")."',
  				  ".$this->getField("USER_STATUS")."		 
				)"; 
				
		/*$str = "
		INSERT INTO USER_LOGIN (
		   USER_LOGIN_ID, USER_TYPE_ID, REKANAN_ID, 
		   USER_NAMA, USER_JABATAN, USER_ALAMAT, 
		   USER_TELEPON, USER_LOGIN, USER_PASSWORD, 
		   USER_STATUS) 
		VALUES (
				  '".$this->getField("USER_LOGIN_ID")."',
                  '".$this->getField("USER_TYPE_ID")."',
                  '".$this->getField("REKANAN_ID")."',
                  '".$this->getField("USER_NAMA")."',
                  '".$this->getField("USER_JABATAN")."',
                  '".$this->getField("USER_ALAMAT")."',
				  '".$this->getField("USER_TELEPON")."',
				  '".$this->getField("USER_LOGIN")."',
				  '".$this->getField("USER_PASSWORD")."',
				  '".$this->getField("USER_STATUS")."'
                )"; */
		$this->query = $str;
		//echo $str;
        return $this->execQuery($str);
      }
    }

    /**
    * Cek apakah operasi update dapat dilakukan atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika update dapat dilakukan, false jika tidak.
    **/
    function canUpdate(){
      return true;
    }

    /**
    * Update record. 
    * @author M Reza Faisal
    * @return boolean True jika update sukses, false jika tidak.
    **/
    function update(){
      if(!$this->canUpdate())
        showMessageDlg("Data Users tidak dapat diupdate",true);
      else{
        $this->setField("USER_PASSWORD", md5($this->getField("USER_PASSWORD")));
		
		$str = "
				UPDATE USER_LOGIN
				SET     
					   USER_TYPE_ID    = ".$this->getField("USER_TYPE_ID").",					   
					   USER_NAMA       = '".$this->getField("USER_NAMA")."',
					   USER_JABATAN    = '".$this->getField("USER_JABATAN")."',
					   USER_ALAMAT     = '".$this->getField("USER_ALAMAT")."',
					   USER_TELEPON    = '".$this->getField("USER_TELEPON")."'					   
				WHERE  USER_LOGIN_ID   = ".$this->getField("USER_LOGIN_ID")."
 				"; 
		/*$str = "
		UPDATE USER_LOGIN 
                SET 
                  USER_TYPE_ID = '".$this->getField("USER_TYPE_ID")."',
                  REKANAN_ID = '".$this->getField("REKANAN_ID")."',
                  USER_NAMA = '".$this->getField("USER_NAMA")."',
				  USER_JABATAN = '".$this->getField("USER_JABATAN")."',
				  USER_ALAMAT = '".$this->getField("USER_ALAMAT")."',
                  USER_TELEPON = '".$this->getField("USER_TELEPON")."',
				  USER_LOGIN = '".$this->getField("USER_LOGIN")."',
				  USER_PASSWORD = '".$this->getField("USER_PASSWORD")."'
                WHERE 
                  USER_LOGIN_ID = '".$this->getField("USER_LOGIN_ID")."'"; */
				  $this->query = $str;
				  //echo $str;
        return $this->execQuery($str);
      }
    }
	
	function update_status(){
      if(!$this->canUpdate())
        showMessageDlg("Data Users tidak dapat diupdate",true);
      else{
        $this->setField("USER_PASSWORD", md5($this->getField("USER_PASSWORD")));
		
		$str = "
				UPDATE USER_LOGIN
				SET     
					   USER_STATUS    = ".$this->getField("USER_STATUS")."
				WHERE  USER_LOGIN_ID   = ".$this->getField("USER_LOGIN_ID")."
 				"; 
				  $this->query = $str;
        return $this->execQuery($str);
      }
    }
	
	function updateNoPass(){
      if(!$this->canUpdate())
        showMessageDlg("Data Users tidak dapat diupdate",true);
      else{
		$str = "
		UPDATE USER_LOGIN 
                SET 
                  USER_TYPE_ID = '".$this->getField("USER_TYPE_ID")."',
                  REKANAN_ID = '".$this->getField("REKANAN_ID")."',
                  USER_NAMA = '".$this->getField("USER_NAMA")."',
				  USER_JABATAN = '".$this->getField("USER_JABATAN")."',
				  USER_ALAMAT = '".$this->getField("USER_ALAMAT")."',
                  USER_TELEPON = '".$this->getField("USER_TELEPON")."',
				  USER_LOGIN = '".$this->getField("USER_LOGIN")."'
                WHERE 
                  USER_LOGIN_ID = '".$this->getField("USER_LOGIN_ID")."'"; 
				  //echo $str;
				  $this->query = $str;
        return $this->execQuery($str);
      }
    }
	
	function getCountByParams_onedha($paramsArray=array(),$stat="")
	{
		$str = "SELECT COUNT(USER_LOGIN_ID) AS ROWCOUNT FROM USER_LOGIN WHERE USER_LOGIN_ID IS NOT NULL ".$stat; 
		while(list($key,$val)=each($paramsArray))
		{
			$str .= " AND $key = '$val' ";
		}
		//echo $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0; 
    }

    /**
    * Cek apakah record dapat dihapus atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika record dapat dihapus, false jika tidak.
    **/
    function canDelete(){
      return true;
    }

    /**
    * Menghapus record sesuai id-nya. 
    * @author M Reza Faisal
    * @return boolean True jika penghapusan sukses, false jika tidak.
    **/
    function delete(){
      if(!$this->canDelete())
        showMessageDlg("Data Users tidak dapat di-hapus",true);
      else{
        $str = "DELETE FROM USER_LOGIN 
                WHERE 
                  USER_LOGIN_ID = '".$this->getField("USER_LOGIN_ID")."'"; 
        return $this->execQuery($str);
      }
    }

    function updatePassword()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$str = "UPDATE USER_LOGIN SET
				  USER_PASSWORD = '".$this->getField("USER_PASSWORD")."'
				WHERE USER_LOGIN_ID = '".$this->getField("USER_LOGIN_ID")."'
				"; 
		$this->query = $str;
		return $this->execQuery($str);
    }
	
	function resetPassword()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$str = "UPDATE USER_LOGIN SET
				  USER_PASSWORD = '".md5($this->getField("USER_PASSWORD"))."'
				WHERE md5(USER_LOGIN_ID) = '".$this->getField("USER_LOGIN_ID")."'
				"; 
		$this->query = $str;
		//echo $str;
		return $this->execQuery($str);
    }
    /**
    * Cari record berdasarkan id-nya. 
    * @author M Reza Faisal
    * @param string username Id record 
    * @return boolean True jika pencarian sukses, false jika tidak.
    **/
    function selectById($username){
      $str = "SELECT * FROM USER_LOGIN
              WHERE 
                USER_LOGIN = '".$username."'"; 
				
		$this->query = $str;
		
      return $this->select($str);
    }
	
	function selectByRekanan($username){
      $str = "SELECT * FROM REKANAN
              WHERE 
                REKANAN_ID = '".$username."'"; 
				
		$this->query = $str;
		
      return $this->select($str);
    }
    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 
    function selectByParams($paramsArray=array(),$limit=-1,$from=-1, $stat=""){
      $str = "SELECT 
				USER_LOGIN_ID, B.NAMA USER_TYPE, REKANAN_ID, 
				   USER_NAMA, USER_JABATAN, USER_ALAMAT, 
				   USER_TELEPON, USER_LOGIN, USER_PASSWORD, 
				   USER_IS_LOGIN, USER_LAST_LOGIN, USER_STATUS
				FROM USER_LOGIN A, USER_TYPE B WHERE A.USER_TYPE_ID = B.USER_TYPE_ID ".$stat; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key = '$val' ";
      }
      $str .= " ORDER BY A.USER_TYPE_ID";
      return $this->selectLimit($str,$limit,$from); 
    }
	
	function selectByParamsSayembara($paramsArray=array(),$limit=-1,$from=-1, $stat=""){
      $str = "SELECT USER_LOGIN_ID, U.USER_TYPE_ID, REKANAN_ID, (SELECT X.NAMA FROM USER_TYPE X WHERE X.USER_TYPE_ID = U.USER_TYPE_ID) USER_TYPE,
	  				X.KODE NO_REG,
                   USER_NAMA, USER_JABATAN, USER_ALAMAT, 
                   USER_TELEPON, USER_LOGIN, USER_PASSWORD, 
                   USER_IS_LOGIN, USER_LAST_LOGIN, USER_STATUS 
                FROM USER_LOGIN U, PESERTA_LOMBA X WHERE USER_LOGIN_ID IS NOT NULL AND  X.EMAIL = U.USER_LOGIN ".$stat; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key = '$val' ";
      }
      $str .= " ORDER BY USER_STATUS DESC";
	  //echo $str;
      return $this->selectLimit($str,$limit,$from); 
    }
    /** 
    * Hitung jumlah record berdasarkan parameter (array). 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @return long Jumlah record yang sesuai kriteria 
    **/ 
    function getCountByParams($paramsArray=array(), $varStatement=""){
      $str = "SELECT COUNT(USER_NAMA) AS ROWCOUNT FROM USER_LOGIN A WHERE USER_NAMA IS NOT NULL ".$varStatement; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key = '$val' ";
      }
      $this->select($str); 
      if($this->firstRow()) 
        return $this->getField("ROWCOUNT"); 
      else 
         return 0; 
    }
	
	function getJenis($varCID)
	{
		$this->selectByParams(array('user_id' => $varCID));
		$this->firstRow();
		
		return $this->getField('jenis');
	}
	
	function getHp($varCID)
	{
		$this->selectByParams(array('satuan_kerja_id' => $varCID));
		$this->firstRow();
		
		return $this->getField('hp');
	}
	
	function getEmail($varCID)
	{
		$this->selectByParams(array('satuan_kerja_id' => $varCID));
		$this->firstRow();
		
		return $this->getField('email');
	}
  } 
?>