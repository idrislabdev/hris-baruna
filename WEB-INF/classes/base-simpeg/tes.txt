DROP PROCEDURE JSON_COBA;

CREATE OR REPLACE PROCEDURE             JSON_COBA(pJenisPegawaiId IN VARCHAR2)
         IS 

my_movie_obj  IMASYS.json.JSONStructObj; /* Objeto -> informa¿s de um filme */
my_array     IMASYS.json.JSONArray;     /* Array com os g¿ros do filme */
  

BEGIN    

    IMASYS.JSON.newJSONObj(my_movie_obj);
        
    my_array(1):= 'TESTING';    
    my_movie_obj := IMASYS.JSON.addAttr(my_movie_obj, 'TEST', IMASYS.JSON.addArray(my_array));

raise_application_error(-20001,IMASYS.JSON.JSON2String(my_movie_obj));

 IMASYS.JSON.closeJSONObj(my_movie_obj);    

    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,IMASYS.JSON.JSON2String(my_movie_obj));
    END;
/


DROP PROCEDURE KALKULASI_PRESTASI;

CREATE OR REPLACE PROCEDURE          KALKULASI_PRESTASI(VPERIODE IN VARCHAR2) AS
PRAGMA AUTONOMOUS_TRANSACTION;


PTOTALTUNJANGAN     NUMBER;
PTOTALPOTONGAN      NUMBER;
PPEMBAGIPOTONGAN    NUMBER;

    BEGIN
    
        DELETE FROM PPI_GAJI.PERHITUNGAN_PRESTASI WHERE PERIODE = VPERIODE;
    
        FOR rec IN (
        SELECT 
        PEGAWAI_ID, PERIODE, KELAS, 
           MIN_JAM_MENGAJAR, JUMLAH_JAM_MENGAJAR, JUMLAH_JAM_LEBIH, 
           TARIF_MENGAJAR, TARIF_LEBIH, JUMLAH_POTONGAN, 
           PEMBAGI_POTONGAN, TUNJANGAN_PRESTASI, LAST_CREATE_USER, 
           LAST_CREATE_DATE, LAST_UPDATE_USER, LAST_UPDATE_DATE, STATUS_CALPEG
        FROM PPI_GAJI.INTEGRASI_TUNJANGAN_PRESTASI A
        WHERE PERIODE = VPERIODE
        ) LOOP 
            -- SEBAGAI ANTISIPASI AGAR TIDAK ADA YANG MINUS
            IF rec.JUMLAH_JAM_MENGAJAR <= 0 THEN
                PTOTALTUNJANGAN := 0;
            ELSE
                -- KETIKA JUMLAH JAM MENGAJAR KURANG MAKA LANGSUNG DI SET 0
                IF (rec.JUMLAH_JAM_MENGAJAR - rec.MIN_JAM_MENGAJAR) < 0 THEN
                    PTOTALTUNJANGAN := 0;
                ELSE
                    PTOTALTUNJANGAN := ((rec.JUMLAH_JAM_MENGAJAR - rec.MIN_JAM_MENGAJAR) * rec.TARIF_MENGAJAR);
                END IF;
            END IF;
                        
            
            -- ERROR HANDLING KETIKA PEMBAGINYA 0 MAKA DI UBAH MENJADI 1 AGAR TIDAK DIVISION BY ZERO
            IF rec.PEMBAGI_POTONGAN = '0' THEN
                PPEMBAGIPOTONGAN := '1';
            ELSE
                PPEMBAGIPOTONGAN := rec.PEMBAGI_POTONGAN;
            END IF;
            
            -- KETIKA PEMBAGI POTONGAN = 4 (PART TIME) MAKA RUMUSNYA BERBEDA 
            IF rec.PEMBAGI_POTONGAN = '4' THEN
                PTOTALPOTONGAN := (rec.TUNJANGAN_PRESTASI/4) * rec.JUMLAH_POTONGAN;
            ELSE
                IF rec.STATUS_CALPEG = 'Y' THEN
                    PTOTALPOTONGAN := ((rec.JUMLAH_POTONGAN / PPEMBAGIPOTONGAN) * rec.TUNJANGAN_PRESTASI) * 0.8;
                ELSE
                    PTOTALPOTONGAN := (rec.JUMLAH_POTONGAN / PPEMBAGIPOTONGAN) * rec.TUNJANGAN_PRESTASI;
                END IF;
            END IF;
    
            INSERT INTO PPI_GAJI.PERHITUNGAN_PRESTASI (
               PEGAWAI_ID, PERIODE, KELAS, 
               MIN_JAM_MENGAJAR, JUMLAH_JAM_MENGAJAR, JUMLAH_JAM_LEBIH, 
               TARIF_MENGAJAR, TARIF_LEBIH, TOTAL_TUNJANGAN, 
               JUMLAH_POTONGAN, PEMBAGI_POTONGAN, TUNJANGAN_PRESTASI, 
               TOTAL_POTONGAN, STATUS_CALPEG, LAST_CREATE_USER, 
               LAST_CREATE_DATE, LAST_UPDATE_USER, LAST_UPDATE_DATE) 
            VALUES (rec.PEGAWAI_ID, rec.PERIODE, rec.KELAS, 
               rec.MIN_JAM_MENGAJAR, rec.JUMLAH_JAM_MENGAJAR, rec.JUMLAH_JAM_LEBIH, 
               rec.TARIF_MENGAJAR, rec.TARIF_LEBIH, PTOTALTUNJANGAN, 
               rec.JUMLAH_POTONGAN, rec.PEMBAGI_POTONGAN, rec.TUNJANGAN_PRESTASI, 
               PTOTALPOTONGAN, rec.STATUS_CALPEG, rec.LAST_CREATE_USER, 
               rec.LAST_CREATE_DATE, rec.LAST_UPDATE_USER, rec.LAST_UPDATE_DATE);
      
            
            COMMIT;
    
    
        END LOOP;    
      
    END;
/


DROP PROCEDURE PROSES_HITUNG_BANTUAN_DIDIK;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_BANTUAN_DIDIK
         IS 


CURSOR cTablePegawai IS

    SELECT A.PEGAWAI_ID, PROSENTASE, KALI,D.JUMLAH, B.JENIS_PEGAWAI_ID, CASE WHEN NVL(NPWP, 'X') = 'X' THEN F.JUMLAH_TANPA_NPWP ELSE  F.JUMLAH_NPWP END POTONGAN_PPH FROM PPI_SIMPEG.PEGAWAI A 
            INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
            INNER JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
            INNER JOIN PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI D ON D.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND D.KELOMPOK = C.KELOMPOK AND GAJI_KONDISI_ID = 19
            INNER JOIN PPI_GAJI.PERHITUNGAN_PPH F ON F.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'BANTUAN_PENDIDIKAN' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                       AND C.KELAS IN (SELECT REGEXP_SUBSTR(F.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(F.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
    WHERE STATUS_PEGAWAI_ID IN (1,5);

CURSOR cTabelJumlahPenghasilan(pPegawaiId IN INTEGER, pJumlah IN VARCHAR2) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN JUMLAH_PENGHASILAN
                WHEN PIVOT = 2 THEN JUMLAH_UANG_KEHADIRAN
                WHEN PIVOT = 3 THEN JUMLAH_TRANSPORTASI
                WHEN PIVOT = 4 THEN JUMLAH_UANG_MAKAN
                WHEN PIVOT = 5 THEN JUMLAH_TUNJANGAN_JABATAN
                WHEN PIVOT = 6 THEN JUMLAH_TPP
                WHEN PIVOT = 7 THEN JUMLAH_TUNJANGAN_SELISIH
                WHEN PIVOT = 8 THEN JUMLAH_INSENTIF
           END JUMLAH
    FROM (SELECT 
                NVL(JUMLAH_PENGHASILAN * (PROSENTASE_PENGHASILAN / 100), 0) JUMLAH_PENGHASILAN, 
                NVL(JUMLAH_UANG_KEHADIRAN * (PROSENTASE_UANG_KEHADIRAN / 100), 0) JUMLAH_UANG_KEHADIRAN, 
                NVL(JUMLAH_TRANSPORTASI * (PROSENTASE_TRANSPORTASI / 100), 0) JUMLAH_TRANSPORTASI,  
                NVL(JUMLAH_UANG_MAKAN * (PROSENTASE_UANG_MAKAN / 100), 0) JUMLAH_UANG_MAKAN, 
                NVL(JUMLAH_TUNJANGAN_JABATAN * (PROSENTASE_TUNJANGAN_JABATAN / 100), 0) JUMLAH_TUNJANGAN_JABATAN, 
                NVL(JUMLAH_TPP * (PROSENTASE_TPP / 100), 0) JUMLAH_TPP, 
                TO_NUMBER(NVL(JUMLAH_TUNJANGAN_SELISIH, 0)) JUMLAH_TUNJANGAN_SELISIH, 
                NVL(JUMLAH_INSENTIF * (PROSENTASE_INSENTIF / 100), 0) JUMLAH_INSENTIF
                FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR WHERE PEGAWAI_ID = pPegawaiId), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TAHUN ORDER BY GAJI_PERIODE_TAHUN_ID DESC;

m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_JumlahPPH NUMBER;
m_JumlahDibayarkan NUMBER;
m_PPH21Prosentase NUMBER := 0;
m_Query VARCHAR2(1000);

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE PPI_GAJI.BANTUAN_PENDIDIKAN 
            WHERE PERIODE = m_BulanProses; 

        FOR recPegawai IN cTablePegawai LOOP        

        
        OPEN cTabelJumlahPenghasilan(recPegawai.PEGAWAI_ID, recPegawai.JUMLAH);
            
        FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
        CLOSE cTabelJumlahPenghasilan;
        
        
        m_Jumlah := m_Jumlah * recPegawai.KALI * (recPegawai.PROSENTASE / 100);
        m_JumlahPPH := ROUND(m_Jumlah * NVL(recPegawai.POTONGAN_PPH, 0));
        m_PPH21Prosentase := NVL(recPegawai.POTONGAN_PPH, 0) * 100;
        m_JumlahDibayarkan :=  m_Jumlah - m_JumlahPPH;
          
        m_Query := 'INSERT INTO PPI_GAJI.BANTUAN_PENDIDIKAN (
                           PEGAWAI_ID, PERIODE, 
                           JUMLAH, JUMLAH_POTONGAN, PROSENTASE_POTONGAN, 
                           JENIS_PEGAWAI_ID, JUMLAH_DIBAYAR)
        VALUES (' || recPegawai.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || ROUND(NVL(m_Jumlah, 0), 0) || ', ' || ROUND(NVL(m_JumlahPPH, 0), 0) || ', ' || NVL(m_PPH21Prosentase, 0) || ', ' || recPegawai.JENIS_PEGAWAI_ID || ', ' || m_JumlahDibayarkan || ')';
        EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.BANTUAN_PENDIDIKAN (
                           PEGAWAI_ID, PERIODE, 
                           JUMLAH, JUMLAH_POTONGAN, PROSENTASE_POTONGAN, 
                           JENIS_PEGAWAI_ID, JUMLAH_DIBAYAR)
        VALUES (' || recPegawai.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || ROUND(NVL(m_Jumlah, 0), 0) || ', ' || ROUND(NVL(m_JumlahPPH, 0), 0) || ', ' || NVL(m_PPH21Prosentase, 0) || ', ' || recPegawai.JENIS_PEGAWAI_ID || ', ' || ROUND(NVL(m_JumlahDibayarkan, 0), 0) || ')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||m_Query);
    END;
/


DROP PROCEDURE PROSES_HITUNG_BONUS_TAHUNAN;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_BONUS_TAHUNAN
         IS 


CURSOR cTablePegawai IS

    SELECT A.PEGAWAI_ID, PROSENTASE, KALI, D.JUMLAH, B.JENIS_PEGAWAI_ID, CASE WHEN NVL(NPWP, 'X') = 'X' THEN F.JUMLAH_TANPA_NPWP ELSE  F.JUMLAH_NPWP END POTONGAN_PPH FROM PPI_SIMPEG.PEGAWAI A 
            INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
            INNER JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
            INNER JOIN PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI D ON D.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND D.KELOMPOK = C.KELOMPOK AND GAJI_KONDISI_ID = 20
            INNER JOIN PPI_GAJI.PERHITUNGAN_PPH F ON F.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'BONUS_TAHUNAN' AND JENIS_PERHITUNGAN = 'PROSENTASE'
    WHERE STATUS_PEGAWAI_ID = 1;

CURSOR cTabelJumlahPenghasilan(pPegawaiId IN INTEGER, pJumlah IN VARCHAR2) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN JUMLAH_PENGHASILAN
                WHEN PIVOT = 2 THEN JUMLAH_UANG_KEHADIRAN
                WHEN PIVOT = 3 THEN JUMLAH_TRANSPORTASI
                WHEN PIVOT = 4 THEN JUMLAH_UANG_MAKAN
                WHEN PIVOT = 5 THEN JUMLAH_TUNJANGAN_JABATAN
                WHEN PIVOT = 6 THEN JUMLAH_TPP
                WHEN PIVOT = 7 THEN JUMLAH_TUNJANGAN_SELISIH
                WHEN PIVOT = 8 THEN JUMLAH_INSENTIF
           END JUMLAH
    FROM (SELECT 
                NVL(JUMLAH_PENGHASILAN * (PROSENTASE_PENGHASILAN / 100), 0) JUMLAH_PENGHASILAN, 
                NVL(JUMLAH_UANG_KEHADIRAN * (PROSENTASE_UANG_KEHADIRAN / 100), 0) JUMLAH_UANG_KEHADIRAN, 
                NVL(JUMLAH_TRANSPORTASI * (PROSENTASE_TRANSPORTASI / 100), 0) JUMLAH_TRANSPORTASI,  
                NVL(JUMLAH_UANG_MAKAN * (PROSENTASE_UANG_MAKAN / 100), 0) JUMLAH_UANG_MAKAN, 
                NVL(JUMLAH_TUNJANGAN_JABATAN * (PROSENTASE_TUNJANGAN_JABATAN / 100), 0) JUMLAH_TUNJANGAN_JABATAN, 
                NVL(JUMLAH_TPP * (PROSENTASE_TPP / 100), 0) JUMLAH_TPP, 
                TO_NUMBER(NVL(JUMLAH_TUNJANGAN_SELISIH, 0)) JUMLAH_TUNJANGAN_SELISIH, 
                NVL(JUMLAH_INSENTIF * (PROSENTASE_INSENTIF / 100), 0) JUMLAH_INSENTIF
                FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR WHERE PEGAWAI_ID = pPegawaiId), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TAHUN ORDER BY GAJI_PERIODE_TAHUN_ID DESC;

m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_JumlahPPH NUMBER;
m_JumlahDibayarkan INTEGER;
m_PPH21Prosentase NUMBER := 0;
m_Query VARCHAR2(1000);

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE PPI_GAJI.BONUS_TAHUNAN 
            WHERE PERIODE = m_BulanProses; 

        FOR recPegawai IN cTablePegawai LOOP        

        
        OPEN cTabelJumlahPenghasilan(recPegawai.PEGAWAI_ID, recPegawai.JUMLAH);
            
        FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
        CLOSE cTabelJumlahPenghasilan;

        
        m_Jumlah := m_Jumlah * NVL(recPegawai.KALI, 0) * (NVL(recPegawai.PROSENTASE, 0) / 100);
        m_JumlahPPH := m_Jumlah * NVL(recPegawai.POTONGAN_PPH, 0);
        m_PPH21Prosentase := NVL(recPegawai.POTONGAN_PPH, 0) * 100;        

              
        EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.BONUS_TAHUNAN (
                           PEGAWAI_ID, PERIODE, 
                           JUMLAH, JUMLAH_POTONGAN, PROSENTASE_POTONGAN, 
                           JENIS_PEGAWAI_ID)
        VALUES (' || recPegawai.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || ROUND(NVL(m_Jumlah, 0)) || ', ' || ROUND(NVL(m_JumlahPPH, 0)) || ', ' || NVL(m_PPH21Prosentase, 0) || ', ' || recPegawai.JENIS_PEGAWAI_ID || ')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||m_Query);
    END;
/


DROP PROCEDURE PROSES_HITUNG_CUTI_TAHUNAN;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_CUTI_TAHUNAN
         IS 


CURSOR cTablePegawai IS


    SELECT A.PEGAWAI_ID, PROSENTASE, KALI, D.JUMLAH, B.JENIS_PEGAWAI_ID,  G.CUTI_TAHUNAN_DETIL_ID, G.CUTI_TAHUNAN_ID, NVL(E.LAMA_CUTI, 0) LAMA_CUTI_TOTAL, G.LAMA_CUTI LAMA_CUTI_SEKARANG,
           NVL((SELECT SUM(LAMA_CUTI) FROM PPI_GAJI.CUTI_TAHUNAN_DETIL X WHERE X.CUTI_TAHUNAN_ID = E.CUTI_TAHUNAN_ID AND NOT STATUS_TUNDA = 1), 0) - 
           NVL((SELECT NVL(SUM(LAMA_CUTI_TERBAYAR), 0) FROM PPI_GAJI.CUTI_TAHUNAN_DETIL X WHERE X.CUTI_TAHUNAN_ID = E.CUTI_TAHUNAN_ID), 0) LAMA_CUTI,
           CASE WHEN NVL(NPWP, 'X') = 'X' THEN 1 ELSE  F.JUMLAH_NPWP END POTONGAN_PPH
            FROM PPI_SIMPEG.PEGAWAI A 
            INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
            INNER JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
            INNER JOIN PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI D ON D.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND D.KELOMPOK = C.KELOMPOK AND GAJI_KONDISI_ID = 21
            INNER JOIN PPI_GAJI.CUTI_TAHUNAN E ON A.PEGAWAI_ID = E.PEGAWAI_ID
            INNER JOIN PPI_GAJI.PERHITUNGAN_PPH F ON F.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'CUTI_TAHUNAN' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
            INNER JOIN PPI_GAJI.CUTI_TAHUNAN_DETIL G ON E.CUTI_TAHUNAN_ID = G.CUTI_TAHUNAN_ID 
            AND NVL(G.JUMLAH,0) = 0 
            AND G.TANGGAL_APPROVE IS NULL
            AND G.STATUS_BAYAR_MUTASI IS NULL
    WHERE 1 = 1 ORDER BY A.PEGAWAI_ID ;
    

CURSOR cTabelJumlahPenghasilan(pPegawaiId IN INTEGER, pJumlah IN VARCHAR2) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN JUMLAH_PENGHASILAN
                WHEN PIVOT = 2 THEN JUMLAH_UANG_KEHADIRAN
                WHEN PIVOT = 3 THEN JUMLAH_TRANSPORTASI
                --WHEN PIVOT = 4 THEN JUMLAH_UANG_MAKAN
                WHEN PIVOT = 5 THEN JUMLAH_TUNJANGAN_JABATAN
                WHEN PIVOT = 6 THEN JUMLAH_TPP
                WHEN PIVOT = 7 THEN JUMLAH_TUNJANGAN_SELISIH
                --WHEN PIVOT = 8 THEN JUMLAH_INSENTIF
           END JUMLAH
    FROM (SELECT 
                NVL(JUMLAH_PENGHASILAN * (PROSENTASE_PENGHASILAN / 100), 0) JUMLAH_PENGHASILAN, 
                NVL(JUMLAH_UANG_KEHADIRAN * (PROSENTASE_UANG_KEHADIRAN / 100), 0) JUMLAH_UANG_KEHADIRAN, 
                NVL(JUMLAH_TRANSPORTASI * (PROSENTASE_TRANSPORTASI / 100), 0) JUMLAH_TRANSPORTASI,  
                NVL(JUMLAH_UANG_MAKAN * (PROSENTASE_UANG_MAKAN / 100), 0) JUMLAH_UANG_MAKAN, 
                NVL(JUMLAH_TUNJANGAN_JABATAN * (PROSENTASE_TUNJANGAN_JABATAN / 100), 0) JUMLAH_TUNJANGAN_JABATAN, 
                NVL(JUMLAH_TPP * (PROSENTASE_TPP / 100), 0) JUMLAH_TPP, 
                TO_NUMBER(NVL(JUMLAH_TUNJANGAN_SELISIH, 0)) JUMLAH_TUNJANGAN_SELISIH, 
                NVL(JUMLAH_INSENTIF * (PROSENTASE_INSENTIF / 100), 0) JUMLAH_INSENTIF
                FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR WHERE PEGAWAI_ID = pPegawaiId), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TAHUN ORDER BY GAJI_PERIODE_TAHUN_ID DESC;

m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_JumlahPPH NUMBER;
m_JumlahDibayarkan INTEGER;
m_LamaCutiTerbayar INTEGER;
m_PPH21Prosentase NUMBER := 0;
m_Query VARCHAR2(1000);

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;


        FOR recPegawai IN cTablePegawai LOOP        

        
        OPEN cTabelJumlahPenghasilan(recPegawai.PEGAWAI_ID, recPegawai.JUMLAH);
            
        FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
        CLOSE cTabelJumlahPenghasilan;

        IF recPegawai.LAMA_CUTI <= 0 THEN
            m_Jumlah := 0;
            m_JumlahPPH := 0;
            m_PPH21Prosentase := 0;    
            m_LamaCutiTerbayar := 0;        
        ELSE
           --uang cuti dikali jumlah hari cuti yang diambil
            m_Jumlah := m_Jumlah * NVL(recPegawai.KALI, 0) * (NVL(recPegawai.PROSENTASE, 0) / 100) * (recPegawai.LAMA_CUTI / 12);
            
            --m_Jumlah := m_Jumlah * NVL(recPegawai.KALI, 0) * (NVL(recPegawai.PROSENTASE, 0) / 100);
            m_JumlahPPH := m_Jumlah * NVL(recPegawai.POTONGAN_PPH, 0);
            m_PPH21Prosentase := NVL(recPegawai.POTONGAN_PPH, 0) * 100;        
            m_LamaCutiTerbayar := NVL(recPegawai.LAMA_CUTI, 0);
        END IF;
                           
        EXECUTE IMMEDIATE 'UPDATE PPI_GAJI.CUTI_TAHUNAN_DETIL SET
                           JUMLAH = ' || ROUND(NVL(m_Jumlah, 0)) || ', JUMLAH_POTONGAN = ' || ROUND(NVL(m_JumlahPPH, 0)) || ', PROSENTASE_POTONGAN = ' || NVL(m_PPH21Prosentase, 0) || ', LAMA_CUTI_TERBAYAR = ' || m_LamaCutiTerbayar || '
                           WHERE CUTI_TAHUNAN_DETIL_ID = ' || recPegawai.CUTI_TAHUNAN_DETIL_ID || '';           
        
        IF recPegawai.LAMA_CUTI_TOTAL < 12 THEN 
            -- LOCK APABILA SUDAH 12 MAKA TIDAK BISA DIPROSES UNTUK PROSES YANG ADA TUNDANYA
            EXECUTE IMMEDIATE 'UPDATE PPI_GAJI.CUTI_TAHUNAN SET
                               LAMA_CUTI = NVL(LAMA_CUTI, 0) + ' || recPegawai.LAMA_CUTI_SEKARANG  || '
                               WHERE CUTI_TAHUNAN_ID = ' || recPegawai.CUTI_TAHUNAN_ID || '';           
        END IF;
        
    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||m_Query);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_GAJI
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 

CURSOR cTablePenghasilanTerakhir IS
 SELECT 
   A.PEGAWAI_ID, A.NAMA, JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA
   FROM IMASYS_SIMPEG.PEGAWAI A LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG. PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND C.JENIS_PEGAWAI_ID = pJenisPegawaiId
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID WHERE (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5);

CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, GAJI_DIBERIKAN
    FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2) IS 
    SELECT 
       A.POTONGAN_KONDISI_ID, PREFIX, JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;
    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND NOT ANGSURAN = ANGSURAN_TERBAYAR;


CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;


CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM IMASYS_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;


CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2) IS
    SELECT IMASYS_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga) JUMLAH FROM DUAL;

CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN IMASYS_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');

        
gaji_json_obj           IMASYS.json.JSONStructObj; 
gaji_array              IMASYS.json.JSONArray;     
sumbangan_json_obj      IMASYS.json.JSONStructObj;
sumbangan_array         IMASYS.json.JSONArray;
potongan_json_obj       IMASYS.json.JSONStructObj;
potongan_array          IMASYS.json.JSONArray;
tanggungan_json_obj     IMASYS.json.JSONStructObj;
tanggungan_array        IMASYS.json.JSONArray;
potongan_lain_json_obj  IMASYS.json.JSONStructObj;
potongan_lain_array     IMASYS.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan IMASYS.string_fnc.t_array; 
m_ArrKali IMASYS.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;
            
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

m_MeritPMS             := 0;
m_UangKehadiran        := 0;
m_UangTransport        := 0;
m_UangMakan            := 0;
m_TunjanganJabatan     := 0;
m_TPPPMS               := 0;
m_TunjanganPerbantuan  := 0;
m_TunjanganInsentif    := 0;
m_Premi                := 0;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE IMASYS_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID = pJenisPegawaiId); 
     ELSE
          DELETE IMASYS_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID = pJenisPegawaiId); 
     
     END IF;
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        
        
        IMASYS.JSON.newJSONObj(gaji_json_obj);
    
        FOR recItemPenghasilan IN cTableItemPenghasilan(pJenisPegawaiId, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;


            IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI;
                m_MeritPMS := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
                m_UangKehadiran := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * recItemPenghasilan.KALI;                                            
                m_UangTransport := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * recItemPenghasilan.KALI;                                            
                m_UangMakan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
                m_TunjanganJabatan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                m_TPPPMS := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                m_TunjanganPerbantuan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_INSENTIF_KINERJA' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                m_Jumlah := 1;
                m_Premi := 1;
            END IF;
           
           IF pJenisPegawaiId = 4 THEN
          
                   gaji_array(1):= m_Jumlah;    
                   gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
           
           ELSE
               IF recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran THEN 
                   gaji_array(1):= m_Jumlah;    
                   gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
               END IF;
            END IF;
        END LOOP;  

     
       IMASYS.JSON.closeJSONObj(gaji_json_obj);


       IMASYS.JSON.newJSONObj(potongan_json_obj);
       
       FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID) LOOP  
           
       IF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
            OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
            FETCH cHitungTaspen INTO m_Jumlah;
            
            CLOSE cHitungTaspen;      
            m_Taspen := m_Jumlah; 
       ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN

            OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
            FETCH cHitungIuranPensiun INTO m_Jumlah;
            
            CLOSE cHitungIuranPensiun;      
            
            m_IuranPensiun := m_Jumlah;
       ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
            OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
            FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
            CLOSE cHitungIuranKesehatan;           
       ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
            m_Jumlah := 0;
       ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN
            m_Jumlah := 0;       
       ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
            m_Jumlah := 55000;       
       ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
            OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
            FETCH cHitungIuranSPPI INTO m_Jumlah;
            
            CLOSE cHitungIuranSPPI;                          
       ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
            m_Jumlah := (recPenghasilanTerakhir.JUMLAH_P3 * 5) / 100;                       
       ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
            m_Jumlah := recItemPotongan.JUMLAH;
       ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
            OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
            FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
            CLOSE cHitungPotonganKehadiran;  
            
            m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
       END IF;         
                  
           potongan_array(1):= m_Jumlah;    
           potongan_json_obj := IMASYS.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, IMASYS.JSON.addArray(potongan_array));
           
            
       END LOOP;

 

       IMASYS.JSON.closeJSONObj(potongan_json_obj);

        
       
       IMASYS.JSON.newJSONObj(sumbangan_json_obj);
       
       FOR recItemSumbangan IN cTableItemSumbangan(pJenisPegawaiId, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;
            
            
            IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
            OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
            FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
            CLOSE cTabelJumlahPenghasilan;
            
              
            ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                m_Jumlah := 1;
            ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
            
                m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                
            ELSE
                m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
            END IF;
            
            
            IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                m_ArrKali := IMASYS.string_fnc.split(recItemSumbangan.KALI,'/');    
                m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
            ELSE
                m_Kali := recItemSumbangan.KALI;
            END IF;
            
            
            IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                    m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                ELSE
                    m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                END IF;
            ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN


            OPEN cHitungPPH21(recPenghasilanTerakhir.GAJI_POKOK, m_MeritPMS, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_Taspen, m_IuranPensiun, recPenghasilanTerakhir.STATUS_KELUARGA);
            
            FETCH cHitungPPH21 INTO m_Jumlah;
            
            CLOSE cHitungPPH21;
 
            ELSE
                m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
            END IF;
                           
           sumbangan_array(1):= ROUND(m_Jumlah);    
           sumbangan_json_obj := IMASYS.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
       END LOOP;      

       IMASYS.JSON.closeJSONObj(sumbangan_json_obj);

                  
      IMASYS.JSON.newJSONObj(tanggungan_json_obj);
       
       FOR recItemTanggungan IN cTableItemTanggungan(pJenisPegawaiId, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;
            
            
            IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
            OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
            FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
            CLOSE cTabelJumlahPenghasilan;
            
              
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                m_Jumlah := 1;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
            END IF;

            
            IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                m_ArrKali := IMASYS.string_fnc.split(recItemTanggungan.KALI,'/');    
                m_Kali := SUBSTR(recItemTanggungan.KALI,1,1) / SUBSTR(recItemTanggungan.KALI,3,2);
            ELSE
                m_Kali := recItemTanggungan.KALI;
            END IF;
            
            m_Jumlah := m_Jumlah * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            

                           
           sumbangan_array(1):= CEIL(m_Jumlah);    
           tanggungan_json_obj := IMASYS.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
       END LOOP;      

       IMASYS.JSON.closeJSONObj(tanggungan_json_obj);
       
       IMASYS.JSON.newJSONObj(potongan_lain_json_obj);
       
       FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID) LOOP  
            
            m_Jumlah :=0;

            IF recItemPotonganLain.ANGSURAN_TERBAYAR = 0 THEN
            
                IF NVL(recItemPotonganLain.JUMLAH_AWAL_ANGSURAN, 0) = 0 THEN
                    m_Jumlah := recItemPotonganLain.JUMLAH_ANGSURAN;
                ELSE
                    m_Jumlah := recItemPotonganLain.JUMLAH_AWAL_ANGSURAN;
                END IF;
            ELSE
                m_Jumlah := recItemPotonganLain.JUMLAH_ANGSURAN;
            END IF;
       
           potongan_lain_array(1):= m_Jumlah;    
           potongan_lain_json_obj := IMASYS.JSON.addAttr(potongan_lain_json_obj, recItemPotonganLain.PREFIX, IMASYS.JSON.addArray(potongan_lain_array));
           
           
           --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
           IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                m_Jumlah := 1;
           ELSE
                EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_ID || '''';   
           END IF;
            
       END LOOP;      

       IMASYS.JSON.closeJSONObj(potongan_lain_json_obj);      

        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
        FETCH cHitungDanaPensiun INTO m_DanaPensiun;
            
        CLOSE cHitungDanaPensiun;           
           
     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
       
         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                   PEGAWAI_ID, DEPARTEMEN_ID, 
                                   BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN) 
                                VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                        ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                        ''' || REPLACE(IMASYS.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''')';
     ELSE

         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                   PEGAWAI_ID, DEPARTEMEN_ID, 
                                   BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                        ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';

     
     END IF;      

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_AWAL_BULAN;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_GAJI_AWAL_BULAN
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2)
         IS 

CURSOR cTablePenghasilanTerakhir IS

    SELECT 
   A.PEGAWAI_ID, NAMA, JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, KELAS
   FROM IMASYS_SIMPEG.PEGAWAI A LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
   INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND C.JENIS_PEGAWAI_ID = pJenisPegawaiId;


CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH
    FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND GAJI_DIBERIKAN = 'AWAL_BULAN' AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

my_movie_obj    IMASYS.json.JSONStructObj; /* Objeto -> informa¿s de um filme */
my_array        IMASYS.json.JSONArray;     /* Array com os g¿ros do filme */
pJumlah         NUMBER;       

BEGIN    


IF pDepartemenId = '' OR pDepartemenId IS NULL THEN
  DELETE IMASYS_GAJI.GAJI 
    WHERE BULANTAHUN = pBulanTahun;   
ELSE
  DELETE IMASYS_GAJI.GAJI 
    WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
        (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI WHERE DEPARTEMEN_ID = pDepartemenId); 
END IF;


    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        
        
        IMASYS.JSON.newJSONObj(my_movie_obj);
    
        FOR recItemPenghasilan IN cTableItemPenghasilan(pJenisPegawaiId, recPenghasilanTerakhir.KELAS) LOOP  
            
            pJumlah :=0;


            IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                pJumlah := recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                pJumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                pJumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_INSENTIF_KINERJA' THEN 
                pJumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
            ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                pJumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                pJumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
            END IF;
            
           my_array(1):= pJumlah;    
           my_movie_obj := IMASYS.JSON.addAttr(my_movie_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(my_array));
        
        END LOOP;  

     
       IMASYS.JSON.closeJSONObj(my_movie_obj);
       
       
     EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_AWAL_BULAN (
                               PEGAWAI_ID, DEPARTEMEN_ID, 
                               BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                            VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ' || pBulanTahun || ',
                                    ' || recPenghasilanTerakhir.KELAS || ', ' || recPenghasilanTerakhir.KELAS || ', ''' || REPLACE(IMASYS.JSON.JSON2String(my_movie_obj), '''', '"') || ''')';
      
    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_V2;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_GAJI_V2
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 

CURSOR cTablePenghasilanTerakhir IS

 SELECT 
   ROW_NUMBER() OVER (ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC) NO_URUT, A.PEGAWAI_ID, C.JENIS_PEGAWAI_ID, A.NAMA, JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA, PROSENTASE_TPP, PROSENTASE_MOBILITAS, 
   JUMLAH_PERUMAHAN, PROSENTASE_PERUMAHAN, JUMLAH_BBM, PROSENTASE_BBM, JUMLAH_TELEPON, PROSENTASE_TELEPON, JENIS_KELAMIN
   FROM IMASYS_SIMPEG.PEGAWAI A LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG. PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID WHERE (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5)
   AND C.JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC;
      
CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, GAJI_DIBERIKAN
    FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 

    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = 'D' AND
    JENIS_PEGAWAI_ID = 1 AND JENIS_POTONGAN = 'T' AND
    9 IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2) IS 
    SELECT 
       A.POTONGAN_KONDISI_ID, PREFIX, JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;

CURSOR cTablePotonganLainJSON(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS    
    SELECT 
       PREFIX, SUM(CASE WHEN ANGSURAN_TERBAYAR = 0 OR ANGSURAN_TERBAYAR = 1 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END) ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || pBulanProses, 'DDMMYYYY') BETWEEN TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') AND ADD_MONTHS(TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY'), ANGSURAN - 1) 
     AND (NOT ANGSURAN = ANGSURAN_TERBAYAR OR (ANGSURAN = ANGSURAN_TERBAYAR AND BULAN_AKHIR_BAYAR = pBulanProses ))
    GROUP BY PREFIX;

    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_PEGAWAI_ID, A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, 
       ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR, CASE WHEN ANGSURAN_TERBAYAR = 0 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') <= TO_DATE('01' || pBulanProses, 'DDMMYYYY') AND NOT ANGSURAN = ANGSURAN_TERBAYAR;
    
    
CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;


CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM IMASYS_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_CAPEG_PKWT ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2,
pJenisKelamin VARCHAR2,
pStatusKawin CHAR) IS
    SELECT IMASYS_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga, pJenisKelamin, pStatusKawin) JUMLAH FROM DUAL;

CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN IMASYS_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');

        
gaji_json_obj           IMASYS.json.JSONStructObj; 
gaji_array              IMASYS.json.JSONArray;     
sumbangan_json_obj      IMASYS.json.JSONStructObj;
sumbangan_array         IMASYS.json.JSONArray;
potongan_json_obj       IMASYS.json.JSONStructObj;
potongan_array          IMASYS.json.JSONArray;
tanggungan_json_obj     IMASYS.json.JSONStructObj;
tanggungan_array        IMASYS.json.JSONArray;
potongan_lain_json_obj  IMASYS.json.JSONStructObj;
potongan_lain_array     IMASYS.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan IMASYS.string_fnc.t_array; 
m_ArrKali IMASYS.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;

BEGIN    

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

END IF;
            
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

m_MeritPMS             := 0;
m_UangKehadiran        := 0;
m_UangTransport        := 0;
m_UangMakan            := 0;
m_TunjanganJabatan     := 0;
m_TPPPMS               := 0;
m_TunjanganPerbantuan  := 0;
m_TunjanganInsentif    := 0;
m_Premi                := 0;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE IMASYS_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     ELSE
          DELETE IMASYS_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     
     END IF;
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        
        
        IMASYS.JSON.newJSONObj(gaji_json_obj);
    
        FOR recItemPenghasilan IN cTableItemPenghasilan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;


            IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                m_Jumlah := ROUND(recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI);
                m_MeritPMS := ROUND(m_Jumlah);
            ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
                m_UangKehadiran := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * recItemPenghasilan.KALI;                                            
                m_UangTransport := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * recItemPenghasilan.KALI;                                            
                m_UangMakan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
                m_TunjanganJabatan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recPenghasilanTerakhir.PROSENTASE_TPP / 100) * recItemPenghasilan.KALI;                                            
                m_TPPPMS := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                m_TunjanganPerbantuan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_INSENTIF_KINERJA' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'MOBILITAS' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_MOBILITAS * (recPenghasilanTerakhir.PROSENTASE_MOBILITAS / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'PERUMAHAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_PERUMAHAN * (recPenghasilanTerakhir.PROSENTASE_PERUMAHAN / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'BBM' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_BBM * (recPenghasilanTerakhir.PROSENTASE_BBM / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TELEPON' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TELEPON * (recPenghasilanTerakhir.PROSENTASE_TELEPON / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                m_Jumlah := 1;
                m_Premi := 1;
            END IF;
           
           IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
          
                   gaji_array(1):= m_Jumlah;    
                   gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
           
           ELSE
               IF recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran THEN 
                   gaji_array(1):= m_Jumlah;    
                   gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
               END IF;
            END IF;
        END LOOP;  

     
       IMASYS.JSON.closeJSONObj(gaji_json_obj);


       IMASYS.JSON.newJSONObj(potongan_json_obj);
       
       FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID) LOOP  
           
       IF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
            OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
            FETCH cHitungTaspen INTO m_Jumlah;
            
            CLOSE cHitungTaspen;      
            m_Taspen := m_Jumlah; 
       ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
            OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
            FETCH cHitungIuranPensiun INTO m_Jumlah;
            
            CLOSE cHitungIuranPensiun;      
            
            m_IuranPensiun := m_Jumlah;
       ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
            OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
            FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
            CLOSE cHitungIuranKesehatan;           
       ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
            m_Jumlah := 0;
       ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN
            m_Jumlah := 0;       
       ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
            m_Jumlah := 55000;       
       ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
            OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
            FETCH cHitungIuranSPPI INTO m_Jumlah;
            
            CLOSE cHitungIuranSPPI;                          
       ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
            IF NVL(recPenghasilanTerakhir.JUMLAH_P3, 0) = 0 THEN
                m_Jumlah := (recPenghasilanTerakhir.JUMLAH_PENGHASILAN * 5) / 100;                               
            ELSE
                m_Jumlah := (recPenghasilanTerakhir.JUMLAH_P3 * 5) / 100;       
            END IF;                            
       ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
            m_Jumlah := recItemPotongan.JUMLAH;
       ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
            
            --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
            --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
            --CLOSE cHitungPotonganKehadiran;  
            
            --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
            m_Jumlah := 0;
       ELSE
            m_Jumlah := recItemPotongan.JUMLAH;       
       END IF;         
                  
           potongan_array(1):= m_Jumlah;    
           potongan_json_obj := IMASYS.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, IMASYS.JSON.addArray(potongan_array));
           
            
       END LOOP;

 

       IMASYS.JSON.closeJSONObj(potongan_json_obj);

        
       
       IMASYS.JSON.newJSONObj(sumbangan_json_obj);
       
       FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;
            
            
            IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
            OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
            FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
            CLOSE cTabelJumlahPenghasilan;
            
              
            ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                m_Jumlah := 1;
            ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
            
                m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                
            ELSE
                m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
            END IF;
            
            
            IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                m_ArrKali := IMASYS.string_fnc.split(recItemSumbangan.KALI,'/');    
                m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
            ELSE
                m_Kali := recItemSumbangan.KALI;
            END IF;
            
            
            IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                    m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                ELSE
                    m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                END IF;
            ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
            
            -- JIKA DIREKSI DAN KOMISARIS
            IF recPenghasilanTerakhir.KELAS = 0 THEN
                
                IF m_MeritPMS <= 5000000 THEN
                
                m_Jumlah := ROUND(m_MeritPMS * (15 / 85));                

                ELSE
                
                m_Jumlah := ROUND(m_MeritPMS * (25 / 75));                
                
                END IF;
            
            ELSE
                                
                OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                FETCH cHitungPPH21 INTO m_Jumlah;
            
                CLOSE cHitungPPH21;
            
                --m_Jumlah := m_MeritPMS; 

            END IF;
            
            ELSE
                m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
            END IF;
                           
           sumbangan_array(1):= ROUND(m_Jumlah);    
           sumbangan_json_obj := IMASYS.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
       END LOOP;      

       IMASYS.JSON.closeJSONObj(sumbangan_json_obj);

                  
      IMASYS.JSON.newJSONObj(tanggungan_json_obj);
       
       FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;
            
            
            IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
            OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
            FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
            CLOSE cTabelJumlahPenghasilan;
            
              
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                m_Jumlah := 1;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
            END IF;

            
            IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                m_ArrKali := IMASYS.string_fnc.split(recItemTanggungan.KALI,'/');    
                m_Kali := SUBSTR(recItemTanggungan.KALI,1,1) / SUBSTR(recItemTanggungan.KALI,3,2);
            ELSE
                m_Kali := recItemTanggungan.KALI;
            END IF;
            
            IF recItemTanggungan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                    m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                ELSE
                    m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                END IF;
            ELSE
                m_Jumlah := m_Jumlah * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            
            END IF;
                           
           sumbangan_array(1):= CEIL(m_Jumlah);    
           tanggungan_json_obj := IMASYS.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
       END LOOP;      

       IMASYS.JSON.closeJSONObj(tanggungan_json_obj);
       
       IMASYS.JSON.newJSONObj(potongan_lain_json_obj);

       FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  

           potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
           potongan_lain_json_obj := IMASYS.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, IMASYS.JSON.addArray(potongan_lain_array));
           
       
       END LOOP;  

       IMASYS.JSON.closeJSONObj(potongan_lain_json_obj);      
       
       --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
       FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
            m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
           --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
           IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                m_Jumlah := 1;
           ELSE
                EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

                EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                       LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                       JUMLAH) 
                                    VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   

           END IF;
            
       END LOOP;      
       
       m_DanaPensiun := 0;
       
       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 THEN

        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_PENGHASILAN);
            
        FETCH cHitungDanaPensiun INTO m_DanaPensiun;
            
        CLOSE cHitungDanaPensiun;           
       
       ELSIF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 THEN
       
        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
        FETCH cHitungDanaPensiun INTO m_DanaPensiun;
            
        CLOSE cHitungDanaPensiun;           
       
       END IF; 
          
     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
       
         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                   PEGAWAI_ID, DEPARTEMEN_ID, 
                                   BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN) 
                                VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                        ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                        ''' || REPLACE(IMASYS.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''')';
     ELSE

         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                   PEGAWAI_ID, DEPARTEMEN_ID, 
                                   BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                        ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';

     
     END IF;      

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_V3;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_GAJI_V3
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 

CURSOR cTablePenghasilanTerakhir IS

   SELECT 
   ROW_NUMBER() OVER (ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC) NO_URUT, 
   A.PEGAWAI_ID, C.JENIS_PEGAWAI_ID, A.NAMA, A.DEPARTEMEN_ID DEPARTEMEN_ID_PEGAWAI, IMASYS_SIMPEG.AMBIL_UNIT_KERJA(A.DEPARTEMEN_ID) DEPARTEMEN, D.JABATAN_ID, D.NAMA JABATAN,
   JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA, PROSENTASE_TPP, PROSENTASE_MOBILITAS, 
   JUMLAH_PERUMAHAN, PROSENTASE_PERUMAHAN, JUMLAH_BBM, PROSENTASE_BBM, JUMLAH_TELEPON, PROSENTASE_TELEPON, JENIS_KELAMIN, PPH, NPWP
   FROM IMASYS_SIMPEG.PEGAWAI A LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG. PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID WHERE (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5)
   AND C.JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC;
      
CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, CASE WHEN JENIS_PEGAWAI_ID = 6 THEN 'AWAL_BULAN' ELSE GAJI_DIBERIKAN END GAJI_DIBERIKAN
    FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


CURSOR cTableItemTanggunganPrefix(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR, pPrefix IN VARCHAR2) IS 

    SELECT JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND PREFIX = pPrefix AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 

    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2) IS 
    SELECT 
       A.POTONGAN_KONDISI_ID, PREFIX, JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;

CURSOR cTablePotonganLainJSON(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS    
    SELECT 
       PREFIX, SUM(CASE WHEN ANGSURAN_TERBAYAR = 0 OR ANGSURAN_TERBAYAR = 1 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END) ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || pBulanProses, 'DDMMYYYY') BETWEEN TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') AND ADD_MONTHS(TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY'), ANGSURAN - 1) 
     AND (NOT ANGSURAN = ANGSURAN_TERBAYAR OR (ANGSURAN = ANGSURAN_TERBAYAR AND BULAN_AKHIR_BAYAR = pBulanProses ))
    GROUP BY PREFIX;

    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_PEGAWAI_ID, A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, 
       ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR, CASE WHEN ANGSURAN_TERBAYAR = 0 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') <= TO_DATE('01' || pBulanProses, 'DDMMYYYY') AND NOT ANGSURAN = ANGSURAN_TERBAYAR;
    
    
CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;


CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM IMASYS_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_CAPEG_PKWT ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2,
pJenisKelamin VARCHAR2,
pStatusKawin CHAR) IS
    SELECT IMASYS_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga, pJenisKelamin, pStatusKawin) JUMLAH FROM DUAL;
    
CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN IMASYS_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');

CURSOR cPerhitunganPPH(pJenisPegawaiId IN INTEGER, pKelas VARCHAR2, pNPWP IN VARCHAR2) IS
SELECT JENIS_PERHITUNGAN, DECODE(NVL(pNPWP, 'X'), 'X', JUMLAH_TANPA_NPWP, JUMLAH_NPWP) JUMLAH_NPWP  FROM IMASYS_GAJI.PERHITUNGAN_PPH
                WHERE JENIS_PENGHASILAN = 'GAJI' AND JENIS_PEGAWAI_ID = pJenisPegawaiId AND pKelas IN (SELECT REGEXP_SUBSTR(KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);
        
gaji_json_obj           IMASYS.json.JSONStructObj; 
gaji_array              IMASYS.json.JSONArray;     
sumbangan_json_obj      IMASYS.json.JSONStructObj;
sumbangan_array         IMASYS.json.JSONArray;
potongan_json_obj       IMASYS.json.JSONStructObj;
potongan_array          IMASYS.json.JSONArray;
tanggungan_json_obj     IMASYS.json.JSONStructObj;
tanggungan_array        IMASYS.json.JSONArray;
potongan_lain_json_obj  IMASYS.json.JSONStructObj;
potongan_lain_array     IMASYS.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan IMASYS.string_fnc.t_array; 
m_ArrKali IMASYS.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;
m_JumlahJHT             VARCHAR(20);


BEGIN    

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

END IF;
            
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

m_MeritPMS             := 0;
m_UangKehadiran        := 0;
m_UangTransport        := 0;
m_UangMakan            := 0;
m_TunjanganJabatan     := 0;
m_TPPPMS               := 0;
m_TunjanganPerbantuan  := 0;
m_TunjanganInsentif    := 0;
m_Premi                := 0;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE IMASYS_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     ELSE
          DELETE IMASYS_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     
     END IF;
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        
        
        IMASYS.JSON.newJSONObj(gaji_json_obj);
    
        FOR recItemPenghasilan IN cTableItemPenghasilan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;


            IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                m_Jumlah := ROUND(recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI);
                m_MeritPMS := ROUND(m_Jumlah);
            ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
                m_UangKehadiran := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * recItemPenghasilan.KALI;                                            
                m_UangTransport := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * recItemPenghasilan.KALI;                                            
                m_UangMakan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
                m_TunjanganJabatan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recPenghasilanTerakhir.PROSENTASE_TPP / 100) * recItemPenghasilan.KALI;                                            
                m_TPPPMS := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                m_TunjanganPerbantuan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_INSENTIF_KINERJA' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'MOBILITAS' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_MOBILITAS * (recPenghasilanTerakhir.PROSENTASE_MOBILITAS / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'PERUMAHAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_PERUMAHAN * (recPenghasilanTerakhir.PROSENTASE_PERUMAHAN / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'BBM' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_BBM * (recPenghasilanTerakhir.PROSENTASE_BBM / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TELEPON' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TELEPON * (recPenghasilanTerakhir.PROSENTASE_TELEPON / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                m_Jumlah := 1;
                m_Premi := 1;
            END IF;
           
           IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
          
                   gaji_array(1):= m_Jumlah;    
                   gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
           
           ELSE
               IF recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran THEN 
                   gaji_array(1):= m_Jumlah;    
                   gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
               END IF;
            END IF;
        END LOOP;  

     
       IMASYS.JSON.closeJSONObj(gaji_json_obj);


       IMASYS.JSON.newJSONObj(potongan_json_obj);
       
       FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID) LOOP  
           
       IF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
            OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
            FETCH cHitungTaspen INTO m_Jumlah;
            
            CLOSE cHitungTaspen;      
            m_Taspen := m_Jumlah; 
       ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
            OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
            FETCH cHitungIuranPensiun INTO m_Jumlah;
            
            CLOSE cHitungIuranPensiun;      
            
            m_IuranPensiun := m_Jumlah;
       ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
            OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
            FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
            CLOSE cHitungIuranKesehatan;      
       ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
            m_Jumlah := 0;
       ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN

       -- ASURANSI_JIWASRAYA SEBENARNYA ADALAH JAMINAN HARI TUA !!!!!!!!!!!!!!!!!!     
           IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
               m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
           ELSE
           
               OPEN cTableItemTanggunganPrefix(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK, 'JAMINAN_HARI_TUA');
               FETCH cTableItemTanggunganPrefix INTO m_JumlahJHT;
               CLOSE cTableItemTanggunganPrefix;            
           
               OPEN cTabelJumlahPenghasilan(m_JumlahJHT, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
               FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
               CLOSE cTabelJumlahPenghasilan;            
               m_Jumlah := (2 / 100) * m_Jumlah;
           END IF;

       ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
            m_Jumlah := 55000;       
       ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
            OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
            FETCH cHitungIuranSPPI INTO m_Jumlah;
            
            CLOSE cHitungIuranSPPI;                          
       ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
            IF NVL(recPenghasilanTerakhir.JUMLAH_P3, 0) = 0 THEN
                m_Jumlah := (recPenghasilanTerakhir.JUMLAH_PENGHASILAN * 5) / 100;                               
            ELSE
                m_Jumlah := (recPenghasilanTerakhir.JUMLAH_P3 * 5) / 100;       
            END IF;                            
       ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
            m_Jumlah := recItemPotongan.JUMLAH;
       ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
            -- ABSENSI DINAS BISA DIGUNAKAN UNTUK SEGALA HAL
            /*
           IF m_BulanProses = '032013' OR m_BulanProses = '042013' THEN
           
               IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                   m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
               ELSE
                   OPEN cTabelJumlahPenghasilan('0101', m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                   FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                   CLOSE cTabelJumlahPenghasilan;            
                   m_Jumlah := (2 / 100) * m_Jumlah;
               END IF;
           
               IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                     IF recPenghasilanTerakhir.PEGAWAI_ID = 1414 THEN
                        m_Jumlah := m_Jumlah * 1;
                     ELSE
                        m_Jumlah := m_Jumlah * 3;
                     END IF;
               ELSE
                     m_Jumlah := m_Jumlah * 2;           
               END IF;

           END IF;           
            */
            --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
            --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
            --CLOSE cHitungPotonganKehadiran;  
            
            --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
            m_Jumlah := 0;
       ELSE
            m_Jumlah := recItemPotongan.JUMLAH;       
       END IF;         
                  
           potongan_array(1):= ROUND(m_Jumlah);    
           potongan_json_obj := IMASYS.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, IMASYS.JSON.addArray(potongan_array));
           
            
       END LOOP;

       
       IMASYS.JSON.closeJSONObj(potongan_json_obj);
        
       
       IMASYS.JSON.newJSONObj(sumbangan_json_obj);
       
       FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;
            
            
            IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
            OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
            FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
            CLOSE cTabelJumlahPenghasilan;
            
              
            ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                m_Jumlah := 1;
            ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
            
                m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                
            ELSE
                m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
            END IF;
            
            
            IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                m_ArrKali := IMASYS.string_fnc.split(recItemSumbangan.KALI,'/');    
                m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
            ELSE
                m_Kali := recItemSumbangan.KALI;
            END IF;
            
            
            IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                    m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                ELSE
                    m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                END IF;
            ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
                           
                IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                
                    IF recPenghasilanTerakhir.JABATAN_ID = 105 THEN
                    
                        m_Jumlah := (m_MeritPMS * 30) / 70;
                    
                    ELSIF recPenghasilanTerakhir.JABATAN_ID = 106 THEN  
                        
                        m_Jumlah := (m_MeritPMS * 30) / 70;
                    
                    ELSIF recPenghasilanTerakhir.JABATAN_ID = 107 THEN     
                   
                        m_Jumlah := (m_MeritPMS * 25) / 75;
                        
                    ELSIF recPenghasilanTerakhir.JABATAN_ID = 108 THEN  
                    
                        m_Jumlah := (m_MeritPMS * 15) / 85;
                          
                    END IF;
                    
                
                ELSE
                
                    FOR recPerhitunganPPH IN cPerhitunganPPH(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.NPWP) LOOP   
            
                        IF recPerhitunganPPH.JENIS_PERHITUNGAN = 'GROSSUP' THEN
                            OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                            FETCH cHitungPPH21 INTO m_Jumlah;
            
                            CLOSE cHitungPPH21;
                        ELSIF recPerhitunganPPH.JENIS_PERHITUNGAN = 'PROSENTASE' THEN
                    
                            m_Jumlah := m_MeritPMS * recPerhitunganPPH.JUMLAH_NPWP;
                        
                        END IF;

                    END LOOP;   
                    
                END IF;
                            
            ELSE
                m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
            END IF;
                           
           sumbangan_array(1):= ROUND(m_Jumlah);    
           sumbangan_json_obj := IMASYS.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
       END LOOP;      

       IMASYS.JSON.closeJSONObj(sumbangan_json_obj);

                  
      IMASYS.JSON.newJSONObj(tanggungan_json_obj);
       
       FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;
            
            IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
            OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
            FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
            CLOSE cTabelJumlahPenghasilan;
            
              
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                m_Jumlah := 1;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '05' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
            END IF;

            
            IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                m_ArrKali := IMASYS.string_fnc.split(recItemTanggungan.KALI,'/');    
                m_Kali := SUBSTR(recItemTanggungan.KALI,1,2) / SUBSTR(recItemTanggungan.KALI,4,3);
            ELSE
                m_Kali := recItemTanggungan.KALI;
            END IF;
 
            IF recItemTanggungan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                    m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                ELSE
                    m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                END IF;
            ELSE 
            m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            
            END IF;
                           
           sumbangan_array(1):= CEIL(m_Jumlah);    
           tanggungan_json_obj := IMASYS.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
       END LOOP;      

       IMASYS.JSON.closeJSONObj(tanggungan_json_obj);
       
       IMASYS.JSON.newJSONObj(potongan_lain_json_obj);

       FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  

           potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
           potongan_lain_json_obj := IMASYS.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, IMASYS.JSON.addArray(potongan_lain_array));
           
       
       END LOOP;  

       IMASYS.JSON.closeJSONObj(potongan_lain_json_obj);      
       
       --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
       FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
            m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
           --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
           IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                m_Jumlah := 1;
           ELSE
                EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

                EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                       LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                       JUMLAH) 
                                    VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   

           END IF;
            
       END LOOP;      
       
       m_DanaPensiun := 0;
       
       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 THEN

        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_PENGHASILAN);
            
        FETCH cHitungDanaPensiun INTO m_DanaPensiun;
            
        CLOSE cHitungDanaPensiun;           
       
       ELSIF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 THEN
       
        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
        FETCH cHitungDanaPensiun INTO m_DanaPensiun;
            
        CLOSE cHitungDanaPensiun;           
       
       END IF; 
          
     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
       
         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                   PEGAWAI_ID, DEPARTEMEN_ID, 
                                   BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN, DEPARTEMEN, JABATAN_ID, JABATAN) 
                                VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ''' || recPenghasilanTerakhir.DEPARTEMEN_ID_PEGAWAI || ''', ''' || pBulanTahun || ''',
                                        ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                        ''' || REPLACE(IMASYS.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', 
                                        ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''',
                                        ''' || recPenghasilanTerakhir.DEPARTEMEN || ''', ''' || recPenghasilanTerakhir.JABATAN_ID || ''', ''' || recPenghasilanTerakhir.JABATAN || ''')';
     ELSE

         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                   PEGAWAI_ID, DEPARTEMEN_ID, 
                                   BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                        ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';

     
     END IF;      

    END LOOP;    


         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_AWAL_BULAN_LOG (
                               PERIODE, JENIS_PEGAWAI_ID, TANGGAL_PROSES) 
                            VALUES (''' || pBulanTahun || ''', ''' || pJenisPegawaiId || ''', SYSDATE)';

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_V4;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_GAJI_V4
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 

/* SETUP DATA PEGAWAI, PENGHASILAN PEGAWAI, JABATAN (UNTUK KEPERLUAN PPH21), PANGKAT (UNTUK KEPERLUAN PPH21) DAN STATUS KELUARGA (UNTUK KEPERLUAN PPH21) */
CURSOR cTablePenghasilanTerakhir IS

   SELECT 
   ROW_NUMBER() OVER (ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC) NO_URUT, 
   A.PEGAWAI_ID, NVL((SELECT STATUS_BAYAR FROM IMASYS_GAJI.GAJI_AWAL_BULAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND BULANTAHUN = pBulanTahun), 0) STATUS_BAYAR,
   IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) JENIS_PEGAWAI_ID, A.NAMA, A.DEPARTEMEN_ID DEPARTEMEN_ID_PEGAWAI, IMASYS_SIMPEG.AMBIL_UNIT_KERJA(A.DEPARTEMEN_ID) DEPARTEMEN, D.JABATAN_ID, D.NAMA JABATAN,
   JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA, PROSENTASE_TPP, PROSENTASE_MOBILITAS, 
   JUMLAH_PERUMAHAN, PROSENTASE_PERUMAHAN, JUMLAH_BBM, PROSENTASE_BBM, JUMLAH_TELEPON, PROSENTASE_TELEPON, JENIS_KELAMIN, PPH, NPWP
   FROM IMASYS_SIMPEG.PEGAWAI A 
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanTahun, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
   LEFT JOIN IMASYS_SIMPEG. PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID
   LEFT JOIN (   SELECT A.PEGAWAI_ID, 
                 CASE WHEN IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) = 3 THEN 
                       CASE WHEN NVL(TANGGAL_KONTRAK_AKHIR, SYSDATE) < TO_DATE(pBulanTahun, 'MMYYYY') THEN 0 ELSE 1 END  
                 ELSE 1
                  END STATUS_KONTRAK  
                 FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
   WHERE (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) AND G.STATUS_KONTRAK = 1 
          AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC;
      
/* SETUP ITEM PENGHASILAN YANG DIPEROLEH SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   
CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, CASE WHEN JENIS_PEGAWAI_ID = 6 THEN 'AWAL_BULAN' ELSE GAJI_DIBERIKAN END GAJI_DIBERIKAN
    FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM SUMBANGAN YANG DIBERIKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggunganPrefix(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR, pPrefix IN VARCHAR2) IS 

    SELECT JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND PREFIX = pPrefix AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 

    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM POTONGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELOMPOK, DAN PEGAWAI YBS */   

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2, pJenisPegawai IN INTEGER, pKelompok IN CHAR) IS 
    SELECT 
       A.POTONGAN_KONDISI_ID, B.PREFIX, A.JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI C ON B.POTONGAN_KONDISI_ID = C.POTONGAN_KONDISI_ID AND C.JENIS_PEGAWAI_ID = pJenisPegawai  AND C.KELOMPOK = pKelompok
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;

/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS  OUTPUT JSON */   

CURSOR cTablePotonganLainJSON(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS    
    SELECT 
       PREFIX, SUM(CASE WHEN ANGSURAN_TERBAYAR = 0 OR ANGSURAN_TERBAYAR = 1 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END) ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || pBulanProses, 'DDMMYYYY') BETWEEN TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') AND ADD_MONTHS(TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY'), ANGSURAN - 1) 
     AND (NOT ANGSURAN = ANGSURAN_TERBAYAR OR (ANGSURAN = ANGSURAN_TERBAYAR AND BULAN_AKHIR_BAYAR = pBulanProses ))
    GROUP BY PREFIX;


/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS */   
    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_PEGAWAI_ID, A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, 
       ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR, CASE WHEN ANGSURAN_TERBAYAR = 0 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') <= TO_DATE('01' || pBulanProses, 'DDMMYYYY') AND NOT ANGSURAN = ANGSURAN_TERBAYAR;
    

/* SETUP IURAN PENSIUN */   
    
CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP DANA PENSIUN */   
    
CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP TASPEN */  

CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN KESEHATAN */  
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN SPPI */  
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM IMASYS_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

/* SETUP UNIT LINK */  

CURSOR cHitungUnitLink(pPegawaiId IN VARCHAR2) IS    
    
    SELECT JUMLAH, KETERANGAN FROM IMASYS_GAJI.ASURANSI_PEGAWAI A INNER JOIN IMASYS_GAJI.ASURANSI B ON A.ASURANSI_ID = B.ASURANSI_ID   
    WHERE PEGAWAI_ID = pPegawaiId;


/* SETUP BESARAN PENGHASILAN SESUAI KODE */  

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

/* SETUP PERIODE CAPEG  PKWT */  

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_CAPEG_PKWT ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

/* SETUP PERIODE SELAIN CAPEG  PKWT */  

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

/* SETUP PPH21 */  

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2,
pJenisKelamin VARCHAR2,
pStatusKawin CHAR) IS
    SELECT IMASYS_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga, pJenisKelamin, pStatusKawin) JUMLAH FROM DUAL;
    
CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN IMASYS_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');

/* SETUP PPH DEKOM */  

CURSOR cPerhitunganPPHDekom(pKode IN VARCHAR2) IS
    SELECT NVL(TO_NUMBER(NILAI), 0) FROM IMASYS.SETTING_APLIKASI WHERE KODE = pKode;

/* SETUP PERIODE SELAIN DEKOM */  

CURSOR cPerhitunganPPH(pJenisPegawaiId IN INTEGER, pKelas VARCHAR2, pNPWP IN VARCHAR2) IS
SELECT JENIS_PERHITUNGAN, DECODE(NVL(pNPWP, 'X'), 'X', JUMLAH_TANPA_NPWP, JUMLAH_NPWP) JUMLAH_NPWP, JUMLAH  FROM IMASYS_GAJI.PERHITUNGAN_PPH
                WHERE JENIS_PENGHASILAN = 'GAJI' AND JENIS_PEGAWAI_ID = pJenisPegawaiId AND pKelas IN (SELECT REGEXP_SUBSTR(KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);
        
gaji_json_obj           IMASYS.json.JSONStructObj; 
gaji_array              IMASYS.json.JSONArray;     
sumbangan_json_obj      IMASYS.json.JSONStructObj;
sumbangan_array         IMASYS.json.JSONArray;
potongan_json_obj       IMASYS.json.JSONStructObj;
potongan_array          IMASYS.json.JSONArray;
tanggungan_json_obj     IMASYS.json.JSONStructObj;
tanggungan_array        IMASYS.json.JSONArray;
potongan_lain_json_obj  IMASYS.json.JSONStructObj;
potongan_lain_array     IMASYS.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan IMASYS.string_fnc.t_array; 
m_ArrKali IMASYS.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;
m_JumlahJHT             VARCHAR(20);
m_Mobilitas             NUMBER;
m_Perumahan             NUMBER;
m_BBM                   NUMBER;
m_Telepon               NUMBER;
m_PphDekom              NUMBER;
m_UnitLink              VARCHAR(100);

BEGIN    

/* JENIS PEGAWAI ID 3 = PKWT DAN 5 = PTTPK */  

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' OR pJenisPegawaiId = '1' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

END IF;
            
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE IMASYS_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun  AND 
                 NOT NVL(STATUS_BAYAR, 0) = 1 AND
                 PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI A WHERE IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     ELSE
          DELETE IMASYS_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     
     END IF;
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        

        
        IF NVL(recPenghasilanTerakhir.STATUS_BAYAR, 0)  = 0 THEN
            
    
                m_MeritPMS             := 0;
                m_UangKehadiran        := 0;
                m_UangTransport        := 0;
                m_UangMakan            := 0;
                m_TunjanganJabatan     := 0;
                m_TPPPMS               := 0;
                m_TunjanganPerbantuan  := 0;
                m_TunjanganInsentif    := 0;
                m_Premi                := 0;
                m_Mobilitas            := 0;
                m_Perumahan            := 0;
                m_BBM                  := 0;
                m_Telepon              := 0;
                 m_Taspen              := 0;
                m_IuranPensiun         := 0;
                m_UnitLink             := '';
               
                IMASYS.JSON.newJSONObj(gaji_json_obj);
    
                FOR recItemPenghasilan IN cTableItemPenghasilan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;

                    /* TAMPUNG KOMPONEN GAJI TERMASUK NILAINYA KE DALAM VARIABLE JSON */
                    IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                        m_Jumlah := ROUND(recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI);
                        m_MeritPMS := ROUND(m_Jumlah);
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
                        m_UangKehadiran := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * recItemPenghasilan.KALI;                                            
                        m_UangTransport := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * recItemPenghasilan.KALI;                                            
                        m_UangMakan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
                        m_TunjanganJabatan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recPenghasilanTerakhir.PROSENTASE_TPP / 100) * recItemPenghasilan.KALI;                                            
                        m_TPPPMS := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                        m_TunjanganPerbantuan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_INSENTIF_KINERJA' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
                        m_TunjanganInsentif := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'MOBILITAS' THEN 
                        -- MOBILITAS UNTUK PERBANTUAN DIPROSES TENGAH BULAN SEDANGKAN DIREKSI AWAL BULAN
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 THEN
                            m_Jumlah := 0;
                        ELSE
                            m_Jumlah := recPenghasilanTerakhir.JUMLAH_MOBILITAS * (recPenghasilanTerakhir.PROSENTASE_MOBILITAS / 100) * recItemPenghasilan.KALI;   
                        END IF;
                        m_Mobilitas := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PERUMAHAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_PERUMAHAN * (recPenghasilanTerakhir.PROSENTASE_PERUMAHAN / 100) * recItemPenghasilan.KALI;   
                        m_Perumahan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'BBM' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_BBM * (recPenghasilanTerakhir.PROSENTASE_BBM / 100) * recItemPenghasilan.KALI;   
                        m_BBM := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TELEPON' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TELEPON * (recPenghasilanTerakhir.PROSENTASE_TELEPON / 100) * recItemPenghasilan.KALI;   
                        m_Telepon := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                        m_Jumlah := 1;
                        m_Premi := 1;
                    END IF;
           
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
          
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
           
                   ELSE
                       IF recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran THEN 
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
                       END IF;
                    END IF;
                END LOOP;  

     
               IMASYS.JSON.closeJSONObj(gaji_json_obj);

        
               /* TAMPUNG KOMPONEN POTONGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */
       
               IMASYS.JSON.newJSONObj(potongan_json_obj);
       
               FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID, recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELOMPOK) LOOP  
           
               IF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
                    OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungTaspen INTO m_Jumlah;
            
                    CLOSE cHitungTaspen;      
                    m_Taspen := m_Jumlah; 
               ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
                    OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
                    FETCH cHitungIuranPensiun INTO m_Jumlah;
            
                    CLOSE cHitungIuranPensiun;      
            
                    m_IuranPensiun := m_Jumlah;
               ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
                    OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
                    CLOSE cHitungIuranKesehatan;      
               ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
                    m_Jumlah := 0;
               ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN

               -- ASURANSI_JIWASRAYA SEBENARNYA ADALAH JAMINAN HARI TUA !!!!!!!!!!!!!!!!!!     
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                       m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                   ELSE
           
                       OPEN cTableItemTanggunganPrefix(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK, 'JAMINAN_HARI_TUA');
                       FETCH cTableItemTanggunganPrefix INTO m_JumlahJHT;
                       CLOSE cTableItemTanggunganPrefix;            
           
                       OPEN cTabelJumlahPenghasilan(m_JumlahJHT, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                       FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                       CLOSE cTabelJumlahPenghasilan;            
                       m_Jumlah := (2 / 100) * m_Jumlah;
                   END IF;

               ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
                    m_Jumlah := 55000;       
               ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
                    OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungIuranSPPI INTO m_Jumlah;
            
                    CLOSE cHitungIuranSPPI;                          
               ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
       
                    IF NVL(recPenghasilanTerakhir.JUMLAH_P3, 0) = 0 THEN

                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_PENGHASILAN);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;  
                                          
                    ELSE
          
                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;           
      
                    END IF;                            
               ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
                    m_Jumlah := recItemPotongan.JUMLAH;
               ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
                    IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungUnitLink INTO m_Jumlah, m_UnitLink;
            
                    CLOSE cHitungUnitLink;             
                    ELSE
                        m_Jumlah := 0;
                    END IF;
                   /*
               --   DIGUNAKAN UNTUK PROSES UNIT LINK
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungUnitLink INTO m_Jumlah;
            
                    CLOSE cHitungUnitLink;             
            
                    -- ABSENSI DINAS BISA DIGUNAKAN UNTUK SEGALA HAL
        
                   IF m_BulanProses = '032013' OR m_BulanProses = '042013' THEN
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                           m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                       ELSE
                           OPEN cTabelJumlahPenghasilan('0101', m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                           FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                           CLOSE cTabelJumlahPenghasilan;            
                           m_Jumlah := (2 / 100) * m_Jumlah;
                       END IF;
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                             IF recPenghasilanTerakhir.PEGAWAI_ID = 1414 THEN
                                m_Jumlah := m_Jumlah * 1;
                             ELSE
                                m_Jumlah := m_Jumlah * 3;
                             END IF;
                       ELSE
                             m_Jumlah := m_Jumlah * 2;           
                       END IF;

                   END IF;           
                    */
                    --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
                    --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
                    --CLOSE cHitungPotonganKehadiran;  
            
                    --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
               ELSE
                    m_Jumlah := recItemPotongan.JUMLAH;       
               END IF;         
                  
                   potongan_array(1):= ROUND(m_Jumlah);    
                   potongan_json_obj := IMASYS.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, IMASYS.JSON.addArray(potongan_array));
           
            
               END LOOP;

       
               IMASYS.JSON.closeJSONObj(potongan_json_obj);
       
       
               /* TAMPUNG KOMPONEN SUMBANGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */ 
       
               IMASYS.JSON.newJSONObj(sumbangan_json_obj);
       
               FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
            
                    IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
            
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                
                    ELSE
                        m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
                    END IF;
            
            
                    IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                        m_ArrKali := IMASYS.string_fnc.split(recItemSumbangan.KALI,'/');    
                        m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
                    ELSE
                        m_Kali := recItemSumbangan.KALI;
                    END IF;
            
            
                    IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
                           
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                
                 
                            IF recPenghasilanTerakhir.JABATAN_ID = 105 THEN
                    
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOMUT');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 106 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 107 THEN     
                   
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_SEKKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                        
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 108 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_STAKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom;
                          
                            END IF;
                    
                            --m_Jumlah := m_Perumahan;
                            m_Jumlah :=(NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * m_PphDekom;
                
                        ELSE
                
                            FOR recPerhitunganPPH IN cPerhitunganPPH(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.NPWP) LOOP   
            
                                IF recPerhitunganPPH.JENIS_PERHITUNGAN = 'GROSSUP' THEN
                                    OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                                    FETCH cHitungPPH21 INTO m_Jumlah;
            
                                    CLOSE cHitungPPH21;
                                ELSIF recPerhitunganPPH.JENIS_PERHITUNGAN = 'PROSENTASE' THEN
                            
                                    IF recPerhitunganPPH.JUMLAH = '0111' THEN
                                        m_Jumlah := (NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * recPerhitunganPPH.JUMLAH_NPWP;
                                    ELSE                               
                                        m_Jumlah := m_MeritPMS * recPerhitunganPPH.JUMLAH_NPWP;
                                    END IF;
                        
                                END IF;

                            END LOOP;   
                    
                        END IF;
                            
                    ELSE
                        m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                           
                   sumbangan_array(1):= ROUND(m_Jumlah);    
                   sumbangan_json_obj := IMASYS.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               IMASYS.JSON.closeJSONObj(sumbangan_json_obj);

              /* TAMPUNG KOMPONEN TANGGUNGAN PERUSAHAAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */  
                  
              IMASYS.JSON.newJSONObj(tanggungan_json_obj);
       
               FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
                    IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                        m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                    END IF;

            
                    IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                        m_ArrKali := IMASYS.string_fnc.split(recItemTanggungan.KALI,'/');    
                        m_Kali := SUBSTR(recItemTanggungan.KALI,1,2) / SUBSTR(recItemTanggungan.KALI,4,3);
                    ELSE
                        m_Kali := recItemTanggungan.KALI;
                    END IF;
 
                    IF recItemTanggungan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSE 
                    m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                           
                   sumbangan_array(1):= CEIL(m_Jumlah);    
                   tanggungan_json_obj := IMASYS.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               IMASYS.JSON.closeJSONObj(tanggungan_json_obj);
       
               IMASYS.JSON.newJSONObj(potongan_lain_json_obj);

               FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  

                   potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
                   potongan_lain_json_obj := IMASYS.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, IMASYS.JSON.addArray(potongan_lain_array));
           
       
               END LOOP;  

               IMASYS.JSON.closeJSONObj(potongan_lain_json_obj);      
       
               --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
               FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
                    m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
                   --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
                   IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                        m_Jumlah := 1;
                   ELSE
                        EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

                        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                               LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                               JUMLAH) 
                                            VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   

                   END IF;
            
               END LOOP;      
       
               m_DanaPensiun := 0;
       
          
             IF pWaktuPembayaran = 'AWAL_BULAN' THEN
       
                 EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN, DEPARTEMEN, JABATAN_ID, JABATAN, ASURANSI_KODE) 
                                        VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ''' || recPenghasilanTerakhir.DEPARTEMEN_ID_PEGAWAI || ''', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                                ''' || REPLACE(IMASYS.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', 
                                                ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''',
                                                ''' || recPenghasilanTerakhir.DEPARTEMEN || ''', ''' || recPenghasilanTerakhir.JABATAN_ID || ''', ''' || recPenghasilanTerakhir.JABATAN || ''', ''' || m_UnitLink || ''')';
             ELSE

                 EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                        VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';

     
             END IF;      
        
        
        ELSE
        
            EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' SET NO_URUT = ' || recPenghasilanTerakhir.NO_URUT || ' WHERE PEGAWAI_ID = ' || recPenghasilanTerakhir.PEGAWAI_ID || ' AND BULANTAHUN = ''' || pBulanTahun || '''';
        
        END IF;
         

    END LOOP;    


         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_AWAL_BULAN_LOG (
                               PERIODE, JENIS_PEGAWAI_ID, TANGGAL_PROSES) 
                            VALUES (''' || pBulanTahun || ''', ''' || pJenisPegawaiId || ''', SYSDATE)';

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_V5;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_GAJI_V5
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 
/* PADA KALKULASI PENGHASILAN V5 INI MERUPAKAN TAMBAHAN UNTUK PERHITUNGAN BPJS KESEHATAN
/* SETUP DATA PEGAWAI, PENGHASILAN PEGAWAI, JABATAN (UNTUK KEPERLUAN PPH21), PANGKAT (UNTUK KEPERLUAN PPH21) DAN STATUS KELUARGA (UNTUK KEPERLUAN PPH21) */
CURSOR cTablePenghasilanTerakhir IS

   SELECT 
   ROW_NUMBER() OVER (ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC) NO_URUT, 
   A.PEGAWAI_ID, NVL((SELECT STATUS_BAYAR FROM IMASYS_GAJI.GAJI_AWAL_BULAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND BULANTAHUN = pBulanTahun), 0) STATUS_BAYAR,
   IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) JENIS_PEGAWAI_ID, A.NAMA, A.DEPARTEMEN_ID DEPARTEMEN_ID_PEGAWAI, IMASYS_SIMPEG.AMBIL_UNIT_KERJA(A.DEPARTEMEN_ID) DEPARTEMEN, D.JABATAN_ID, D.NAMA JABATAN,
   JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA, PROSENTASE_TPP, PROSENTASE_MOBILITAS, 
   JUMLAH_PERUMAHAN, PROSENTASE_PERUMAHAN, JUMLAH_BBM, PROSENTASE_BBM, JUMLAH_TELEPON, PROSENTASE_TELEPON, JENIS_KELAMIN, PPH, NPWP
   FROM IMASYS_SIMPEG.PEGAWAI A 
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanTahun, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
   LEFT JOIN IMASYS_SIMPEG. PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID
   LEFT JOIN (   SELECT A.PEGAWAI_ID, 
                 CASE WHEN IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) = 3 THEN 
                       CASE WHEN NVL(TANGGAL_KONTRAK_AKHIR, SYSDATE) < TO_DATE(pBulanTahun, 'MMYYYY') THEN 0 ELSE 1 END  
                 ELSE 1
                  END STATUS_KONTRAK  
                 FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
   WHERE (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) AND G.STATUS_KONTRAK = 1
          AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC;
      
/* SETUP ITEM PENGHASILAN YANG DIPEROLEH SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   
CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, CASE WHEN JENIS_PEGAWAI_ID = 6 THEN 'AWAL_BULAN' ELSE GAJI_DIBERIKAN END GAJI_DIBERIKAN
    FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM SUMBANGAN YANG DIBERIKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggunganPrefix(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR, pPrefix IN VARCHAR2) IS 

    SELECT JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND PREFIX = pPrefix AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 

    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM POTONGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELOMPOK, DAN PEGAWAI YBS */   

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2, pJenisPegawai IN INTEGER, pKelompok IN CHAR) IS 
    SELECT 
       A.POTONGAN_KONDISI_ID, B.PREFIX, A.JUMLAH, C.PROSENTASE, C.JUMLAH KOMPONEN_GAJI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI C ON B.POTONGAN_KONDISI_ID = C.POTONGAN_KONDISI_ID AND C.JENIS_PEGAWAI_ID = pJenisPegawai  AND C.KELOMPOK = pKelompok
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;

/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS  OUTPUT JSON */   

CURSOR cTablePotonganLainJSON(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS    
    SELECT 
       PREFIX, SUM(CASE WHEN ANGSURAN_TERBAYAR = 0 OR ANGSURAN_TERBAYAR = 1 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END) ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || pBulanProses, 'DDMMYYYY') BETWEEN TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') AND ADD_MONTHS(TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY'), ANGSURAN - 1) 
     AND (NOT ANGSURAN = ANGSURAN_TERBAYAR OR (ANGSURAN = ANGSURAN_TERBAYAR AND BULAN_AKHIR_BAYAR = pBulanProses ))
    GROUP BY PREFIX;


/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS */   
    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_PEGAWAI_ID, A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, 
       ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR, CASE WHEN ANGSURAN_TERBAYAR = 0 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') <= TO_DATE('01' || pBulanProses, 'DDMMYYYY') AND NOT ANGSURAN = ANGSURAN_TERBAYAR;
    

/* SETUP IURAN PENSIUN */   
    
CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP DANA PENSIUN */   
    
CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP TASPEN */  

CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN KESEHATAN */  
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN SPPI */  
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM IMASYS_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

/* SETUP UNIT LINK */  

CURSOR cHitungUnitLink(pPegawaiId IN VARCHAR2) IS    
    
    SELECT JUMLAH, KETERANGAN FROM IMASYS_GAJI.ASURANSI_PEGAWAI A INNER JOIN IMASYS_GAJI.ASURANSI B ON A.ASURANSI_ID = B.ASURANSI_ID   
    WHERE PEGAWAI_ID = pPegawaiId;


/* SETUP BESARAN PENGHASILAN SESUAI KODE */  

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

/* SETUP PERIODE CAPEG  PKWT */  

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_CAPEG_PKWT ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

/* SETUP PERIODE SELAIN CAPEG  PKWT */  

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

/* SETUP PPH21 */  

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2,
pJenisKelamin VARCHAR2,
pStatusKawin CHAR) IS
    SELECT IMASYS_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga, pJenisKelamin, pStatusKawin) JUMLAH FROM DUAL;
    
CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN IMASYS_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');

/* SETUP PPH DEKOM */  

CURSOR cPerhitunganPPHDekom(pKode IN VARCHAR2) IS
    SELECT NVL(TO_NUMBER(NILAI), 0) FROM IMASYS.SETTING_APLIKASI WHERE KODE = pKode;

/* SETUP PERIODE SELAIN DEKOM */  

CURSOR cPerhitunganPPH(pJenisPegawaiId IN INTEGER, pKelas VARCHAR2, pNPWP IN VARCHAR2) IS
SELECT JENIS_PERHITUNGAN, DECODE(NVL(pNPWP, 'X'), 'X', JUMLAH_TANPA_NPWP, JUMLAH_NPWP) JUMLAH_NPWP, JUMLAH  FROM IMASYS_GAJI.PERHITUNGAN_PPH
                WHERE JENIS_PENGHASILAN = 'GAJI' AND JENIS_PEGAWAI_ID = pJenisPegawaiId AND pKelas IN (SELECT REGEXP_SUBSTR(KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);
        
gaji_json_obj           IMASYS.json.JSONStructObj; 
gaji_array              IMASYS.json.JSONArray;     
sumbangan_json_obj      IMASYS.json.JSONStructObj;
sumbangan_array         IMASYS.json.JSONArray;
potongan_json_obj       IMASYS.json.JSONStructObj;
potongan_array          IMASYS.json.JSONArray;
tanggungan_json_obj     IMASYS.json.JSONStructObj;
tanggungan_array        IMASYS.json.JSONArray;
potongan_lain_json_obj  IMASYS.json.JSONStructObj;
potongan_lain_array     IMASYS.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan IMASYS.string_fnc.t_array; 
m_ArrKali IMASYS.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;
m_JumlahJHT             VARCHAR(20);
m_Mobilitas             NUMBER;
m_Perumahan             NUMBER;
m_BBM                   NUMBER;
m_Telepon               NUMBER;
m_PphDekom              NUMBER;
m_UnitLink              VARCHAR(100);

BEGIN    

/* JENIS PEGAWAI ID 3 = PKWT DAN 5 = PTTPK */  

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' OR pJenisPegawaiId = '1' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

END IF;
            
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE IMASYS_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun  AND 
                 NOT NVL(STATUS_BAYAR, 0) = 1 AND
                 PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI A WHERE IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     ELSE
          DELETE IMASYS_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     
     END IF;
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        

        
        IF NVL(recPenghasilanTerakhir.STATUS_BAYAR, 0)  = 0 THEN
            
    
                m_MeritPMS             := 0;
                m_UangKehadiran        := 0;
                m_UangTransport        := 0;
                m_UangMakan            := 0;
                m_TunjanganJabatan     := 0;
                m_TPPPMS               := 0;
                m_TunjanganPerbantuan  := 0;
                m_TunjanganInsentif    := 0;
                m_Premi                := 0;
                m_Mobilitas            := 0;
                m_Perumahan            := 0;
                m_BBM                  := 0;
                m_Telepon              := 0;
                 m_Taspen              := 0;
                m_IuranPensiun         := 0;
                m_UnitLink             := '';
               
                IMASYS.JSON.newJSONObj(gaji_json_obj);
    
                FOR recItemPenghasilan IN cTableItemPenghasilan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;

                    /* TAMPUNG KOMPONEN GAJI TERMASUK NILAINYA KE DALAM VARIABLE JSON */
                    IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                        m_Jumlah := ROUND(recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI);
                        m_MeritPMS := ROUND(m_Jumlah);
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
                        m_UangKehadiran := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * recItemPenghasilan.KALI;                                            
                        m_UangTransport := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * recItemPenghasilan.KALI;                                            
                        m_UangMakan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
                        m_TunjanganJabatan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recPenghasilanTerakhir.PROSENTASE_TPP / 100) * recItemPenghasilan.KALI;                                            
                        m_TPPPMS := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                        m_TunjanganPerbantuan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_INSENTIF_KINERJA' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
                        m_TunjanganInsentif := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'MOBILITAS' THEN 
                        -- MOBILITAS UNTUK PERBANTUAN DIPROSES TENGAH BULAN SEDANGKAN DIREKSI AWAL BULAN
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 THEN
                            m_Jumlah := 0;
                        ELSE
                            m_Jumlah := recPenghasilanTerakhir.JUMLAH_MOBILITAS * (recPenghasilanTerakhir.PROSENTASE_MOBILITAS / 100) * recItemPenghasilan.KALI;   
                        END IF;
                        m_Mobilitas := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PERUMAHAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_PERUMAHAN * (recPenghasilanTerakhir.PROSENTASE_PERUMAHAN / 100) * recItemPenghasilan.KALI;   
                        m_Perumahan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'BBM' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_BBM * (recPenghasilanTerakhir.PROSENTASE_BBM / 100) * recItemPenghasilan.KALI;   
                        m_BBM := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TELEPON' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TELEPON * (recPenghasilanTerakhir.PROSENTASE_TELEPON / 100) * recItemPenghasilan.KALI;   
                        m_Telepon := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                        m_Jumlah := 1;
                        m_Premi := 1;
                    END IF;
           
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
          
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
           
                   ELSE
                       IF recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran THEN 
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
                       END IF;
                    END IF;
                END LOOP;  

     
               IMASYS.JSON.closeJSONObj(gaji_json_obj);

        
               /* TAMPUNG KOMPONEN POTONGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */
       
               IMASYS.JSON.newJSONObj(potongan_json_obj);
       
               FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID, recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELOMPOK) LOOP  

               IF recItemPotongan.PREFIX = 'JAMINAN_KESEHATAN_PESERTA' THEN
               -- DBMS_OUTPUT.put_line (recItemPotongan.PREFIX);
               m_Jumlah :=0;
            
                    IF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemPotongan.KOMPONEN_GAJI, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '03' THEN
                        m_Jumlah := recItemPotongan.JUMLAH;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                    END IF;
                    
                    m_Jumlah := m_Jumlah  * (recItemPotongan.PROSENTASE / 100);
                 --   DBMS_OUTPUT.put_line (recItemPotongan.PROSENTASE);
                 --   DBMS_OUTPUT.put_line (recItemPotongan.KOMPONEN_GAJI);
                 --   DBMS_OUTPUT.put_line (m_Jumlah);
               ELSIF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
                    OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungTaspen INTO m_Jumlah;
            
                    CLOSE cHitungTaspen;      
                    m_Taspen := m_Jumlah; 
               ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
                    OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
                    FETCH cHitungIuranPensiun INTO m_Jumlah;
            
                    CLOSE cHitungIuranPensiun;      
            
                    m_IuranPensiun := m_Jumlah;
               ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
                    OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
                    CLOSE cHitungIuranKesehatan;      
               ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
                    m_Jumlah := 0;
               ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN

               -- ASURANSI_JIWASRAYA SEBENARNYA ADALAH JAMINAN HARI TUA !!!!!!!!!!!!!!!!!!     
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                       m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                   ELSE
           
                       OPEN cTableItemTanggunganPrefix(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK, 'JAMINAN_HARI_TUA');
                       FETCH cTableItemTanggunganPrefix INTO m_JumlahJHT;
                       CLOSE cTableItemTanggunganPrefix;            
           
                       OPEN cTabelJumlahPenghasilan(m_JumlahJHT, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                       FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                       CLOSE cTabelJumlahPenghasilan;            
                       m_Jumlah := (2 / 100) * m_Jumlah;
                   END IF;

               ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
                    m_Jumlah := 55000;       
               ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
                    OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungIuranSPPI INTO m_Jumlah;
            
                    CLOSE cHitungIuranSPPI;                          
               ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
       
                    IF NVL(recPenghasilanTerakhir.JUMLAH_P3, 0) = 0 THEN

                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_PENGHASILAN);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;  
                                          
                    ELSE
          
                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;           
      
                    END IF;                            
               ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
                    m_Jumlah := recItemPotongan.JUMLAH;
               ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
                    IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungUnitLink INTO m_Jumlah, m_UnitLink;
            
                    CLOSE cHitungUnitLink;             
                    ELSE
                        m_Jumlah := 0;
                    END IF;
                   /*
               --   DIGUNAKAN UNTUK PROSES UNIT LINK
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungUnitLink INTO m_Jumlah;
            
                    CLOSE cHitungUnitLink;             
            
                    -- ABSENSI DINAS BISA DIGUNAKAN UNTUK SEGALA HAL
        
                   IF m_BulanProses = '032013' OR m_BulanProses = '042013' THEN
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                           m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                       ELSE
                           OPEN cTabelJumlahPenghasilan('0101', m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                           FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                           CLOSE cTabelJumlahPenghasilan;            
                           m_Jumlah := (2 / 100) * m_Jumlah;
                       END IF;
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                             IF recPenghasilanTerakhir.PEGAWAI_ID = 1414 THEN
                                m_Jumlah := m_Jumlah * 1;
                             ELSE
                                m_Jumlah := m_Jumlah * 3;
                             END IF;
                       ELSE
                             m_Jumlah := m_Jumlah * 2;           
                       END IF;

                   END IF;           
                    */
                    --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
                    --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
                    --CLOSE cHitungPotonganKehadiran;  
            
                    --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
               ELSE
                    m_Jumlah := recItemPotongan.JUMLAH;       
               END IF;         
                  
                   potongan_array(1):= ROUND(m_Jumlah);    
                   potongan_json_obj := IMASYS.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, IMASYS.JSON.addArray(potongan_array));
           
            
               END LOOP;

       
               IMASYS.JSON.closeJSONObj(potongan_json_obj);
       
       
               /* TAMPUNG KOMPONEN SUMBANGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */ 
       
               IMASYS.JSON.newJSONObj(sumbangan_json_obj);
       
               FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
            
                    IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
            
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                
                    ELSE
                        m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
                    END IF;
            
            
                    IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                        m_ArrKali := IMASYS.string_fnc.split(recItemSumbangan.KALI,'/');    
                        m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
                    ELSE
                        m_Kali := recItemSumbangan.KALI;
                    END IF;
            
            
                    IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
                           
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                
                 
                            IF recPenghasilanTerakhir.JABATAN_ID = 105 THEN
                    
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOMUT');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 106 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 107 THEN     
                   
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_SEKKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                        
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 108 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_STAKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom;
                          
                            END IF;
                    
                            --m_Jumlah := m_Perumahan;
                            m_Jumlah :=(NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * m_PphDekom;
                
                        ELSE
                
                            FOR recPerhitunganPPH IN cPerhitunganPPH(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.NPWP) LOOP   
            
                                IF recPerhitunganPPH.JENIS_PERHITUNGAN = 'GROSSUP' THEN
                                    OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                                    FETCH cHitungPPH21 INTO m_Jumlah;
            
                                    CLOSE cHitungPPH21;
                                ELSIF recPerhitunganPPH.JENIS_PERHITUNGAN = 'PROSENTASE' THEN
                            
                                    IF recPerhitunganPPH.JUMLAH = '0111' THEN
                                        m_Jumlah := (NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * recPerhitunganPPH.JUMLAH_NPWP;
                                    ELSE                               
                                        m_Jumlah := m_MeritPMS * recPerhitunganPPH.JUMLAH_NPWP;
                                    END IF;
                        
                                END IF;

                            END LOOP;   
                    
                        END IF;
                            
                    ELSE
                        m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                           
                   sumbangan_array(1):= ROUND(m_Jumlah);    
                   sumbangan_json_obj := IMASYS.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               IMASYS.JSON.closeJSONObj(sumbangan_json_obj);

              /* TAMPUNG KOMPONEN TANGGUNGAN PERUSAHAAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */  
                  
              IMASYS.JSON.newJSONObj(tanggungan_json_obj);
       
               FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
                    IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                        m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                    END IF;

            
                    IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                        m_ArrKali := IMASYS.string_fnc.split(recItemTanggungan.KALI,'/');    
                        m_Kali := SUBSTR(recItemTanggungan.KALI,1,2) / SUBSTR(recItemTanggungan.KALI,4,3);
                    ELSE
                        m_Kali := recItemTanggungan.KALI;
                    END IF;
 
                   /* REM BY CHANDRA 22-01-2014
                   IF recItemTanggungan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSE 
                    m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                    */
                    
                   m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;
                           
                   sumbangan_array(1):= CEIL(m_Jumlah);    
                   tanggungan_json_obj := IMASYS.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               IMASYS.JSON.closeJSONObj(tanggungan_json_obj);
       
               IMASYS.JSON.newJSONObj(potongan_lain_json_obj);

               FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  

                   potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
                   potongan_lain_json_obj := IMASYS.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, IMASYS.JSON.addArray(potongan_lain_array));
           
       
               END LOOP;  

               IMASYS.JSON.closeJSONObj(potongan_lain_json_obj);      
       
               --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
               FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
                    m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
                   --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
                   IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                        m_Jumlah := 1;
                   ELSE
                        EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

                        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                               LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                               JUMLAH) 
                                            VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   

                   END IF;
            
               END LOOP;      
       
               m_DanaPensiun := 0;
       
          
             IF pWaktuPembayaran = 'AWAL_BULAN' THEN
       
                 EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN, DEPARTEMEN, JABATAN_ID, JABATAN, ASURANSI_KODE) 
                                        VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ''' || recPenghasilanTerakhir.DEPARTEMEN_ID_PEGAWAI || ''', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                                ''' || REPLACE(IMASYS.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', 
                                                ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''',
                                                ''' || recPenghasilanTerakhir.DEPARTEMEN || ''', ''' || recPenghasilanTerakhir.JABATAN_ID || ''', ''' || recPenghasilanTerakhir.JABATAN || ''', ''' || m_UnitLink || ''')';
             ELSE

                 EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                        VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';

     
             END IF;      
        
        
        ELSE
        
            EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' SET NO_URUT = ' || recPenghasilanTerakhir.NO_URUT || ' WHERE PEGAWAI_ID = ' || recPenghasilanTerakhir.PEGAWAI_ID || ' AND BULANTAHUN = ''' || pBulanTahun || '''';
        
        END IF;
         

    END LOOP;    


         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_AWAL_BULAN_LOG (
                               PERIODE, JENIS_PEGAWAI_ID, TANGGAL_PROSES) 
                            VALUES (''' || pBulanTahun || ''', ''' || pJenisPegawaiId || ''', SYSDATE)';

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_V6;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_GAJI_V6
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 
/* SETUP DATA PEGAWAI, PENGHASILAN PEGAWAI, JABATAN (UNTUK KEPERLUAN PPH21), PANGKAT (UNTUK KEPERLUAN PPH21) DAN STATUS KELUARGA (UNTUK KEPERLUAN PPH21) 
   PADA KALKULASI PENGHASILAN V5 INI MERUPAKAN TAMBAHAN UNTUK PERHITUNGAN BPJS KESEHATAN
   ADANYA PENAMBAHAN UNTUK JENIS PEGAWAI PKWT KHUSUS YANG PEMBAYARAN PENGHASILANNYA LUMSUMP DENGAN UANG TRANSPORT INSERTIF DAN MAKAN
*/
CURSOR cTablePenghasilanTerakhir IS

   SELECT 
   ROW_NUMBER() OVER (ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC) NO_URUT, 
   A.PEGAWAI_ID, NVL((SELECT STATUS_BAYAR FROM IMASYS_GAJI.GAJI_AWAL_BULAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND BULANTAHUN = pBulanTahun), 0) STATUS_BAYAR,
   IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) JENIS_PEGAWAI_ID, A.NAMA, A.DEPARTEMEN_ID DEPARTEMEN_ID_PEGAWAI, IMASYS_SIMPEG.AMBIL_UNIT_KERJA(A.DEPARTEMEN_ID) DEPARTEMEN, D.JABATAN_ID, D.NAMA JABATAN,
   JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA, PROSENTASE_TPP, PROSENTASE_MOBILITAS, 
   JUMLAH_PERUMAHAN, PROSENTASE_PERUMAHAN, JUMLAH_BBM, PROSENTASE_BBM, JUMLAH_TELEPON, PROSENTASE_TELEPON, JENIS_KELAMIN, PPH, NPWP
   FROM IMASYS_SIMPEG.PEGAWAI A 
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanTahun, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
   LEFT JOIN IMASYS_SIMPEG. PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID
   LEFT JOIN (   SELECT A.PEGAWAI_ID, 
                 CASE WHEN IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) = 3 THEN 
                       CASE WHEN NVL(TANGGAL_KONTRAK_AKHIR, SYSDATE) < TO_DATE(pBulanTahun, 'MMYYYY') THEN 0 ELSE 1 END  
                 ELSE 1
                  END STATUS_KONTRAK  
                 FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
   WHERE (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) AND G.STATUS_KONTRAK = 1
          AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC;
      
/* SETUP ITEM PENGHASILAN YANG DIPEROLEH SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   
CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, CASE WHEN JENIS_PEGAWAI_ID IN ( 6, 12 ) THEN 'AWAL_BULAN' ELSE GAJI_DIBERIKAN END GAJI_DIBERIKAN
    FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM SUMBANGAN YANG DIBERIKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggunganPrefix(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR, pPrefix IN VARCHAR2) IS 

    SELECT JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND PREFIX = pPrefix AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 

    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM POTONGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELOMPOK, DAN PEGAWAI YBS */   

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2, pJenisPegawai IN INTEGER, pKelompok IN CHAR) IS 
    SELECT 
       A.POTONGAN_KONDISI_ID, B.PREFIX, A.JUMLAH, C.PROSENTASE, C.JUMLAH KOMPONEN_GAJI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI C ON B.POTONGAN_KONDISI_ID = C.POTONGAN_KONDISI_ID AND C.JENIS_PEGAWAI_ID = pJenisPegawai  AND C.KELOMPOK = pKelompok
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;

/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS  OUTPUT JSON */   

CURSOR cTablePotonganLainJSON(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS    
    SELECT 
       PREFIX, SUM(CASE WHEN ANGSURAN_TERBAYAR = 0 OR ANGSURAN_TERBAYAR = 1 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END) ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || pBulanProses, 'DDMMYYYY') BETWEEN TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') AND ADD_MONTHS(TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY'), ANGSURAN - 1) 
     AND (NOT ANGSURAN = ANGSURAN_TERBAYAR OR (ANGSURAN = ANGSURAN_TERBAYAR AND BULAN_AKHIR_BAYAR = pBulanProses ))
    GROUP BY PREFIX;


/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS */   
    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_PEGAWAI_ID, A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, 
       ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR, CASE WHEN ANGSURAN_TERBAYAR = 0 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') <= TO_DATE('01' || pBulanProses, 'DDMMYYYY') AND NOT ANGSURAN = ANGSURAN_TERBAYAR;
    

/* SETUP IURAN PENSIUN */   
    
CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP DANA PENSIUN */   
    
CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP TASPEN */  

CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN KESEHATAN */  
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN SPPI */  
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM IMASYS_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

/* SETUP UNIT LINK */  

CURSOR cHitungUnitLink(pPegawaiId IN VARCHAR2) IS    
    
    SELECT JUMLAH, KETERANGAN FROM IMASYS_GAJI.ASURANSI_PEGAWAI A INNER JOIN IMASYS_GAJI.ASURANSI B ON A.ASURANSI_ID = B.ASURANSI_ID   
    WHERE PEGAWAI_ID = pPegawaiId;


/* SETUP BESARAN PENGHASILAN SESUAI KODE */  

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

/* SETUP PERIODE CAPEG  PKWT */  

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_CAPEG_PKWT ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

/* SETUP PERIODE SELAIN CAPEG  PKWT */  

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

/* SETUP PPH21 */  

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2,
pJenisKelamin VARCHAR2,
pStatusKawin CHAR) IS
    SELECT IMASYS_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga, pJenisKelamin, pStatusKawin) JUMLAH FROM DUAL;
    
CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN IMASYS_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');

/* SETUP PPH DEKOM */  

CURSOR cPerhitunganPPHDekom(pKode IN VARCHAR2) IS
    SELECT NVL(TO_NUMBER(NILAI), 0) FROM IMASYS.SETTING_APLIKASI WHERE KODE = pKode;

/* SETUP PERIODE SELAIN DEKOM */  

CURSOR cPerhitunganPPH(pJenisPegawaiId IN INTEGER, pKelas VARCHAR2, pNPWP IN VARCHAR2) IS
SELECT JENIS_PERHITUNGAN, DECODE(NVL(pNPWP, 'X'), 'X', JUMLAH_TANPA_NPWP, JUMLAH_NPWP) JUMLAH_NPWP, JUMLAH  FROM IMASYS_GAJI.PERHITUNGAN_PPH
                WHERE JENIS_PENGHASILAN = 'GAJI' AND JENIS_PEGAWAI_ID = pJenisPegawaiId AND pKelas IN (SELECT REGEXP_SUBSTR(KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);
        
gaji_json_obj           IMASYS.json.JSONStructObj; 
gaji_array              IMASYS.json.JSONArray;     
sumbangan_json_obj      IMASYS.json.JSONStructObj;
sumbangan_array         IMASYS.json.JSONArray;
potongan_json_obj       IMASYS.json.JSONStructObj;
potongan_array          IMASYS.json.JSONArray;
tanggungan_json_obj     IMASYS.json.JSONStructObj;
tanggungan_array        IMASYS.json.JSONArray;
potongan_lain_json_obj  IMASYS.json.JSONStructObj;
potongan_lain_array     IMASYS.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan IMASYS.string_fnc.t_array; 
m_ArrKali IMASYS.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;
m_JumlahJHT             VARCHAR(20);
m_Mobilitas             NUMBER;
m_Perumahan             NUMBER;
m_BBM                   NUMBER;
m_Telepon               NUMBER;
m_PphDekom              NUMBER;
m_UnitLink              VARCHAR(100);

BEGIN    

/* JENIS PEGAWAI ID 3 = PKWT DAN 5 = PTTPK */  

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' OR pJenisPegawaiId = '1' OR pJenisPegawaiId = '12' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

END IF;
            
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE IMASYS_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun  AND 
                 NOT NVL(STATUS_BAYAR, 0) = 1 AND
                 PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI A WHERE IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL));
  /*              
    DELETE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN
       WHERE ANGSURAN_BULAN = pBulanTahun
       AND LAIN_KONDISI_PEGAWAI_ID IN ( SELECT b.LAIN_KONDISI_PEGAWAI_ID
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A LEFT JOIN IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN B ON A.LAIN_KONDISI_PEGAWAI_ID = B.LAIN_KONDISI_PEGAWAI_ID 
    WHERE B.ANGSURAN_BULAN = pBulanTahun
     and PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI A WHERE IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL))
    );
       */          
     ELSE
          DELETE IMASYS_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     
     END IF;
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        

        
        IF NVL(recPenghasilanTerakhir.STATUS_BAYAR, 0)  = 0 THEN
            
    
                m_MeritPMS             := 0;
                m_UangKehadiran        := 0;
                m_UangTransport        := 0;
                m_UangMakan            := 0;
                m_TunjanganJabatan     := 0;
                m_TPPPMS               := 0;
                m_TunjanganPerbantuan  := 0;
                m_TunjanganInsentif    := 0;
                m_Premi                := 0;
                m_Mobilitas            := 0;
                m_Perumahan            := 0;
                m_BBM                  := 0;
                m_Telepon              := 0;
                 m_Taspen              := 0;
                m_IuranPensiun         := 0;
                m_UnitLink             := '';
               
                IMASYS.JSON.newJSONObj(gaji_json_obj);
    
                FOR recItemPenghasilan IN cTableItemPenghasilan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;

                    /* TAMPUNG KOMPONEN GAJI TERMASUK NILAINYA KE DALAM VARIABLE JSON */
                    IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                        m_Jumlah := ROUND(recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI);
                        m_MeritPMS := ROUND(m_Jumlah);
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
                        m_UangKehadiran := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * recItemPenghasilan.KALI;                                            
                        m_UangTransport := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * recItemPenghasilan.KALI;                                            
                        m_UangMakan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
                        m_TunjanganJabatan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recPenghasilanTerakhir.PROSENTASE_TPP / 100) * recItemPenghasilan.KALI;                                            
                        m_TPPPMS := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                        m_TunjanganPerbantuan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'INSENTIF' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
                        m_TunjanganInsentif := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'MOBILITAS' THEN 
                        -- MOBILITAS UNTUK PERBANTUAN DIPROSES TENGAH BULAN SEDANGKAN DIREKSI AWAL BULAN
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 THEN
                            m_Jumlah := 0;
                        ELSE
                            m_Jumlah := recPenghasilanTerakhir.JUMLAH_MOBILITAS * (recPenghasilanTerakhir.PROSENTASE_MOBILITAS / 100) * recItemPenghasilan.KALI;   
                        END IF;
                        m_Mobilitas := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PERUMAHAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_PERUMAHAN * (recPenghasilanTerakhir.PROSENTASE_PERUMAHAN / 100) * recItemPenghasilan.KALI;   
                        m_Perumahan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'BBM' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_BBM * (recPenghasilanTerakhir.PROSENTASE_BBM / 100) * recItemPenghasilan.KALI;   
                        m_BBM := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TELEPON' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TELEPON * (recPenghasilanTerakhir.PROSENTASE_TELEPON / 100) * recItemPenghasilan.KALI;   
                        m_Telepon := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                        m_Jumlah := 1;
                        m_Premi := 1;
                    END IF;
           
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
          
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
           
                   ELSE
                       IF recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran THEN 
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
                       END IF;
                    END IF;
                END LOOP;  

     
               IMASYS.JSON.closeJSONObj(gaji_json_obj);
               
               DBMS_OUTPUT.put_line ('DATA : ' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"'));

        
               /* TAMPUNG KOMPONEN POTONGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */
       
               IMASYS.JSON.newJSONObj(potongan_json_obj);
       
               FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID, recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELOMPOK) LOOP  

               IF recItemPotongan.PREFIX = 'JAMINAN_KESEHATAN_PESERTA' THEN
               -- DBMS_OUTPUT.put_line (recItemPotongan.PREFIX);
               m_Jumlah :=0;
            
                    IF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemPotongan.KOMPONEN_GAJI, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '03' THEN
                        m_Jumlah := recItemPotongan.JUMLAH;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                    END IF;
                    
                    m_Jumlah := m_Jumlah  * (recItemPotongan.PROSENTASE / 100);
                 --   DBMS_OUTPUT.put_line (recItemPotongan.PROSENTASE);
                 --   DBMS_OUTPUT.put_line (recItemPotongan.KOMPONEN_GAJI);
                 --   DBMS_OUTPUT.put_line (m_Jumlah);
               ELSIF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
                    OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungTaspen INTO m_Jumlah;
            
                    CLOSE cHitungTaspen;      
                    m_Taspen := m_Jumlah; 
               ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
                    OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
                    FETCH cHitungIuranPensiun INTO m_Jumlah;
            
                    CLOSE cHitungIuranPensiun;      
            
                    m_IuranPensiun := m_Jumlah;
               ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
                    OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
                    CLOSE cHitungIuranKesehatan;      
               ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
                    m_Jumlah := 0;
               ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN

               -- ASURANSI_JIWASRAYA SEBENARNYA ADALAH JAMINAN HARI TUA !!!!!!!!!!!!!!!!!!     
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                       m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                   ELSE
           
                       OPEN cTableItemTanggunganPrefix(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK, 'JAMINAN_HARI_TUA');
                       FETCH cTableItemTanggunganPrefix INTO m_JumlahJHT;
                       CLOSE cTableItemTanggunganPrefix;            
           
                       OPEN cTabelJumlahPenghasilan(m_JumlahJHT, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                       FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                       CLOSE cTabelJumlahPenghasilan;            
                       m_Jumlah := (2 / 100) * m_Jumlah;
                   END IF;

               ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
                    m_Jumlah := 55000;       
               ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
                    OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungIuranSPPI INTO m_Jumlah;
            
                    CLOSE cHitungIuranSPPI;                          
               ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
       
                    IF NVL(recPenghasilanTerakhir.JUMLAH_P3, 0) = 0 THEN

                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_PENGHASILAN);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;  
                                          
                    ELSE
          
                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;           
      
                    END IF;                            
               ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
                    m_Jumlah := recItemPotongan.JUMLAH;
               ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
                    IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungUnitLink INTO m_Jumlah, m_UnitLink;
            
                    CLOSE cHitungUnitLink;             
                    ELSE
                        m_Jumlah := 0;
                    END IF;
                   /*
               --   DIGUNAKAN UNTUK PROSES UNIT LINK
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungUnitLink INTO m_Jumlah;
            
                    CLOSE cHitungUnitLink;             
            
                    -- ABSENSI DINAS BISA DIGUNAKAN UNTUK SEGALA HAL
        
                   IF m_BulanProses = '032013' OR m_BulanProses = '042013' THEN
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                           m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                       ELSE
                           OPEN cTabelJumlahPenghasilan('0101', m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                           FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                           CLOSE cTabelJumlahPenghasilan;            
                           m_Jumlah := (2 / 100) * m_Jumlah;
                       END IF;
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                             IF recPenghasilanTerakhir.PEGAWAI_ID = 1414 THEN
                                m_Jumlah := m_Jumlah * 1;
                             ELSE
                                m_Jumlah := m_Jumlah * 3;
                             END IF;
                       ELSE
                             m_Jumlah := m_Jumlah * 2;           
                       END IF;

                   END IF;           
                    */
                    --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
                    --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
                    --CLOSE cHitungPotonganKehadiran;  
            
                    --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
               ELSE
                    m_Jumlah := recItemPotongan.JUMLAH;       
               END IF;         
                  
                   potongan_array(1):= ROUND(m_Jumlah);    
                   potongan_json_obj := IMASYS.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, IMASYS.JSON.addArray(potongan_array));
           
            
               END LOOP;

       
               IMASYS.JSON.closeJSONObj(potongan_json_obj);
       
       
               /* TAMPUNG KOMPONEN SUMBANGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */ 
       
               IMASYS.JSON.newJSONObj(sumbangan_json_obj);
       
               FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
            
                    IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
            
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                
                    ELSE
                        m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
                    END IF;
            
            
                    IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                        m_ArrKali := IMASYS.string_fnc.split(recItemSumbangan.KALI,'/');    
                        m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
                    ELSE
                        m_Kali := recItemSumbangan.KALI;
                    END IF;
            
            
                    IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
                           
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                
                 
                            IF recPenghasilanTerakhir.JABATAN_ID = 105 THEN
                    
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOMUT');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 106 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 107 THEN     
                   
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_SEKKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                        
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 108 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_STAKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom;
                          
                            END IF;
                    
                            --m_Jumlah := m_Perumahan;
                            m_Jumlah :=(NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * m_PphDekom;
                
                        ELSE
                
                            FOR recPerhitunganPPH IN cPerhitunganPPH(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.NPWP) LOOP   
            
                                IF recPerhitunganPPH.JENIS_PERHITUNGAN = 'GROSSUP' THEN
                                    OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                                    FETCH cHitungPPH21 INTO m_Jumlah;
            
                                    CLOSE cHitungPPH21;
                                ELSIF recPerhitunganPPH.JENIS_PERHITUNGAN = 'PROSENTASE' THEN
                            
                                    IF recPerhitunganPPH.JUMLAH = '0111' THEN
                                        m_Jumlah := (NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * recPerhitunganPPH.JUMLAH_NPWP;
                                    ELSE                               
                                        m_Jumlah := m_MeritPMS * recPerhitunganPPH.JUMLAH_NPWP;
                                    END IF;
                        
                                END IF;

                            END LOOP;   
                    
                        END IF;
                            
                    ELSE
                        m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                           
                   sumbangan_array(1):= ROUND(m_Jumlah);    
                   sumbangan_json_obj := IMASYS.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               IMASYS.JSON.closeJSONObj(sumbangan_json_obj);

              /* TAMPUNG KOMPONEN TANGGUNGAN PERUSAHAAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */  
                  
              IMASYS.JSON.newJSONObj(tanggungan_json_obj);
       
               FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
                    IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                        m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                    END IF;

            
                    IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                        m_ArrKali := IMASYS.string_fnc.split(recItemTanggungan.KALI,'/');    
                        m_Kali := SUBSTR(recItemTanggungan.KALI,1,2) / SUBSTR(recItemTanggungan.KALI,4,3);
                    ELSE
                        m_Kali := recItemTanggungan.KALI;
                    END IF;
 
                   /* REM BY CHANDRA 22-01-2014
                   IF recItemTanggungan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSE 
                    m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                    */
                    
                   m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;
                           
                   sumbangan_array(1):= CEIL(m_Jumlah);    
                   tanggungan_json_obj := IMASYS.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               IMASYS.JSON.closeJSONObj(tanggungan_json_obj);
       
               IMASYS.JSON.newJSONObj(potongan_lain_json_obj);

               FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  

                   potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
                   potongan_lain_json_obj := IMASYS.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, IMASYS.JSON.addArray(potongan_lain_array));
           
       
               END LOOP;  

               IMASYS.JSON.closeJSONObj(potongan_lain_json_obj);      
       
               --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
               FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
                    m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
                   --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
                   IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                        m_Jumlah := 1;
                   ELSE
                        EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

                        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                               LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                               JUMLAH) 
                                            VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   

                   END IF;
            
               END LOOP;      
       
               m_DanaPensiun := 0;
       
          
             IF pWaktuPembayaran = 'AWAL_BULAN' THEN
       
                 EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN, DEPARTEMEN, JABATAN_ID, JABATAN, ASURANSI_KODE) 
                                        VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ''' || recPenghasilanTerakhir.DEPARTEMEN_ID_PEGAWAI || ''', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                                ''' || REPLACE(IMASYS.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', 
                                                ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''',
                                                ''' || recPenghasilanTerakhir.DEPARTEMEN || ''', ''' || recPenghasilanTerakhir.JABATAN_ID || ''', ''' || recPenghasilanTerakhir.JABATAN || ''', ''' || m_UnitLink || ''')';
             ELSE

                 EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                        VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';

     
             END IF;      
        
        
        ELSE
        
            EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' SET NO_URUT = ' || recPenghasilanTerakhir.NO_URUT || ' WHERE PEGAWAI_ID = ' || recPenghasilanTerakhir.PEGAWAI_ID || ' AND BULANTAHUN = ''' || pBulanTahun || '''';
        
        END IF;
         

    END LOOP;    


         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_AWAL_BULAN_LOG (
                               PERIODE, JENIS_PEGAWAI_ID, TANGGAL_PROSES) 
                            VALUES (''' || pBulanTahun || ''', ''' || pJenisPegawaiId || ''', SYSDATE)';

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_V7;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_GAJI_V7
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 
      
gaji_json_obj           PPI.json.JSONStructObj; 
gaji_array              PPI.json.JSONArray;     
sumbangan_json_obj      PPI.json.JSONStructObj;
sumbangan_array         PPI.json.JSONArray;
potongan_json_obj       PPI.json.JSONStructObj;
potongan_array          PPI.json.JSONArray;
tanggungan_json_obj     PPI.json.JSONStructObj;
tanggungan_array        PPI.json.JSONArray;
potongan_lain_json_obj  PPI.json.JSONStructObj;
potongan_lain_array     PPI.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan PPI.string_fnc.t_array; 
m_ArrKali PPI.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;
m_JumlahJHT             VARCHAR(20);
m_Mobilitas             NUMBER;
m_Perumahan             NUMBER;
m_BBM                   NUMBER;
m_Telepon               NUMBER;
m_PphDekom              NUMBER;
m_UnitLink              VARCHAR(100);

-- TAMBAHAN NVN --
m_TunjanganMasaKerja    NUMBER;
m_TunjanganPrestasi        NUMBER;
m_TunjanganPeralihan    NUMBER;
m_TunjanganSinoman        NUMBER;
m_TunjanganPPH21    NUMBER;
m_TunjanganKinerja    NUMBER;
m_Honorarium    NUMBER;
m_KelebihanJamMengajar NUMBER;

m_rec_kali NUMBER;
m_hukuman NUMBER;

BEGIN    

/* JENIS PEGAWAI ID 3 = PKWT DAN 5 = PTTPK */  

/*
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;
*/
    
/*
    DELETE PPI_GAJI.GAJI_AWAL_BULAN 
    WHERE BULANTAHUN = pBulanTahun  AND 
    NOT NVL(STATUS_BAYAR, 0) = 1 AND
    PEGAWAI_ID IN 
        (SELECT PEGAWAI_ID FROM PPI_SIMPEG.PEGAWAI A WHERE PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN 
        (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL));
*/

    DELETE PPI_GAJI.GAJI_AWAL_BULAN 
    WHERE BULANTAHUN = pBulanTahun AND 
    NOT NVL(STATUS_BAYAR, 0) = 1 AND
    PEGAWAI_ID IN 
    (SELECT PEGAWAI_ID FROM PPI_GAJI.PEGAWAI A WHERE 
    EXISTS(SELECT 1 FROM (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) SPLIT_VALUE
             FROM DUAL 
             CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) X WHERE SPLIT_VALUE = PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID)));

        

    FOR recPenghasilanTerakhir IN (
        SELECT 
        ROW_NUMBER() OVER (ORDER BY A.PEGAWAI_ID ASC) NO_URUT, A.PERIODE, A.PEGAWAI_ID, DEPARTEMEN_ID, A.KATEGORI_SEKOLAH, 
           NRP, NAMA, JENIS_KELAMIN, 
           JENIS_PEGAWAI_ID, PENDIDIKAN_ID, MASA_KERJA, 
           JABATAN_ID, JABATAN, KELAS, NVL(KELOMPOK, 'PENDIDIK') KELOMPOK, 
           STATUS_CALPEG, A.LAST_CREATE_USER, A.LAST_CREATE_DATE,
           NVL((SELECT MAX(STATUS_BAYAR) FROM PPI_GAJI.GAJI_AWAL_BULAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND BULANTAHUN = pBulanTahun), 0) STATUS_BAYAR,
           (SELECT CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END FROM PPI_GAJI.PEGAWAI_KECUALI_JABATAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) STATUS_TJ_JABATAN_KECUALI,
           STATUS_KAWIN
        FROM PPI_GAJI.PEGAWAI A
        WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) 
             FROM DUAL 
             CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) AND A.PERIODE = pBulanTahun
        ORDER BY PEGAWAI_ID ASC
      ) LOOP        
               
        IF NVL(recPenghasilanTerakhir.STATUS_BAYAR, 0)  = 0 THEN
                m_MeritPMS             := 0;
                m_UangKehadiran        := 0;
                m_UangTransport        := 0;
                m_UangMakan            := 0;
                m_TunjanganJabatan     := 0;
                m_TPPPMS               := 0;
                m_TunjanganPerbantuan  := 0;
                m_TunjanganInsentif    := 0;
                m_Premi                := 0;
                m_Mobilitas            := 0;
                m_Perumahan            := 0;
                m_BBM                  := 0;
                m_Telepon              := 0;
                m_Taspen              := 0;
                m_IuranPensiun         := 0;
                m_UnitLink             := '';
                m_rec_kali             := 1;
                m_hukuman              := 0;
                m_TunjanganMasaKerja              := 0;
                m_TunjanganPrestasi              := 0;
                m_TunjanganPeralihan              := 0;
                m_TunjanganSinoman              := 0;
                m_TunjanganPPH21              := 0;
                m_TunjanganKinerja              := 0;
                m_Honorarium              := 0;
                m_KelebihanJamMengajar      := 0;
               
                PPI.JSON.newJSONObj(gaji_json_obj);
    
                    
                FOR recItemPenghasilan IN (SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, CASE WHEN JENIS_PEGAWAI_ID IN ( 6, 12 ) THEN 'AWAL_BULAN' ELSE GAJI_DIBERIKAN END GAJI_DIBERIKAN
                                            FROM PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.GAJI_KONDISI B
                                            WHERE 
                                            A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = recPenghasilanTerakhir.KELOMPOK AND
                                            JENIS_PEGAWAI_ID = recPenghasilanTerakhir.JENIS_PEGAWAI_ID 
                                            --AND recPenghasilanTerakhir.KELAS IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
                                            ) 
                LOOP  
                    m_Jumlah :=0;
                    
                    /* TAMPUNG KOMPONEN GAJI TERMASUK NILAINYA KE DALAM VARIABLE JSON */
                    IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN
                        BEGIN
                            SELECT JUMLAH INTO m_Jumlah FROM PPI_GAJI.MERIT_PMS WHERE PENDIDIKAN_ID = recPenghasilanTerakhir.PENDIDIKAN_ID;
                        EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                        END;
                        
                        IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                            m_Jumlah := round((80/100) * m_Jumlah);
                        END IF;
                            
                        m_MeritPMS := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_MASA_KERJA' THEN 
                        BEGIN
                            SELECT NILAI INTO m_Jumlah FROM PPI_GAJI.TUNJANGAN_MASA_KERJA WHERE recPenghasilanTerakhir.MASA_KERJA BETWEEN AWAL AND AKHIR;
                        EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                        END;
                        
                        IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                            m_Jumlah := round((80/100) * m_Jumlah);
                        END IF;
                        
                        m_TunjanganMasaKerja := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_TJ_JABATAN_KECUALI = '0' THEN
                        
                            BEGIN
                                SELECT JUMLAH INTO m_Jumlah FROM PPI_GAJI.TUNJANGAN_JABATAN WHERE KELAS = recPenghasilanTerakhir.KELAS;
                            EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                            END;
                        
                            IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                                m_Jumlah := round((80/100) * m_Jumlah);
                            END IF;
                            
                        END IF;        
                        m_TunjanganJabatan := NVL(m_Jumlah, '0');
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PRESTASI' THEN
                        IF(recPenghasilanTerakhir.KELOMPOK = 'PENDIDIK' OR recPenghasilanTerakhir.KELOMPOK = 'STAFF') THEN
                            BEGIN
                                SELECT TUNJANGAN_PRESTASI INTO m_Jumlah FROM PPI_GAJI.TPP_PMS WHERE KELOMPOK_PEGAWAI = recPenghasilanTerakhir.KELOMPOK AND KELAS = recPenghasilanTerakhir.KELAS;
                            EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                            END;
                            
                            IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                                m_Jumlah := round((80/100) * m_Jumlah);
                            END IF;
                            
                        ELSIF(recPenghasilanTerakhir.KELOMPOK = 'DOSEN') THEN
                            BEGIN
                                SELECT DIBAYAR_LUMPSUM INTO m_Jumlah FROM PPI_GAJI.TPP_PEGAWAI WHERE JABATAN_ID = recPenghasilanTerakhir.JABATAN_ID;
                            EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                            END;
                            
                            IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                                m_Jumlah := round((80/100) * m_Jumlah);
                            END IF;
                                
                        END IF;
                        
                        
                        m_TunjanganPrestasi := m_Jumlah;
                    /*
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERALIHAN' THEN
                        m_Jumlah := 0;
                        
                        IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                            m_Jumlah := round((80/100) * m_Jumlah);
                        END IF;
                            
                        m_TunjanganPeralihan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_SINOMAN' THEN
                        m_Jumlah := 0;
                        
                        IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                            m_Jumlah := round((80/100) * m_Jumlah);
                        END IF;
                                
                        m_TunjanganSinoman := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PPH21' THEN
                        m_Jumlah := 0;
                        
                        IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                            m_Jumlah := round((80/100) * m_Jumlah);
                        END IF;
                                
                        m_TunjanganPPH21 := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_KINERJA' THEN
                        m_Jumlah := 0;
                        
                        IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                            m_Jumlah := round((80/100) * m_Jumlah);
                        END IF;
                                
                        m_TunjanganKinerja := m_Jumlah;
                    */
                    ELSIF recItemPenghasilan.PREFIX = 'KELEBIHAN_JAM_MENGAJAR' THEN 
                            BEGIN
                                SELECT NVL(TOTAL_TUNJANGAN, 0) INTO m_Jumlah FROM PPI_GAJI.PERHITUNGAN_PRESTASI WHERE PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID AND PERIODE = pBulanTahun;
                            EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                            END;
                            
                        m_KelebihanJamMengajar := m_Jumlah;
                    ELSE 
                        BEGIN
                            SELECT JUMLAH INTO m_Jumlah FROM PPI_GAJI.GAJI_KONDISI_PEGAWAI WHERE PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID AND COALESCE(PERIODE, recPenghasilanTerakhir.PERIODE) = recPenghasilanTerakhir.PERIODE AND GAJI_PREFIX = recItemPenghasilan.PREFIX;
                        EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                        END;
                        
                        --IF recPenghasilanTerakhir.PEGAWAI_ID = '5' AND recItemPenghasilan.PREFIX = 'TUNJANGAN_KINERJA' THEN
                            --raise_application_error(-20001,'ASD- -ERROR- '||m_Jumlah || 'X' || recItemPenghasilan.PREFIX);
                        --END IF;
                        --IF recPenghasilanTerakhir.STATUS_CALPEG = 'Y' THEN
                            --m_Jumlah := round((80/100) * m_Jumlah);
                        --END IF;
                        
                        m_Honorarium := m_Jumlah;
                    END IF;
                    
                    
                    gaji_array(1):= m_Jumlah;    
                    gaji_json_obj := PPI.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, PPI.JSON.addArray(gaji_array));
                    
                    /*
                    IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := PPI.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, PPI.JSON.addArray(gaji_array));
                    ELSE
                        IF ((recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran) OR 
                            ( recItemPenghasilan.PREFIX = 'UANG_MAKAN' AND recPenghasilanTerakhir.LUMPSUM_MAKAN = 1) OR
                            ( recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' AND recPenghasilanTerakhir.LUMPSUM_TRANSPORT = 1) ) THEN 
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := PPI.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, PPI.JSON.addArray(gaji_array));
                        END IF;
                    END IF;
                    */
                END LOOP;  

     
               PPI.JSON.closeJSONObj(gaji_json_obj);
                 
               /* TAMPUNG KOMPONEN POTONGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */
       
                -- START COMMENT POTONGAN NVN --
       
               
               PPI.JSON.newJSONObj(potongan_json_obj);
                    
    
               FOR recItemPotongan IN (
                                        SELECT 
                                           A.POTONGAN_KONDISI_ID, B.PREFIX, C.JUMLAH, TO_NUMBER(A.PROSENTASE, '999.99') PROSENTASE, A.JUMLAH KOMPONEN_GAJI, C.POTONGAN_KONDISI_ID POTONGAN_KONDISI_ID_PEGAWAI
                                        FROM PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A 
                                        LEFT JOIN PPI_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
                                        LEFT JOIN PPI_GAJI.POTONGAN_KONDISI_PEGAWAI C ON A.POTONGAN_KONDISI_ID = C.POTONGAN_KONDISI_ID AND C.PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID
                                        WHERE  A.JENIS_PEGAWAI_ID = recPenghasilanTerakhir.JENIS_PEGAWAI_ID  AND 
                                        A.KELOMPOK = NVL(recPenghasilanTerakhir.KELOMPOK, '') AND A.KELAS = NVL(recPenghasilanTerakhir.KATEGORI_SEKOLAH, '') AND JENIS_POTONGAN = 'P' ORDER BY A.POTONGAN_KONDISI_ID
                                            )  LOOP  
               IF recItemPotongan.PREFIX = 'JAMINAN_KESEHATAN_PESERTA' OR recItemPotongan.PREFIX = 'JAMINAN_HARI_TUA_PESERTA' OR recItemPotongan.PREFIX = 'JAMINAN_PENSIUN_PESERTA' THEN
               m_Jumlah :=0;
                    
                    IF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '01' THEN
            
                    BEGIN
                        SELECT SUM(JUMLAH) JUMLAH INTO m_Jumlah FROM
                        (
                        SELECT '010' || ROWNUM KODE, 
                               CASE 
                                    WHEN PIVOT = 1 THEN m_MeritPMS
                                    WHEN PIVOT = 2 THEN m_UangKehadiran
                                    WHEN PIVOT = 3 THEN m_UangTransport
                                    WHEN PIVOT = 4 THEN m_UangMakan
                                    WHEN PIVOT = 5 THEN m_TunjanganJabatan
                                    WHEN PIVOT = 6 THEN m_TPPPMS
                                    WHEN PIVOT = 7 THEN m_TunjanganPerbantuan
                                    WHEN PIVOT = 8 THEN m_TunjanganInsentif
                               END JUMLAH
                        FROM (SELECT m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif FROM DUAL), 
                                       (SELECT rownum pivot from dual
                                        CONNECT BY LEVEL <=8) 
                        ) WHERE INSTR(recItemPotongan.KOMPONEN_GAJI, KODE) > 0;
                    EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                    END;
              
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '03' THEN
                        m_Jumlah := recItemPotongan.JUMLAH;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '04' THEN
                        --m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK; --NVN -> TIDAK ADA GAJI POKOK DIGANTI MERIT PMS
                        m_Jumlah := m_MeritPMS;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '05' THEN
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3; --NVN -> TIDAK ADA JUMLAH P3 DIGANTI 0
                        m_Jumlah := 0;
                    END IF;

                    --m_Jumlah := m_Jumlah  * (recItemPotongan.PROSENTASE / 100);
                    m_Jumlah := m_Jumlah  * (TO_NUMBER(REPLACE(recItemPotongan.PROSENTASE ,'.',',')) / 100);
                    
               ELSIF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
                    
                    BEGIN
                        SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) INTO m_Jumlah FROM
                        (
                        SELECT
                            GAJI_POKOK
                        FROM PPI_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID), 
                        (SELECT PROSENTASE/100 PROSENTASE FROM PPI_SIMPEG.PEGAWAI A INNER JOIN PPI_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID);
                    EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                    END;
                          
                    m_Taspen := m_Jumlah;
               ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
                    BEGIN
                        SELECT ROUND(m_MeritPMS * ((CASE WHEN recPenghasilanTerakhir.STATUS_KAWIN = 2 THEN (SELECT PEGAWAI_PERSEN FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH INTO m_Jumlah FROM DUAL;
                    EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                    END;
            
                    m_IuranPensiun := m_Jumlah;
                    
               ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
               
                    BEGIN
                        SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) INTO m_Jumlah FROM
                        (
                        SELECT
                            GAJI_POKOK
                        FROM PPI_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID), 
                        (SELECT PROSENTASE/100 PROSENTASE FROM PPI_SIMPEG.PEGAWAI A INNER JOIN PPI_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID);
                    EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                    END;
                         
               ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
                    m_Jumlah := 0;
               ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN

               -- ASURANSI_JIWASRAYA SEBENARNYA ADALAH JAMINAN HARI TUA !!!!!!!!!!!!!!!!!!
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                       --m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                       m_Jumlah := (2 / 100) * (75 / 100) * TO_NUMBER(REPLACE(0 ,'.',','));
                       --raise_application_error(-20001,'ASD- '||recPenghasilanTerakhir.JUMLAH_P3||' -ERROR- '||SQLERRM);
                   ELSE
                        BEGIN
                        
                            SELECT JUMLAH INTO m_JumlahJHT
                            FROM PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.POTONGAN_KONDISI B
                            WHERE 
                            A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND PREFIX = 'JAMINAN_HARI_TUA' AND KELOMPOK = recPenghasilanTerakhir.KELOMPOK AND
                            JENIS_PEGAWAI_ID = recPenghasilanTerakhir.JENIS_PEGAWAI_ID AND JENIS_POTONGAN = 'T' AND
                            recPenghasilanTerakhir.KELAS IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);
                        
                        EXCEPTION WHEN NO_DATA_FOUND THEN m_JumlahJHT := '0';
                        END;            
           
                       BEGIN
                            SELECT SUM(JUMLAH) JUMLAH INTO m_Jumlah FROM
                            (
                            SELECT '010' || ROWNUM KODE, 
                                   CASE 
                                        WHEN PIVOT = 1 THEN m_MeritPMS
                                        WHEN PIVOT = 2 THEN m_UangKehadiran
                                        WHEN PIVOT = 3 THEN m_UangTransport
                                        WHEN PIVOT = 4 THEN m_UangMakan
                                        WHEN PIVOT = 5 THEN m_TunjanganJabatan
                                        WHEN PIVOT = 6 THEN m_TPPPMS
                                        WHEN PIVOT = 7 THEN m_TunjanganPerbantuan
                                        WHEN PIVOT = 8 THEN m_TunjanganInsentif
                                   END JUMLAH
                            FROM (SELECT m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif FROM DUAL), 
                                           (SELECT rownum pivot from dual
                                            CONNECT BY LEVEL <=8) 
                            ) WHERE INSTR(recItemPotongan.KOMPONEN_GAJI, KODE) > 0;
                       EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                       END; 
                       
                       --m_Jumlah := (2 / 100) * m_Jumlah;
                       m_Jumlah := (2 / 100) * TO_NUMBER(REPLACE(m_Jumlah,'.',','));
                   END IF;

               ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
                    m_Jumlah := 55000;       
               ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
                    
                    BEGIN
                        SELECT JUMLAH INTO m_Jumlah FROM PPI_GAJI.IURAN_SPPI WHERE KELAS = recPenghasilanTerakhir.KELAS;
                    EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                    END;
                              
               ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
       
                    IF NVL(0, 0) = 0 THEN

                        BEGIN
                            SELECT ROUND(m_MeritPMS * (SELECT FAKTOR_WAJIB / 100 FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) INTO m_Jumlah
                            FROM DUAL;
                        EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                        END;
                                          
                    ELSE
          
                        BEGIN
                            SELECT ROUND(1 * (SELECT FAKTOR_WAJIB / 100 FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) INTO m_Jumlah
                            FROM DUAL;
                        EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                        END;
                        
                    END IF;
               ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
                    m_Jumlah := recItemPotongan.JUMLAH;
               ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
                    IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                        BEGIN
                            SELECT JUMLAH, KETERANGAN INTO m_Jumlah, m_UnitLink FROM PPI_GAJI.ASURANSI_PEGAWAI A INNER JOIN PPI_GAJI.ASURANSI B ON A.ASURANSI_ID = B.ASURANSI_ID   
                            WHERE PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID;
                        EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0'; m_UnitLink := '0';
                        END;          
                    ELSE
                        m_Jumlah := 0;
                    END IF;
                    -- START COMMENT
               --   DIGUNAKAN UNTUK PROSES UNIT LINK
                    /*
                    BEGIN
                        SELECT JUMLAH, KETERANGAN m_Jumlah FROM PPI_GAJI.ASURANSI_PEGAWAI A INNER JOIN PPI_GAJI.ASURANSI B ON A.ASURANSI_ID = B.ASURANSI_ID   
                        WHERE PEGAWAI_ID = recPenghasilanTerakhir.KELAS;
                    END;
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungUnitLink INTO m_Jumlah;
            
                    CLOSE cHitungUnitLink;             
            
                    -- ABSENSI DINAS BISA DIGUNAKAN UNTUK SEGALA HAL
        
                   IF m_BulanProses = '032013' OR m_BulanProses = '042013' THEN
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                           m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                       ELSE
                           OPEN cTabelJumlahPenghasilan('0101', m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                           FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                           CLOSE cTabelJumlahPenghasilan;            
                           m_Jumlah := (2 / 100) * m_Jumlah;
                       END IF;
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                             IF recPenghasilanTerakhir.PEGAWAI_ID = 1414 THEN
                                m_Jumlah := m_Jumlah * 1;
                             ELSE
                                m_Jumlah := m_Jumlah * 3;
                             END IF;
                       ELSE
                             m_Jumlah := m_Jumlah * 2;           
                       END IF;

                   END IF;  
                   */
                            
                    -- END COMMENT
                    --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
                    --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
                    --CLOSE cHitungPotonganKehadiran;  
            
                    --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
               ELSIF recItemPotongan.PREFIX = 'TUNJANGAN_PRESTASI' THEN
               
                    BEGIN
                        SELECT NVL(TOTAL_POTONGAN, 0) INTO m_Jumlah FROM PPI_GAJI.PERHITUNGAN_PRESTASI X WHERE PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID AND PERIODE = pBulanTahun;
                    EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                    END;
                    
               ELSE
                    BEGIN 
                        SELECT COALESCE(MAX(JUMLAH), 0) INTO m_Jumlah FROM PPI_GAJI.INTEGRASI_POTONGAN WHERE PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID AND PERIODE = pBulanTahun AND POTONGAN_KONDISI_ID = recItemPotongan.POTONGAN_KONDISI_ID;
                    EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                    END; 
                    
                    IF m_Jumlah = 0 THEN
                        BEGIN 
                            SELECT COALESCE(MAX(JUMLAH), 0) INTO m_Jumlah FROM PPI_GAJI.INTEGRASI_POTONGAN WHERE PEGAWAI_ID = recPenghasilanTerakhir.PEGAWAI_ID AND PERIODE IS NULL AND POTONGAN_KONDISI_ID = recItemPotongan.POTONGAN_KONDISI_ID;
                        EXCEPTION WHEN NO_DATA_FOUND THEN m_Jumlah := '0';
                        END; 
                    END IF;
                     
                      
               END IF; 
               
                   potongan_array(1):= ROUND(m_Jumlah);    
                   potongan_json_obj := PPI.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, PPI.JSON.addArray(potongan_array));
               END LOOP;
               
               PPI.JSON.closeJSONObj(potongan_json_obj);
            
                -- END COMMENT POTONGAN NVN --
                
               /* TAMPUNG KOMPONEN SUMBANGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */ 
        
                -- START COMMENT SUMBANGAN NVN --
               /*
               PPI.JSON.newJSONObj(sumbangan_json_obj);
       
               FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
            
                    IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSE
                        m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
                    END IF;
                    
                    IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                        m_ArrKali := PPI.string_fnc.split(recItemSumbangan.KALI,'/');    
                        --m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
                        m_Kali := TO_NUMBER(REPLACE(SUBSTR(recItemSumbangan.KALI,1,1),'.',',')) / TO_NUMBER(REPLACE(SUBSTR(recItemSumbangan.KALI,3,2),'.',','));
                    ELSE
                        --m_Kali := recItemSumbangan.KALI;
                        m_Kali := TO_NUMBER(REPLACE(recItemSumbangan.KALI,'.',','));
                    END IF;
                    
            
                    IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            --m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;
                            m_Jumlah := TO_NUMBER(REPLACE(m_Jumlah,'.',',')) * (3 / 100) * TO_NUMBER(REPLACE(m_Kali,'.',','));
                        ELSE
                            --m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;
                            m_Jumlah := TO_NUMBER(REPLACE(m_Jumlah,'.',',')) * (6 / 100) * TO_NUMBER(REPLACE(m_Kali,'.',','));
                        END IF;
                    ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                            IF recPenghasilanTerakhir.JABATAN_ID = 105 THEN
                    
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOMUT');
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 106 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 107 THEN     
                   
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_SEKKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                        
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 108 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_STAKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom;
                          
                            END IF;
                    
                            --m_Jumlah := m_Perumahan;
                            --m_PphDekom := TO_NUMBER(REPLACE(m_PphDekom,'.',','));
                            m_Jumlah :=(NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * m_PphDekom;
                
                        ELSE
                            FOR recPerhitunganPPH IN cPerhitunganPPH(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.NPWP) LOOP
                                IF recPerhitunganPPH.JENIS_PERHITUNGAN = 'GROSSUP' THEN
                                    OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                                    FETCH cHitungPPH21 INTO m_Jumlah;
            
                                    CLOSE cHitungPPH21;
                                ELSIF recPerhitunganPPH.JENIS_PERHITUNGAN = 'PROSENTASE' THEN
                                    IF recPerhitunganPPH.JUMLAH = '0111' THEN
                                        --m_Jumlah := (NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * recPerhitunganPPH.JUMLAH_NPWP;
                                        m_Jumlah := (NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * TO_NUMBER(REPLACE(recPerhitunganPPH.JUMLAH_NPWP,'.',','));
                                    ELSE                               
                                        --m_Jumlah := m_MeritPMS * recPerhitunganPPH.JUMLAH_NPWP;
                                        m_Jumlah := m_MeritPMS * TO_NUMBER(REPLACE(recPerhitunganPPH.JUMLAH_NPWP,'.',','));
                                    END IF;
                                END IF;

                            END LOOP;   
                    
                        END IF;
                            
                    ELSE
                        --m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
                        m_Jumlah := m_Jumlah * (TO_NUMBER(REPLACE(recItemSumbangan.PROSENTASE ,'.',',')) / 100) * m_Kali;
                    END IF;
                    
                   sumbangan_array(1):= ROUND(m_Jumlah);    
                   sumbangan_json_obj := PPI.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, PPI.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               PPI.JSON.closeJSONObj(sumbangan_json_obj);
                -- END COMMENT SUMBANGAN NVN --
              /* TAMPUNG KOMPONEN TANGGUNGAN PERUSAHAAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */  
                  
                  -- START COMMENT TANGGUNGAN NVN --
                  /*
              PPI.JSON.newJSONObj(tanggungan_json_obj);
       
               FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
                    IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                        m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                        --m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.GAJI_POKOK,'.',','));
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                        --m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_P3,'.',','));
                    END IF;

                    IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                        m_ArrKali := PPI.string_fnc.split(recItemTanggungan.KALI,'/');    
                        --m_Kali := SUBSTR(recItemTanggungan.KALI,1,2) / SUBSTR(recItemTanggungan.KALI,4,3);
                        m_Kali := TO_NUMBER(REPLACE(SUBSTR(recItemTanggungan.KALI,1,2),'.',',')) / TO_NUMBER(REPLACE(SUBSTR(recItemTanggungan.KALI,4,3),'.',','));
                    ELSE
                        --m_Kali := recItemTanggungan.KALI;
                        m_Kali := TO_NUMBER(REPLACE(recItemTanggungan.KALI,'.',','));
                    END IF;
                     
                   -- REM BY CHANDRA 22-01-2014
                   IF recItemTanggungan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSE 
                    m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                    -- END REM BY CHANDRA 22-01-2014
                    
                   --m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;
                   
                   m_Jumlah := m_Jumlah  * (TO_NUMBER(REPLACE(recItemTanggungan.PROSENTASE ,'.',',')) / 100) * m_Kali;
                   --m_Jumlah := TO_NUMBER(REPLACE(m_Jumlah,'.',','))  * (TO_NUMBER(REPLACE(recItemTanggungan.PROSENTASE ,'.',',')) / 100) * m_Kali;

                   sumbangan_array(1):= CEIL(m_Jumlah);    
                   tanggungan_json_obj := PPI.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, PPI.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               PPI.JSON.closeJSONObj(tanggungan_json_obj);
       
               PPI.JSON.newJSONObj(potongan_lain_json_obj);
                
               --raise_application_error(-20001,'bulan-'|| m_BulanProses||'-ASD pegawaiid-'|| recPenghasilanTerakhir.PEGAWAI_ID ||' -ERROR- '||SQLERRM);
               
               FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
                   potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
                   potongan_lain_json_obj := PPI.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, PPI.JSON.addArray(potongan_lain_array));
               END LOOP;  

               PPI.JSON.closeJSONObj(potongan_lain_json_obj);
                */
                -- END COMMENT TANGGUNGAN NVN --
                
               --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
               -- START COMMENT POTONGAN LAIN NVN --
               /*
               FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
                    m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
                   --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
                   IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                        m_Jumlah := 1;
                   ELSE
                        EXECUTE IMMEDIATE 'UPDATE PPI_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

                        EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                               LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                               JUMLAH) 
                                            VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   
                   END IF;
            
               END LOOP;      
       
               m_DanaPensiun := 0;
               */
               -- START COMMENT POTONGAN LAIN NVN --
          
             IF pWaktuPembayaran = 'AWAL_BULAN' THEN
                /*
                IF recPenghasilanTerakhir.PEGAWAI_ID = '21' THEN 
                    raise_application_error(-20001,'An error was encountered - '||recPenghasilanTerakhir.JABATAN_ID||' -ERROR- '||SQLERRM);
                END IF;
                */
                
                 
                 EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                           NO_URUT, PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, 
                                           GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, 
                                           POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN, 
                                           DEPARTEMEN, JABATAN_ID, JABATAN, 
                                           ASURANSI_KODE) 
                                        VALUES (  ' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ''' || recPenghasilanTerakhir.DEPARTEMEN_ID || ''', 
                                                ''' || pBulanTahun || ''', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', 
                                                ''' || REPLACE(PPI.JSON.JSON2String(gaji_json_obj), '''', '"') || ''', ''' || REPLACE(PPI.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(PPI.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', 
                                                ''' || REPLACE(PPI.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(PPI.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''',
                                                '''', ''' || recPenghasilanTerakhir.JABATAN_ID || ''', ''' || recPenghasilanTerakhir.JABATAN || ''', ''' || m_UnitLink || ''')';
             ELSE
                 EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                        VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(PPI.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';
             END IF;      
        ELSE
            EXECUTE IMMEDIATE 'UPDATE PPI_GAJI.GAJI_' || pWaktuPembayaran || ' SET NO_URUT = ' || recPenghasilanTerakhir.NO_URUT || ' WHERE PEGAWAI_ID = ' || recPenghasilanTerakhir.PEGAWAI_ID || ' AND BULANTAHUN = ''' || pBulanTahun || '''';
        END IF;

    END LOOP;    

--m_Jumlah := m_Jumlah  * (TO_NUMBER(REPLACE(recItemTanggungan.PROSENTASE ,'.',',')) / 100) * m_Kali;
--raise_application_error(-20001,'ASD- -ERROR- '||SQLERRM);
--TO_NUMBER(REPLACE(m_Jumlah,'.',','));

         EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.GAJI_AWAL_BULAN_LOG (
                               PERIODE, JENIS_PEGAWAI_ID, TANGGAL_PROSES) 
                            VALUES (''' || pBulanTahun || ''', ''' || pJenisPegawaiId || ''', SYSDATE)';

    
    COMMIT;
    /*
    EXCEPTION
    WHEN OTHERS THEN
        --DBMS_OUTPUT.PUT_LINE(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
        --RAISE;
        raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    */
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_V7_BAK;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_GAJI_V7_BAK
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 
/* SETUP DATA PEGAWAI, PENGHASILAN PEGAWAI, JABATAN (UNTUK KEPERLUAN PPH21), PANGKAT (UNTUK KEPERLUAN PPH21) DAN STATUS KELUARGA (UNTUK KEPERLUAN PPH21) 
   PADA KALKULASI PENGHASILAN V5 INI MERUPAKAN TAMBAHAN UNTUK PERHITUNGAN BPJS KESEHATAN
   ADANYA PENAMBAHAN UNTUK JENIS PEGAWAI PKWT KHUSUS YANG PEMBAYARAN PENGHASILANNYA LUMSUMP DENGAN UANG TRANSPORT INSERTIF DAN MAKAN
*/
CURSOR cTablePenghasilanTerakhir IS
   SELECT 
   ROW_NUMBER() OVER (ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC) NO_URUT, 
   A.PEGAWAI_ID, NVL((SELECT STATUS_BAYAR FROM PPI_GAJI.GAJI_AWAL_BULAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND BULANTAHUN = pBulanTahun), 0) STATUS_BAYAR,
   PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) JENIS_PEGAWAI_ID, A.NAMA, A.DEPARTEMEN_ID DEPARTEMEN_ID_PEGAWAI, PPI_SIMPEG.AMBIL_UNIT_KERJA(A.DEPARTEMEN_ID) DEPARTEMEN, D.JABATAN_ID, D.NAMA JABATAN,
   JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA, PROSENTASE_TPP, PROSENTASE_MOBILITAS, 
   JUMLAH_PERUMAHAN, PROSENTASE_PERUMAHAN, JUMLAH_BBM, PROSENTASE_BBM, JUMLAH_TELEPON, PROSENTASE_TELEPON, JENIS_KELAMIN, PPH, NPWP, 
   B.LUMPSUM_MAKAN, B.LUMPSUM_TRANSPORT
   FROM PPI_SIMPEG.PEGAWAI A 
   LEFT JOIN PPI_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanTahun, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
   LEFT JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   LEFT JOIN PPI_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN PPI_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID
   LEFT JOIN (   SELECT A.PEGAWAI_ID, 
                 CASE WHEN PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) = 3 THEN 
                       CASE WHEN NVL(TANGGAL_KONTRAK_AKHIR, SYSDATE) < TO_DATE(pBulanTahun, 'MMYYYY') THEN 0 ELSE 1 END  
                 ELSE 1
                  END STATUS_KONTRAK  
                 FROM PPI_SIMPEG.PEGAWAI A INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
   WHERE (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) AND G.STATUS_KONTRAK = 1
          AND PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC;
      
/* SETUP ITEM PENGHASILAN YANG DIPEROLEH SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   
CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, CASE WHEN JENIS_PEGAWAI_ID IN ( 6, 12 ) THEN 'AWAL_BULAN' ELSE GAJI_DIBERIKAN END GAJI_DIBERIKAN
    FROM PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM SUMBANGAN YANG DIBERIKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggunganPrefix(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR, pPrefix IN VARCHAR2) IS 
    SELECT JUMLAH
    FROM PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND PREFIX = pPrefix AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM POTONGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELOMPOK, DAN PEGAWAI YBS */   

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2, pJenisPegawai IN INTEGER, pKelompok IN CHAR) IS 
SELECT 
               A.POTONGAN_KONDISI_ID, B.PREFIX, C.JUMLAH, TO_NUMBER(A.PROSENTASE, '999.99') PROSENTASE, A.JUMLAH KOMPONEN_GAJI, C.POTONGAN_KONDISI_ID POTONGAN_KONDISI_ID_PEGAWAI
            FROM PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A 
            LEFT JOIN PPI_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
            LEFT JOIN PPI_GAJI.POTONGAN_KONDISI_PEGAWAI C ON A.POTONGAN_KONDISI_ID = C.POTONGAN_KONDISI_ID AND C.PEGAWAI_ID = pPegawaiId
            WHERE  A.JENIS_PEGAWAI_ID = pJenisPegawai  AND 
            A.KELOMPOK = pKelompok AND JENIS_POTONGAN = 'P' ORDER BY A.POTONGAN_KONDISI_ID;

/*            
    SELECT 
       A.POTONGAN_KONDISI_ID, B.PREFIX, A.JUMLAH, C.PROSENTASE, C.JUMLAH KOMPONEN_GAJI
    FROM PPI_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN PPI_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    INNER JOIN PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI C ON B.POTONGAN_KONDISI_ID = C.POTONGAN_KONDISI_ID AND C.JENIS_PEGAWAI_ID = pJenisPegawai  AND C.KELOMPOK = pKelompok
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;
*/


            
/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS  OUTPUT JSON */   

CURSOR cTablePotonganLainJSON(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS    
    SELECT 
       PREFIX, SUM(CASE WHEN ANGSURAN_TERBAYAR = 0 OR ANGSURAN_TERBAYAR = 1 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END) ANGSURAN_DIBAYARKAN
    FROM PPI_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN PPI_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || pBulanProses, 'DDMMYYYY') BETWEEN TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') AND ADD_MONTHS(TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY'), ANGSURAN - 1) 
     AND (NOT ANGSURAN = ANGSURAN_TERBAYAR OR (ANGSURAN = ANGSURAN_TERBAYAR AND BULAN_AKHIR_BAYAR = pBulanProses ))
    GROUP BY PREFIX;


/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS */   
    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_PEGAWAI_ID, A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, 
       ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR, CASE WHEN ANGSURAN_TERBAYAR = 0 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END ANGSURAN_DIBAYARKAN
    FROM PPI_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN PPI_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') <= TO_DATE('01' || pBulanProses, 'DDMMYYYY') AND NOT ANGSURAN = ANGSURAN_TERBAYAR;
    

/* SETUP IURAN PENSIUN */   
    
CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP DANA PENSIUN */   
    
CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP TASPEN */  

CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM PPI_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM PPI_SIMPEG.PEGAWAI A INNER JOIN PPI_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN KESEHATAN */  
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM PPI_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM PPI_SIMPEG.PEGAWAI A INNER JOIN PPI_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN SPPI */  
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM PPI_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

/* SETUP UNIT LINK */  

CURSOR cHitungUnitLink(pPegawaiId IN VARCHAR2) IS
    SELECT JUMLAH, KETERANGAN FROM PPI_GAJI.ASURANSI_PEGAWAI A INNER JOIN PPI_GAJI.ASURANSI B ON A.ASURANSI_ID = B.ASURANSI_ID   
    WHERE PEGAWAI_ID = pPegawaiId;


/* SETUP BESARAN PENGHASILAN SESUAI KODE */  

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

/* SETUP PERIODE CAPEG  PKWT */  

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_CAPEG_PKWT WHERE PERIODE IS NOT NULL ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

/* SETUP PERIODE SELAIN CAPEG  PKWT */  

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE WHERE PERIODE IS NOT NULL ORDER BY GAJI_PERIODE_ID DESC;

/* SETUP PPH21 */  

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2,
pJenisKelamin VARCHAR2,
pStatusKawin CHAR) IS
    SELECT PPI_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga, pJenisKelamin, pStatusKawin) JUMLAH FROM DUAL;
    
/*CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN PPI_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');
*/

/* SETUP PPH DEKOM */  

CURSOR cPerhitunganPPHDekom(pKode IN VARCHAR2) IS
    SELECT NVL(TO_NUMBER(REPLACE(NILAI,'.',',')), 0) FROM PPI.SETTING_APLIKASI WHERE KODE= pKode;
    --SELECT NVL(TO_NUMBER(NILAI), 0) FROM PPI.SETTING_APLIKASI WHERE KODE = pKode;

/* SETUP PERIODE SELAIN DEKOM */  

CURSOR cPerhitunganPPH(pJenisPegawaiId IN INTEGER, pKelas VARCHAR2, pNPWP IN VARCHAR2) IS
SELECT JENIS_PERHITUNGAN, DECODE(NVL(pNPWP, 'X'), 'X', JUMLAH_TANPA_NPWP, JUMLAH_NPWP) JUMLAH_NPWP, JUMLAH  FROM PPI_GAJI.PERHITUNGAN_PPH
                WHERE JENIS_PENGHASILAN = 'GAJI' AND JENIS_PEGAWAI_ID = pJenisPegawaiId AND pKelas IN (SELECT REGEXP_SUBSTR(KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);
        
gaji_json_obj           PPI.json.JSONStructObj; 
gaji_array              PPI.json.JSONArray;     
sumbangan_json_obj      PPI.json.JSONStructObj;
sumbangan_array         PPI.json.JSONArray;
potongan_json_obj       PPI.json.JSONStructObj;
potongan_array          PPI.json.JSONArray;
tanggungan_json_obj     PPI.json.JSONStructObj;
tanggungan_array        PPI.json.JSONArray;
potongan_lain_json_obj  PPI.json.JSONStructObj;
potongan_lain_array     PPI.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan PPI.string_fnc.t_array; 
m_ArrKali PPI.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;
m_JumlahJHT             VARCHAR(20);
m_Mobilitas             NUMBER;
m_Perumahan             NUMBER;
m_BBM                   NUMBER;
m_Telepon               NUMBER;
m_PphDekom              NUMBER;
m_UnitLink              VARCHAR(100);

m_rec_kali NUMBER;
m_hukuman NUMBER;

BEGIN    

/* JENIS PEGAWAI ID 3 = PKWT DAN 5 = PTTPK */  

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' OR pJenisPegawaiId = '1' OR pJenisPegawaiId = '12' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

END IF;

IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE PPI_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun  AND 
                 NOT NVL(STATUS_BAYAR, 0) = 1 AND
                 PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM PPI_SIMPEG.PEGAWAI A WHERE PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL));
  
     ELSE
          DELETE PPI_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     
     END IF;
     
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        
        
        IF NVL(recPenghasilanTerakhir.STATUS_BAYAR, 0)  = 0 THEN
                m_MeritPMS             := 0;
                m_UangKehadiran        := 0;
                m_UangTransport        := 0;
                m_UangMakan            := 0;
                m_TunjanganJabatan     := 0;
                m_TPPPMS               := 0;
                m_TunjanganPerbantuan  := 0;
                m_TunjanganInsentif    := 0;
                m_Premi                := 0;
                m_Mobilitas            := 0;
                m_Perumahan            := 0;
                m_BBM                  := 0;
                m_Telepon              := 0;
                 m_Taspen              := 0;
                m_IuranPensiun         := 0;
                m_UnitLink             := '';
                m_rec_kali             := 1;
                m_hukuman              := 0;
               
                PPI.JSON.newJSONObj(gaji_json_obj);
    
                FOR recItemPenghasilan IN cTableItemPenghasilan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
        
                    m_Jumlah :=0;

                    /* TAMPUNG KOMPONEN GAJI TERMASUK NILAINYA KE DALAM VARIABLE JSON */
                    IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN
                        --m_Jumlah := ROUND(recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI);
                        m_Jumlah := ROUND(TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_PENGHASILAN,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_PENGHASILAN,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',',')));
                        --TO_NUMBER(REPLACE(
                        --,'.',','))
                        m_MeritPMS := ROUND(m_Jumlah);
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',','));
                        m_UangKehadiran := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                        IF (recPenghasilanTerakhir.LUMPSUM_TRANSPORT = 0) THEN
                            m_rec_kali := recItemPenghasilan.KALI;
                        END IF;
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * m_rec_kali;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_TRANSPORTASI,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI,'.',',')) / 100) * TO_NUMBER(REPLACE(m_rec_kali,'.',','));
                        m_UangTransport := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                        IF (recPenghasilanTerakhir.LUMPSUM_MAKAN = 0) THEN
                            m_rec_kali := recItemPenghasilan.KALI;
                        END IF;
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * m_rec_kali;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_UANG_MAKAN,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN,'.',',')) / 100) * TO_NUMBER(REPLACE(m_rec_kali,'.',','));
                        m_UangMakan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',','));
                        m_TunjanganJabatan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recPenghasilanTerakhir.PROSENTASE_TPP / 100) * recItemPenghasilan.KALI;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_TPP,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_TPP,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',','));
                        m_TPPPMS := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH,'.',',')) * (TO_NUMBER(REPLACE(recItemPenghasilan.PROSENTASE,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',','));
                        m_TunjanganPerbantuan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'INSENTIF' THEN 
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_INSENTIF,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_INSENTIF,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',','));
                        m_TunjanganInsentif := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'MOBILITAS' THEN 
                        -- MOBILITAS UNTUK PERBANTUAN DIPROSES TENGAH BULAN SEDANGKAN DIREKSI AWAL BULAN
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 THEN
                            m_Jumlah := 0;
                        ELSE
                            --m_Jumlah := recPenghasilanTerakhir.JUMLAH_MOBILITAS * (recPenghasilanTerakhir.PROSENTASE_MOBILITAS / 100) * recItemPenghasilan.KALI;
                            m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_MOBILITAS,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_MOBILITAS,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',','));
                        END IF;
                        m_Mobilitas := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PERUMAHAN' THEN 
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_PERUMAHAN * (recPenghasilanTerakhir.PROSENTASE_PERUMAHAN / 100) * recItemPenghasilan.KALI;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_PERUMAHAN,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_PERUMAHAN,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',','));
                        m_Perumahan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'BBM' THEN 
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_BBM * (recPenghasilanTerakhir.PROSENTASE_BBM / 100) * recItemPenghasilan.KALI;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_BBM,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_BBM,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',',')); 
                        m_BBM := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TELEPON' THEN 
                        --m_Jumlah := recPenghasilanTerakhir.JUMLAH_TELEPON * (recPenghasilanTerakhir.PROSENTASE_TELEPON / 100) * recItemPenghasilan.KALI;
                        m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_TELEPON,'.',',')) * (TO_NUMBER(REPLACE(recPenghasilanTerakhir.PROSENTASE_TELEPON,'.',',')) / 100) * TO_NUMBER(REPLACE(recItemPenghasilan.KALI,'.',','));
                        m_Telepon := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                        m_Jumlah := 1;
                        m_Premi := 1;
                    END IF;

                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := PPI.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, PPI.JSON.addArray(gaji_array));
                   ELSE
                       IF ((recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran) OR 
                            ( recItemPenghasilan.PREFIX = 'UANG_MAKAN' AND recPenghasilanTerakhir.LUMPSUM_MAKAN = 1) OR
                            ( recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' AND recPenghasilanTerakhir.LUMPSUM_TRANSPORT = 1) ) THEN 
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := PPI.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, PPI.JSON.addArray(gaji_array));
                       END IF;
                    END IF;
                END LOOP;  

     
               PPI.JSON.closeJSONObj(gaji_json_obj);
        
               /* TAMPUNG KOMPONEN POTONGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */
       
               PPI.JSON.newJSONObj(potongan_json_obj);
       
               FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID, recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELOMPOK) LOOP  

               IF recItemPotongan.PREFIX = 'JAMINAN_KESEHATAN_PESERTA' OR recItemPotongan.PREFIX = 'JAMINAN_HARI_TUA_PESERTA' OR recItemPotongan.PREFIX = 'JAMINAN_PENSIUN_PESERTA' THEN
               m_Jumlah :=0;
            
                    IF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemPotongan.KOMPONEN_GAJI, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
              
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '03' THEN
                        m_Jumlah := recItemPotongan.JUMLAH;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                    END IF;

                    --m_Jumlah := m_Jumlah  * (recItemPotongan.PROSENTASE / 100);
                    m_Jumlah := m_Jumlah  * (TO_NUMBER(REPLACE(recItemPotongan.PROSENTASE ,'.',',')) / 100);
                    
               ELSIF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
                    OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungTaspen INTO m_Jumlah;
            
                    CLOSE cHitungTaspen;
                          
                    m_Taspen := m_Jumlah;
               ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
                    OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
                    FETCH cHitungIuranPensiun INTO m_Jumlah;
            
                    CLOSE cHitungIuranPensiun;      
            
                    m_IuranPensiun := m_Jumlah;
                    
               ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
                    OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
                    CLOSE cHitungIuranKesehatan;      
               ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
                    m_Jumlah := 0;
               ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN

               -- ASURANSI_JIWASRAYA SEBENARNYA ADALAH JAMINAN HARI TUA !!!!!!!!!!!!!!!!!!
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                       --m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                       m_Jumlah := (2 / 100) * (75 / 100) * TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_P3 ,'.',','));
                       --raise_application_error(-20001,'ASD- '||recPenghasilanTerakhir.JUMLAH_P3||' -ERROR- '||SQLERRM);
                   ELSE
                       OPEN cTableItemTanggunganPrefix(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK, 'JAMINAN_HARI_TUA');
                       FETCH cTableItemTanggunganPrefix INTO m_JumlahJHT;
                       CLOSE cTableItemTanggunganPrefix;            
           
                       OPEN cTabelJumlahPenghasilan(m_JumlahJHT, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                       FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                       CLOSE cTabelJumlahPenghasilan;
                       
                       --m_Jumlah := (2 / 100) * m_Jumlah;
                       m_Jumlah := (2 / 100) * TO_NUMBER(REPLACE(m_Jumlah,'.',','));
                   END IF;

               ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
                    m_Jumlah := 55000;       
               ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
                    OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungIuranSPPI INTO m_Jumlah;
            
                    CLOSE cHitungIuranSPPI;                          
               ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
       
                    IF NVL(recPenghasilanTerakhir.JUMLAH_P3, 0) = 0 THEN

                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_PENGHASILAN);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;  
                                          
                    ELSE
          
                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;           
      
                    END IF;
               ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
                    m_Jumlah := recItemPotongan.JUMLAH;
               ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
                    IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungUnitLink INTO m_Jumlah, m_UnitLink;
            
                    CLOSE cHitungUnitLink;             
                    ELSE
                        m_Jumlah := 0;
                    END IF;
                   /*
               --   DIGUNAKAN UNTUK PROSES UNIT LINK
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungUnitLink INTO m_Jumlah;
            
                    CLOSE cHitungUnitLink;             
            
                    -- ABSENSI DINAS BISA DIGUNAKAN UNTUK SEGALA HAL
        
                   IF m_BulanProses = '032013' OR m_BulanProses = '042013' THEN
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                           m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                       ELSE
                           OPEN cTabelJumlahPenghasilan('0101', m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                           FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                           CLOSE cTabelJumlahPenghasilan;            
                           m_Jumlah := (2 / 100) * m_Jumlah;
                       END IF;
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                             IF recPenghasilanTerakhir.PEGAWAI_ID = 1414 THEN
                                m_Jumlah := m_Jumlah * 1;
                             ELSE
                                m_Jumlah := m_Jumlah * 3;
                             END IF;
                       ELSE
                             m_Jumlah := m_Jumlah * 2;           
                       END IF;

                   END IF;           
                    */
                    --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
                    --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
                    --CLOSE cHitungPotonganKehadiran;  
            
                    --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
               ELSE
                    m_Jumlah := recItemPotongan.JUMLAH;       
               END IF;
                   potongan_array(1):= ROUND(m_Jumlah);    
                   potongan_json_obj := PPI.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, PPI.JSON.addArray(potongan_array));
               END LOOP;
               
               PPI.JSON.closeJSONObj(potongan_json_obj);
       
               /* TAMPUNG KOMPONEN SUMBANGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */ 
       
               PPI.JSON.newJSONObj(sumbangan_json_obj);
       
               FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
            
                    IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSE
                        m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
                    END IF;
                    
                    IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                        m_ArrKali := PPI.string_fnc.split(recItemSumbangan.KALI,'/');    
                        --m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
                        m_Kali := TO_NUMBER(REPLACE(SUBSTR(recItemSumbangan.KALI,1,1),'.',',')) / TO_NUMBER(REPLACE(SUBSTR(recItemSumbangan.KALI,3,2),'.',','));
                    ELSE
                        --m_Kali := recItemSumbangan.KALI;
                        m_Kali := TO_NUMBER(REPLACE(recItemSumbangan.KALI,'.',','));
                    END IF;
                    
            
                    IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            --m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;
                            m_Jumlah := TO_NUMBER(REPLACE(m_Jumlah,'.',',')) * (3 / 100) * TO_NUMBER(REPLACE(m_Kali,'.',','));
                        ELSE
                            --m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;
                            m_Jumlah := TO_NUMBER(REPLACE(m_Jumlah,'.',',')) * (6 / 100) * TO_NUMBER(REPLACE(m_Kali,'.',','));
                        END IF;
                    ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                            IF recPenghasilanTerakhir.JABATAN_ID = 105 THEN
                    
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOMUT');
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 106 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 107 THEN     
                   
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_SEKKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                        
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 108 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_STAKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom;
                          
                            END IF;
                    
                            --m_Jumlah := m_Perumahan;
                            --m_PphDekom := TO_NUMBER(REPLACE(m_PphDekom,'.',','));
                            m_Jumlah :=(NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * m_PphDekom;
                
                        ELSE
                            FOR recPerhitunganPPH IN cPerhitunganPPH(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.NPWP) LOOP
                                IF recPerhitunganPPH.JENIS_PERHITUNGAN = 'GROSSUP' THEN
                                    OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                                    FETCH cHitungPPH21 INTO m_Jumlah;
            
                                    CLOSE cHitungPPH21;
                                ELSIF recPerhitunganPPH.JENIS_PERHITUNGAN = 'PROSENTASE' THEN
                                    IF recPerhitunganPPH.JUMLAH = '0111' THEN
                                        --m_Jumlah := (NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * recPerhitunganPPH.JUMLAH_NPWP;
                                        m_Jumlah := (NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * TO_NUMBER(REPLACE(recPerhitunganPPH.JUMLAH_NPWP,'.',','));
                                    ELSE                               
                                        --m_Jumlah := m_MeritPMS * recPerhitunganPPH.JUMLAH_NPWP;
                                        m_Jumlah := m_MeritPMS * TO_NUMBER(REPLACE(recPerhitunganPPH.JUMLAH_NPWP,'.',','));
                                    END IF;
                                END IF;

                            END LOOP;   
                    
                        END IF;
                            
                    ELSE
                        --m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
                        m_Jumlah := m_Jumlah * (TO_NUMBER(REPLACE(recItemSumbangan.PROSENTASE ,'.',',')) / 100) * m_Kali;
                    END IF;
                    
                   sumbangan_array(1):= ROUND(m_Jumlah);    
                   sumbangan_json_obj := PPI.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, PPI.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               PPI.JSON.closeJSONObj(sumbangan_json_obj);

              /* TAMPUNG KOMPONEN TANGGUNGAN PERUSAHAAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */  
                  
              PPI.JSON.newJSONObj(tanggungan_json_obj);
       
               FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
                    IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                        m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                        --m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.GAJI_POKOK,'.',','));
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                        --m_Jumlah := TO_NUMBER(REPLACE(recPenghasilanTerakhir.JUMLAH_P3,'.',','));
                    END IF;

                    IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                        m_ArrKali := PPI.string_fnc.split(recItemTanggungan.KALI,'/');    
                        --m_Kali := SUBSTR(recItemTanggungan.KALI,1,2) / SUBSTR(recItemTanggungan.KALI,4,3);
                        m_Kali := TO_NUMBER(REPLACE(SUBSTR(recItemTanggungan.KALI,1,2),'.',',')) / TO_NUMBER(REPLACE(SUBSTR(recItemTanggungan.KALI,4,3),'.',','));
                    ELSE
                        --m_Kali := recItemTanggungan.KALI;
                        m_Kali := TO_NUMBER(REPLACE(recItemTanggungan.KALI,'.',','));
                    END IF;
                     
                   /* REM BY CHANDRA 22-01-2014
                   IF recItemTanggungan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSE 
                    m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                    */
                    
                   --m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;
                   
                   m_Jumlah := m_Jumlah  * (TO_NUMBER(REPLACE(recItemTanggungan.PROSENTASE ,'.',',')) / 100) * m_Kali;
                   --m_Jumlah := TO_NUMBER(REPLACE(m_Jumlah,'.',','))  * (TO_NUMBER(REPLACE(recItemTanggungan.PROSENTASE ,'.',',')) / 100) * m_Kali;

                   sumbangan_array(1):= CEIL(m_Jumlah);    
                   tanggungan_json_obj := PPI.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, PPI.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               PPI.JSON.closeJSONObj(tanggungan_json_obj);
       
               PPI.JSON.newJSONObj(potongan_lain_json_obj);
                
               --raise_application_error(-20001,'bulan-'|| m_BulanProses||'-ASD pegawaiid-'|| recPenghasilanTerakhir.PEGAWAI_ID ||' -ERROR- '||SQLERRM);
               
               FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
                   potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
                   potongan_lain_json_obj := PPI.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, PPI.JSON.addArray(potongan_lain_array));
               END LOOP;  

               PPI.JSON.closeJSONObj(potongan_lain_json_obj);

               --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
               FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
                    m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
                   --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
                   IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                        m_Jumlah := 1;
                   ELSE
                        EXECUTE IMMEDIATE 'UPDATE PPI_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

                        EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                               LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                               JUMLAH) 
                                            VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   
                   END IF;
            
               END LOOP;      
       
               m_DanaPensiun := 0;
       
          
             IF pWaktuPembayaran = 'AWAL_BULAN' THEN
                 EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN, DEPARTEMEN, JABATAN_ID, JABATAN, ASURANSI_KODE) 
                                        VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ''' || recPenghasilanTerakhir.DEPARTEMEN_ID_PEGAWAI || ''', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(PPI.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                                ''' || REPLACE(PPI.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(PPI.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', 
                                                ''' || REPLACE(PPI.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(PPI.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''',
                                                ''' || recPenghasilanTerakhir.DEPARTEMEN || ''', ''' || recPenghasilanTerakhir.JABATAN_ID || ''', ''' || recPenghasilanTerakhir.JABATAN || ''', ''' || m_UnitLink || ''')';
             ELSE
                 EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                        VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(PPI.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';
             END IF;      
        ELSE
            EXECUTE IMMEDIATE 'UPDATE PPI_GAJI.GAJI_' || pWaktuPembayaran || ' SET NO_URUT = ' || recPenghasilanTerakhir.NO_URUT || ' WHERE PEGAWAI_ID = ' || recPenghasilanTerakhir.PEGAWAI_ID || ' AND BULANTAHUN = ''' || pBulanTahun || '''';
        END IF;

    END LOOP;    

--m_Jumlah := m_Jumlah  * (TO_NUMBER(REPLACE(recItemTanggungan.PROSENTASE ,'.',',')) / 100) * m_Kali;
--raise_application_error(-20001,'ASD- -ERROR- '||SQLERRM);
--TO_NUMBER(REPLACE(m_Jumlah,'.',','));

         EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.GAJI_AWAL_BULAN_LOG (
                               PERIODE, JENIS_PEGAWAI_ID, TANGGAL_PROSES) 
                            VALUES (''' || pBulanTahun || ''', ''' || pJenisPegawaiId || ''', SYSDATE)';

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
        --DBMS_OUTPUT.PUT_LINE(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);
        --RAISE;
        raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_GAJI_V7_BETA;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_GAJI_V7_BETA
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 
/* SETUP DATA PEGAWAI, PENGHASILAN PEGAWAI, JABATAN (UNTUK KEPERLUAN PPH21), PANGKAT (UNTUK KEPERLUAN PPH21) DAN STATUS KELUARGA (UNTUK KEPERLUAN PPH21) 
   PADA KALKULASI PENGHASILAN V5 INI MERUPAKAN TAMBAHAN UNTUK PERHITUNGAN BPJS KESEHATAN
   ADANYA PENAMBAHAN UNTUK JENIS PEGAWAI PKWT KHUSUS YANG PEMBAYARAN PENGHASILANNYA LUMSUMP DENGAN UANG TRANSPORT INSERTIF DAN MAKAN
*/
CURSOR cTablePenghasilanTerakhir IS
   SELECT 
   ROW_NUMBER() OVER (ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC) NO_URUT, 
   A.PEGAWAI_ID, NVL((SELECT STATUS_BAYAR FROM IMASYS_GAJI.GAJI_AWAL_BULAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND BULANTAHUN = pBulanTahun), 0) STATUS_BAYAR,
   IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) JENIS_PEGAWAI_ID, A.NAMA, A.DEPARTEMEN_ID DEPARTEMEN_ID_PEGAWAI, IMASYS_SIMPEG.AMBIL_UNIT_KERJA(A.DEPARTEMEN_ID) DEPARTEMEN, D.JABATAN_ID, D.NAMA JABATAN,
   JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA, PROSENTASE_TPP, PROSENTASE_MOBILITAS, 
   JUMLAH_PERUMAHAN, PROSENTASE_PERUMAHAN, JUMLAH_BBM, PROSENTASE_BBM, JUMLAH_TELEPON, PROSENTASE_TELEPON, JENIS_KELAMIN, PPH, NPWP, 
   B.LUMPSUM_MAKAN, B.LUMPSUM_TRANSPORT
   FROM IMASYS_SIMPEG.PEGAWAI A 
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanTahun, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
   LEFT JOIN IMASYS_SIMPEG. PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN IMASYS_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID
   LEFT JOIN (   SELECT A.PEGAWAI_ID, 
                 CASE WHEN IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) = 3 THEN 
                       CASE WHEN NVL(TANGGAL_KONTRAK_AKHIR, SYSDATE) < TO_DATE(pBulanTahun, 'MMYYYY') THEN 0 ELSE 1 END  
                 ELSE 1
                  END STATUS_KONTRAK  
                 FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
   WHERE (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) AND G.STATUS_KONTRAK = 1
          AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC;
      
/* SETUP ITEM PENGHASILAN YANG DIPEROLEH SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   
CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, CASE WHEN JENIS_PEGAWAI_ID IN ( 6, 12 ) THEN 'AWAL_BULAN' ELSE GAJI_DIBERIKAN END GAJI_DIBERIKAN
    FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM SUMBANGAN YANG DIBERIKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggunganPrefix(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR, pPrefix IN VARCHAR2) IS 

    SELECT JUMLAH
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND PREFIX = pPrefix AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);


/* SETUP ITEM TANGGUNGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELAS DAN KELOMPOK */   

CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 

    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, IMASYS_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'T' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

/* SETUP ITEM POTONGAN YANG DIBEBANKAN SESUAI JENIS PEGAWAI, KELOMPOK, DAN PEGAWAI YBS */   

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2, pJenisPegawai IN INTEGER, pKelompok IN CHAR) IS 
    SELECT 
       A.POTONGAN_KONDISI_ID, B.PREFIX, A.JUMLAH, C.PROSENTASE, C.JUMLAH KOMPONEN_GAJI
    FROM IMASYS_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    INNER JOIN IMASYS_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI C ON B.POTONGAN_KONDISI_ID = C.POTONGAN_KONDISI_ID AND C.JENIS_PEGAWAI_ID = pJenisPegawai  AND C.KELOMPOK = pKelompok
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;

/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS  OUTPUT JSON */   

CURSOR cTablePotonganLainJSON(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS    
    SELECT 
       PREFIX, SUM(CASE WHEN ANGSURAN_TERBAYAR = 0 OR ANGSURAN_TERBAYAR = 1 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END) ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || pBulanProses, 'DDMMYYYY') BETWEEN TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') AND ADD_MONTHS(TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY'), ANGSURAN - 1) 
     AND (NOT ANGSURAN = ANGSURAN_TERBAYAR OR (ANGSURAN = ANGSURAN_TERBAYAR AND BULAN_AKHIR_BAYAR = pBulanProses ))
    GROUP BY PREFIX;


/* SETUP ITEM POTONGAN  LAIN YANG DIBEBANKAN SESUAI PEGAWAI YBS */   
    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_PEGAWAI_ID, A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, 
       ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR, CASE WHEN ANGSURAN_TERBAYAR = 0 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END ANGSURAN_DIBAYARKAN
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN IMASYS_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') <= TO_DATE('01' || pBulanProses, 'DDMMYYYY') AND NOT ANGSURAN = ANGSURAN_TERBAYAR;
    

/* SETUP IURAN PENSIUN */   
    
CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP DANA PENSIUN */   
    
CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM IMASYS_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

/* SETUP TASPEN */  

CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN KESEHATAN */  
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM IMASYS_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM IMASYS_SIMPEG.PEGAWAI A INNER JOIN IMASYS_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);

/* SETUP IURAN SPPI */  
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM IMASYS_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

/* SETUP UNIT LINK */  

CURSOR cHitungUnitLink(pPegawaiId IN VARCHAR2) IS    
    
    SELECT JUMLAH, KETERANGAN FROM IMASYS_GAJI.ASURANSI_PEGAWAI A INNER JOIN IMASYS_GAJI.ASURANSI B ON A.ASURANSI_ID = B.ASURANSI_ID   
    WHERE PEGAWAI_ID = pPegawaiId;


/* SETUP BESARAN PENGHASILAN SESUAI KODE */  

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

/* SETUP PERIODE CAPEG  PKWT */  

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_CAPEG_PKWT ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

/* SETUP PERIODE SELAIN CAPEG  PKWT */  

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

/* SETUP PPH21 */  

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2,
pJenisKelamin VARCHAR2,
pStatusKawin CHAR) IS
    SELECT IMASYS_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga, pJenisKelamin, pStatusKawin) JUMLAH FROM DUAL;
    
CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN IMASYS_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');

/* SETUP PPH DEKOM */  

CURSOR cPerhitunganPPHDekom(pKode IN VARCHAR2) IS
    SELECT NVL(TO_NUMBER(NILAI), 0) FROM IMASYS.SETTING_APLIKASI WHERE KODE = pKode;

/* SETUP PERIODE SELAIN DEKOM */  

CURSOR cPerhitunganPPH(pJenisPegawaiId IN INTEGER, pKelas VARCHAR2, pNPWP IN VARCHAR2) IS
SELECT JENIS_PERHITUNGAN, DECODE(NVL(pNPWP, 'X'), 'X', JUMLAH_TANPA_NPWP, JUMLAH_NPWP) JUMLAH_NPWP, JUMLAH  FROM IMASYS_GAJI.PERHITUNGAN_PPH
                WHERE JENIS_PENGHASILAN = 'GAJI' AND JENIS_PEGAWAI_ID = pJenisPegawaiId AND pKelas IN (SELECT REGEXP_SUBSTR(KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);
        
gaji_json_obj           IMASYS.json.JSONStructObj; 
gaji_array              IMASYS.json.JSONArray;     
sumbangan_json_obj      IMASYS.json.JSONStructObj;
sumbangan_array         IMASYS.json.JSONArray;
potongan_json_obj       IMASYS.json.JSONStructObj;
potongan_array          IMASYS.json.JSONArray;
tanggungan_json_obj     IMASYS.json.JSONStructObj;
tanggungan_array        IMASYS.json.JSONArray;
potongan_lain_json_obj  IMASYS.json.JSONStructObj;
potongan_lain_array     IMASYS.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan IMASYS.string_fnc.t_array; 
m_ArrKali IMASYS.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;
m_JumlahJHT             VARCHAR(20);
m_Mobilitas             NUMBER;
m_Perumahan             NUMBER;
m_BBM                   NUMBER;
m_Telepon               NUMBER;
m_PphDekom              NUMBER;
m_UnitLink              VARCHAR(100);

m_rec_kali NUMBER;
m_hukuman NUMBER;

BEGIN    

/* JENIS PEGAWAI ID 3 = PKWT DAN 5 = PTTPK */  

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' OR pJenisPegawaiId = '1' OR pJenisPegawaiId = '12' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

END IF;
            
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE IMASYS_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun  AND 
                 NOT NVL(STATUS_BAYAR, 0) = 1 AND
                 PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI A WHERE IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL));
  /*              
    DELETE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN
       WHERE ANGSURAN_BULAN = pBulanTahun
       AND LAIN_KONDISI_PEGAWAI_ID IN ( SELECT b.LAIN_KONDISI_PEGAWAI_ID
    FROM IMASYS_GAJI.LAIN_KONDISI_PEGAWAI A LEFT JOIN IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN B ON A.LAIN_KONDISI_PEGAWAI_ID = B.LAIN_KONDISI_PEGAWAI_ID 
    WHERE B.ANGSURAN_BULAN = pBulanTahun
     and PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI A WHERE IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanTahun, A.PEGAWAI_ID) IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL))
    );
       */          
     ELSE
          DELETE IMASYS_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     
     END IF;
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        
        
        IF NVL(recPenghasilanTerakhir.STATUS_BAYAR, 0)  = 0 THEN
            
    
                m_MeritPMS             := 0;
                m_UangKehadiran        := 0;
                m_UangTransport        := 0;
                m_UangMakan            := 0;
                m_TunjanganJabatan     := 0;
                m_TPPPMS               := 0;
                m_TunjanganPerbantuan  := 0;
                m_TunjanganInsentif    := 0;
                m_Premi                := 0;
                m_Mobilitas            := 0;
                m_Perumahan            := 0;
                m_BBM                  := 0;
                m_Telepon              := 0;
                 m_Taspen              := 0;
                m_IuranPensiun         := 0;
                m_UnitLink             := '';
                m_rec_kali             := 1;
                m_hukuman              := 0;
                
                BEGIN
                select COUNT(1) INTO m_hukuman from imasys_simpeg.PEGAWAI_HUKUMAN
                where jenis_hukuman_id = 14
                and pegawai_id = recPenghasilanTerakhir.PEGAWAI_ID
                and (TRUNC(to_date(pBulanTahun,'MMYYYY')) between TRUNC(TMT_SK) AND NVL(AKHIR_TMT,TO_DATE('12'||TO_CHAR(SYSDATE,'YYYY'),'MMYYYY')));
                   
                   IF ( pWaktuPembayaran = 'AWAL_BULAN' AND m_hukuman > 0 ) THEN
       
                   EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                               PEGAWAI_ID, DEPARTEMEN_ID, 
                                               BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN, DEPARTEMEN, JABATAN_ID, JABATAN, ASURANSI_KODE) 
                                            VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ''' || recPenghasilanTerakhir.DEPARTEMEN_ID_PEGAWAI || ''', ''' || pBulanTahun || ''',
                                                    ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''{  }'',
                                                    ''{  }'', ''{  }'', 
                                                    ''{  }'', ''{  }'', ''' || m_DanaPensiun || ''',
                                                    ''' || recPenghasilanTerakhir.DEPARTEMEN || ''', ''' || recPenghasilanTerakhir.JABATAN_ID || ''', ''' || recPenghasilanTerakhir.JABATAN || ''', ''' || m_UnitLink || ''')';
                   
                   CONTINUE;
                   END IF;
                   
                EXCEPTION WHEN OTHERS THEN
                        NULL;
                END;
               
                IMASYS.JSON.newJSONObj(gaji_json_obj);
    
                FOR recItemPenghasilan IN cTableItemPenghasilan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;

                    /* TAMPUNG KOMPONEN GAJI TERMASUK NILAINYA KE DALAM VARIABLE JSON */
                    IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                        m_Jumlah := ROUND(recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI);
                        m_MeritPMS := ROUND(m_Jumlah);
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
                        m_UangKehadiran := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                        IF (recPenghasilanTerakhir.LUMPSUM_TRANSPORT = 0) THEN
                            m_rec_kali := recItemPenghasilan.KALI;
                        END IF;
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * m_rec_kali;                                            
                        m_UangTransport := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                        IF (recPenghasilanTerakhir.LUMPSUM_MAKAN = 0) THEN
                            m_rec_kali := recItemPenghasilan.KALI;
                        END IF;
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * m_rec_kali;                                            
                        m_UangMakan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
                        m_TunjanganJabatan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recPenghasilanTerakhir.PROSENTASE_TPP / 100) * recItemPenghasilan.KALI;                                            
                        m_TPPPMS := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                        m_TunjanganPerbantuan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'INSENTIF' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
                        m_TunjanganInsentif := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'MOBILITAS' THEN 
                        -- MOBILITAS UNTUK PERBANTUAN DIPROSES TENGAH BULAN SEDANGKAN DIREKSI AWAL BULAN
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 THEN
                            m_Jumlah := 0;
                        ELSE
                            m_Jumlah := recPenghasilanTerakhir.JUMLAH_MOBILITAS * (recPenghasilanTerakhir.PROSENTASE_MOBILITAS / 100) * recItemPenghasilan.KALI;   
                        END IF;
                        m_Mobilitas := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PERUMAHAN' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_PERUMAHAN * (recPenghasilanTerakhir.PROSENTASE_PERUMAHAN / 100) * recItemPenghasilan.KALI;   
                        m_Perumahan := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'BBM' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_BBM * (recPenghasilanTerakhir.PROSENTASE_BBM / 100) * recItemPenghasilan.KALI;   
                        m_BBM := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'TELEPON' THEN 
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_TELEPON * (recPenghasilanTerakhir.PROSENTASE_TELEPON / 100) * recItemPenghasilan.KALI;   
                        m_Telepon := m_Jumlah;
                    ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                        m_Jumlah := 1;
                        m_Premi := 1;
                    END IF;
           
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
          
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
           
                   ELSE
                       IF ((recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran) OR 
                            ( recItemPenghasilan.PREFIX = 'UANG_MAKAN' AND recPenghasilanTerakhir.LUMPSUM_MAKAN = 1) OR
                            ( recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' AND recPenghasilanTerakhir.LUMPSUM_TRANSPORT = 1) ) THEN 
                           gaji_array(1):= m_Jumlah;    
                           gaji_json_obj := IMASYS.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, IMASYS.JSON.addArray(gaji_array));
                       END IF;
                    END IF;
                END LOOP;  

     
               IMASYS.JSON.closeJSONObj(gaji_json_obj);
               
               DBMS_OUTPUT.put_line ('DATA : ' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"'));

        
               /* TAMPUNG KOMPONEN POTONGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */
       
               IMASYS.JSON.newJSONObj(potongan_json_obj);
       
               FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID, recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELOMPOK) LOOP  

               IF recItemPotongan.PREFIX = 'JAMINAN_KESEHATAN_PESERTA' THEN
               -- DBMS_OUTPUT.put_line (recItemPotongan.PREFIX);
               m_Jumlah :=0;
            
                    IF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemPotongan.KOMPONEN_GAJI, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '03' THEN
                        m_Jumlah := recItemPotongan.JUMLAH;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSIF SUBSTR(recItemPotongan.KOMPONEN_GAJI, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                    END IF;
                    
                    m_Jumlah := m_Jumlah  * (recItemPotongan.PROSENTASE / 100);
                 --   DBMS_OUTPUT.put_line (recItemPotongan.PROSENTASE);
                 --   DBMS_OUTPUT.put_line (recItemPotongan.KOMPONEN_GAJI);
                 --   DBMS_OUTPUT.put_line (m_Jumlah);
               ELSIF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
                    OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungTaspen INTO m_Jumlah;
            
                    CLOSE cHitungTaspen;      
                    m_Taspen := m_Jumlah; 
               ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
                    OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
                    FETCH cHitungIuranPensiun INTO m_Jumlah;
            
                    CLOSE cHitungIuranPensiun;      
            
                    m_IuranPensiun := m_Jumlah;
               ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
                    OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
                    CLOSE cHitungIuranKesehatan;      
               ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
                    m_Jumlah := 0;
               ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN

               -- ASURANSI_JIWASRAYA SEBENARNYA ADALAH JAMINAN HARI TUA !!!!!!!!!!!!!!!!!!     
                   IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                       m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                   ELSE
           
                       OPEN cTableItemTanggunganPrefix(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK, 'JAMINAN_HARI_TUA');
                       FETCH cTableItemTanggunganPrefix INTO m_JumlahJHT;
                       CLOSE cTableItemTanggunganPrefix;            
           
                       OPEN cTabelJumlahPenghasilan(m_JumlahJHT, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                       FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                       CLOSE cTabelJumlahPenghasilan;            
                       m_Jumlah := (2 / 100) * m_Jumlah;
                   END IF;

               ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
                    m_Jumlah := 55000;       
               ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
                    OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungIuranSPPI INTO m_Jumlah;
            
                    CLOSE cHitungIuranSPPI;                          
               ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
       
                    IF NVL(recPenghasilanTerakhir.JUMLAH_P3, 0) = 0 THEN

                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_PENGHASILAN);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;  
                                          
                    ELSE
          
                        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
                        FETCH cHitungDanaPensiun INTO m_Jumlah;
            
                        CLOSE cHitungDanaPensiun;           
      
                    END IF;                            
               ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
                    m_Jumlah := recItemPotongan.JUMLAH;
               ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
                    IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.PEGAWAI_ID);
            
                    FETCH cHitungUnitLink INTO m_Jumlah, m_UnitLink;
            
                    CLOSE cHitungUnitLink;             
                    ELSE
                        m_Jumlah := 0;
                    END IF;
                   /*
               --   DIGUNAKAN UNTUK PROSES UNIT LINK
                    OPEN cHitungUnitLink(recPenghasilanTerakhir.KELAS);
            
                    FETCH cHitungUnitLink INTO m_Jumlah;
            
                    CLOSE cHitungUnitLink;             
            
                    -- ABSENSI DINAS BISA DIGUNAKAN UNTUK SEGALA HAL
        
                   IF m_BulanProses = '032013' OR m_BulanProses = '042013' THEN
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                           m_Jumlah := (2 / 100) * (75 / 100) * recPenghasilanTerakhir.JUMLAH_P3;
                       ELSE
                           OPEN cTabelJumlahPenghasilan('0101', m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                           FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                           CLOSE cTabelJumlahPenghasilan;            
                           m_Jumlah := (2 / 100) * m_Jumlah;
                       END IF;
           
                       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 THEN
                             IF recPenghasilanTerakhir.PEGAWAI_ID = 1414 THEN
                                m_Jumlah := m_Jumlah * 1;
                             ELSE
                                m_Jumlah := m_Jumlah * 3;
                             END IF;
                       ELSE
                             m_Jumlah := m_Jumlah * 2;           
                       END IF;

                   END IF;           
                    */
                    --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
                    --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
                    --CLOSE cHitungPotonganKehadiran;  
            
                    --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
               ELSE
                    m_Jumlah := recItemPotongan.JUMLAH;       
               END IF;         
                  
                   potongan_array(1):= ROUND(m_Jumlah);    
                   potongan_json_obj := IMASYS.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, IMASYS.JSON.addArray(potongan_array));
           
            
               END LOOP;

       
               IMASYS.JSON.closeJSONObj(potongan_json_obj);
       
       
               /* TAMPUNG KOMPONEN SUMBANGAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */ 
       
               IMASYS.JSON.newJSONObj(sumbangan_json_obj);
       
               FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
            
                    IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
            
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                
                    ELSE
                        m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
                    END IF;
            
            
                    IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                        m_ArrKali := IMASYS.string_fnc.split(recItemSumbangan.KALI,'/');    
                        m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
                    ELSE
                        m_Kali := recItemSumbangan.KALI;
                    END IF;
            
            
                    IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
                           
                        IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 7 THEN
                
                 
                            IF recPenghasilanTerakhir.JABATAN_ID = 105 THEN
                    
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOMUT');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 106 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_KOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                    
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 107 THEN     
                   
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_SEKKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom; 
                        
                            ELSIF recPenghasilanTerakhir.JABATAN_ID = 108 THEN  
                        
                                OPEN cPerhitunganPPHDekom('PPH_GAJI_STAKOM');
            
                                FETCH cPerhitunganPPHDekom INTO m_PphDekom;
            
                                CLOSE cPerhitunganPPHDekom;
                          
                            END IF;
                    
                            --m_Jumlah := m_Perumahan;
                            m_Jumlah :=(NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * m_PphDekom;
                
                        ELSE
                
                            FOR recPerhitunganPPH IN cPerhitunganPPH(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.NPWP) LOOP   
            
                                IF recPerhitunganPPH.JENIS_PERHITUNGAN = 'GROSSUP' THEN
                                    OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                                    FETCH cHitungPPH21 INTO m_Jumlah;
            
                                    CLOSE cHitungPPH21;
                                ELSIF recPerhitunganPPH.JENIS_PERHITUNGAN = 'PROSENTASE' THEN
                            
                                    IF recPerhitunganPPH.JUMLAH = '0111' THEN
                                        m_Jumlah := (NVL(m_Mobilitas, 0) + NVL(m_Perumahan, 0) + NVL(m_BBM, 0) + NVL(m_Telepon, 0) + NVL(m_TunjanganPerbantuan, 0) + NVL(m_TPPPMS, 0) + NVL(m_TunjanganJabatan, 0) + NVL(m_MeritPMS, 0)) * recPerhitunganPPH.JUMLAH_NPWP;
                                    ELSE                               
                                        m_Jumlah := m_MeritPMS * recPerhitunganPPH.JUMLAH_NPWP;
                                    END IF;
                        
                                END IF;

                            END LOOP;   
                    
                        END IF;
                            
                    ELSE
                        m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                           
                   sumbangan_array(1):= ROUND(m_Jumlah);    
                   sumbangan_json_obj := IMASYS.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               IMASYS.JSON.closeJSONObj(sumbangan_json_obj);

              /* TAMPUNG KOMPONEN TANGGUNGAN PERUSAHAAN TERMASUK NILAINYA KE DALAM VARIABLE JSON */  
                  
              IMASYS.JSON.newJSONObj(tanggungan_json_obj);
       
               FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
                    m_Jumlah :=0;
            
                    IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
                    OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
                    FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
                    CLOSE cTabelJumlahPenghasilan;
            
              
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                        m_Jumlah := 1;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                        m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                        m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                    ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '05' THEN
                        m_Jumlah := recPenghasilanTerakhir.JUMLAH_P3;
                    END IF;

            
                    IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                        m_ArrKali := IMASYS.string_fnc.split(recItemTanggungan.KALI,'/');    
                        m_Kali := SUBSTR(recItemTanggungan.KALI,1,2) / SUBSTR(recItemTanggungan.KALI,4,3);
                    ELSE
                        m_Kali := recItemTanggungan.KALI;
                    END IF;
 
                   /* REM BY CHANDRA 22-01-2014
                   IF recItemTanggungan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                        IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                            m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                        ELSE
                            m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                        END IF;
                    ELSE 
                    m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            
                    END IF;
                    */
                    
                   m_Jumlah := m_Jumlah  * (recItemTanggungan.PROSENTASE / 100) * m_Kali;
                           
                   sumbangan_array(1):= CEIL(m_Jumlah);    
                   tanggungan_json_obj := IMASYS.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, IMASYS.JSON.addArray(sumbangan_array));
            
               END LOOP;      

               IMASYS.JSON.closeJSONObj(tanggungan_json_obj);
       
               IMASYS.JSON.newJSONObj(potongan_lain_json_obj);

               FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  

                   potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
                   potongan_lain_json_obj := IMASYS.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, IMASYS.JSON.addArray(potongan_lain_array));
           
       
               END LOOP;  

               IMASYS.JSON.closeJSONObj(potongan_lain_json_obj);      
       
               --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
               FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
                    m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
                   --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
                   IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                        m_Jumlah := 1;
                   ELSE
                        EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

                        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                               LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                               JUMLAH) 
                                            VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   

                   END IF;
            
               END LOOP;      
       
               m_DanaPensiun := 0;
       
          
             IF pWaktuPembayaran = 'AWAL_BULAN' THEN
       
                 EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN, DEPARTEMEN, JABATAN_ID, JABATAN, ASURANSI_KODE) 
                                        VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ''' || recPenghasilanTerakhir.DEPARTEMEN_ID_PEGAWAI || ''', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                                ''' || REPLACE(IMASYS.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', 
                                                ''' || REPLACE(IMASYS.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(IMASYS.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''',
                                                ''' || recPenghasilanTerakhir.DEPARTEMEN || ''', ''' || recPenghasilanTerakhir.JABATAN_ID || ''', ''' || recPenghasilanTerakhir.JABATAN || ''', ''' || m_UnitLink || ''')';
             ELSE

                 EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                           PEGAWAI_ID, DEPARTEMEN_ID, 
                                           BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                        VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                                ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(IMASYS.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';

     
             END IF;      
        
        
        ELSE
        
            EXECUTE IMMEDIATE 'UPDATE IMASYS_GAJI.GAJI_' || pWaktuPembayaran || ' SET NO_URUT = ' || recPenghasilanTerakhir.NO_URUT || ' WHERE PEGAWAI_ID = ' || recPenghasilanTerakhir.PEGAWAI_ID || ' AND BULANTAHUN = ''' || pBulanTahun || '''';
        
        END IF;
         

    END LOOP;    


         EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.GAJI_AWAL_BULAN_LOG (
                               PERIODE, JENIS_PEGAWAI_ID, TANGGAL_PROSES) 
                            VALUES (''' || pBulanTahun || ''', ''' || pJenisPegawaiId || ''', SYSDATE)';

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_INSENTIF;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_INSENTIF
         IS 
CURSOR cTablePegawaiInsentif(pBulanProses IN VARCHAR2) IS

/* SETUP DATA PEGAWAI TERMASUK PPH DAN BESARANNYA */
SELECT DISTINCT A.PEGAWAI_ID, A.NRP, CASE WHEN NVL(JUMLAH_INSENTIF, 0) = 0 THEN JUMLAH_INSENTIF_KELAS ELSE TO_NUMBER(JUMLAH_INSENTIF) END JUMLAH_INSENTIF, CASE WHEN NVL(H.KELOMPOK, 'X') = 'X' THEN '5H' ELSE H.KELOMPOK END KELOMPOK, 
CASE WHEN NVL(JUMLAH_INSENTIF, 0) = 0 THEN 85 ELSE TO_NUMBER(PROSENTASE_INSENTIF) END PROSENTASE_INSENTIF, NPWP, C.JENIS_PEGAWAI_ID, 
CASE WHEN NVL(NPWP, 'X') = 'X' THEN D.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN D.JUMLAH_NPWP ELSE D.JUMLAH_TANPA_NPWP END END POTONGAN_PPH FROM IMASYS_SIMPEG.PEGAWAI A 
LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanProses, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
INNER JOIN IMASYS_GAJI.PERHITUNGAN_PPH D ON C.JENIS_PEGAWAI_ID = D.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'INSENTIF' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND E.KELAS IN (SELECT REGEXP_SUBSTR(D.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(D.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
INNER JOIN (SELECT B.KELAS, MAX(JUMLAH) JUMLAH_INSENTIF_KELAS FROM IMASYS_GAJI.INSENTIF A INNER JOIN IMASYS_SIMPEG.JABATAN B ON A.JABATAN_ID = B.JABATAN_ID GROUP BY B.KELAS) F ON E.KELAS = F.KELAS 
LEFT JOIN IMASYS_ABSENSI.PEGAWAI_JAM_KERJA_JENIS G ON A.PEGAWAI_ID = G.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.JAM_KERJA_JENIS H ON G.JAM_KERJA_JENIS_ID  = H.JAM_KERJA_JENIS_ID
LEFT JOIN (SELECT DISTINCT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN WHERE NOT NVL(JUMLAH_INSENTIF, 0) = 0 AND  TO_DATE(pBulanProses, 'MMYYYY') BETWEEN TMT_PENGHASILAN AND SYSDATE AND TO_DATE(pBulanProses, 'MMYYYY') >= TMT_PENGHASILAN) I ON I.PEGAWAI_ID = A.PEGAWAI_ID
WHERE 1 = 1 AND ((NOT NVL(JUMLAH_INSENTIF, 0) = 0 AND I.PEGAWAI_ID IS NOT NULL) OR EXISTS(SELECT 1 FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI X 
WHERE A.PEGAWAI_ID = X.PEGAWAI_ID AND KAPAL_ID = 40 AND (TO_DATE(pBulanProses, 'MMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses))) AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TGL_NON_AKTIF > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
AND ((E.TMT_JABATAN <= TO_DATE(pBulanProses, 'MMYYYY') OR (SELECT COUNT(1) FROM IMASYS_SIMPEG.PEGAWAI_JABATAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) > 1)  OR EXISTS (SELECT 1 FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI X 
WHERE E.PEGAWAI_ID = X.PEGAWAI_ID AND KAPAL_ID = 40 AND (TO_DATE(pBulanProses, 'MMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses)));

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT IMASYS_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(IMASYS_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;


/* SETUP DATA KEHADIRAN YANG DIANGGAP MASUK KERJA */    
CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_H
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
/*SELECT  
    JUMLAH_H + CT + CS + CB + SDK + DL
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
*/

/* SETUP DATA KEHADIRAN YANG TERPOTONG 10% */    

CURSOR cTablePotongan10(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_A + ITK
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
/* 
SELECT  
    JUMLAH_A + ITK + CAP
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
*/

/* SETUP DATA KEHADIRAN YANG TERPOTONG 4% */   

CURSOR cTablePotongan4(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    STK + IDK
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

/* SETUP DATA KEHADIRAN YANG TERPOTONG 1% */   

CURSOR cTablePotongan1(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    SDK + DL
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

/* SETUP DATA KEHADIRAN YANG TERPOTONG 2% */   

CURSOR cTablePotongan2(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    CAP + CB + CS + CT
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

    
m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_HariKerja INTEGER;
m_MasukKerja INTEGER;
m_JumlahPPH NUMBER;
m_JumlahDibayarkan INTEGER;
m_PPH21DenganInsentif NUMBER := 0;
m_PPH21TanpaInsentif NUMBER := 0;
m_PPH21Prosentase NUMBER := 0;
m_JumlahAlpha INTEGER := 0;
m_JumlahPot10 NUMBER := 0;
m_JumlahPot4 NUMBER := 0;
m_JumlahPot1 NUMBER := 0;
m_JumlahPot2 NUMBER := 0;
m_hukuman NUMBER;

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE IMASYS_GAJI.INSENTIF_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');


        FOR recPegawaiInsentif IN cTablePegawaiInsentif(m_BulanProses) LOOP       
        
        BEGIN
                select COUNT(1) INTO m_hukuman from imasys_simpeg.PEGAWAI_HUKUMAN
                where jenis_hukuman_id = 14
                and pegawai_id = recPegawaiInsentif.PEGAWAI_ID
                and (TRUNC(to_date(m_BulanProses,'MMYYYY')) between TRUNC(TMT_SK) AND NVL(AKHIR_TMT,TO_DATE('12'||TO_CHAR(SYSDATE,'YYYY'),'MMYYYY')));
                   
                   IF (m_hukuman > 0 ) THEN
                   
                   IF recPegawaiInsentif.KELOMPOK = '5H' THEN
                        m_HariKerja :=  m_HariKerjaNormal;
                    ELSE
                        m_HariKerja :=  m_HariKerjaFull;
                    END IF;
       
                    EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.INSENTIF_BANTUAN (
           PEGAWAI_ID, PERIODE, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, PROSENTASE_PPH, JUMLAH_PPH, DIBAYARKAN) 
        VALUES (' || recPegawaiInsentif.PEGAWAI_ID || ', ''' || m_BulanProses || ''', 0, 0, 0, 0, 0, 0)';
                   
                   CONTINUE;
                   END IF;
                   
        EXCEPTION WHEN OTHERS THEN
                        NULL;
        END; 
        
        m_JumlahAlpha := 0;
        

        IF recPegawaiInsentif.KELOMPOK = '5H' THEN
            m_HariKerja :=  m_HariKerjaNormal;  
        ELSE
            m_HariKerja :=  m_HariKerjaFull;          
        END IF;
        
        OPEN cTableHariMasukKerja(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
            
        FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
        CLOSE cTableHariMasukKerja;
        
        /*
        IF m_MasukKerja >= m_HariKerja THEN
            m_JumlahAlpha := 0;
        ELSE
        m_JumlahAlpha := m_HariKerja - m_MasukKerja;
        END IF;
        */
        /*
        OPEN cTableHariAlphaKerja(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTableHariAlphaKerja INTO m_JumlahAlpha;
        CLOSE cTableHariAlphaKerja;        
        */
        
        OPEN cTablePotongan1(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTablePotongan1 INTO m_JumlahPot1;
        CLOSE cTablePotongan1; 
        
        OPEN cTablePotongan2(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTablePotongan2 INTO m_JumlahPot2;
        CLOSE cTablePotongan2;

        OPEN cTablePotongan4(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTablePotongan4 INTO m_JumlahPot4;
        CLOSE cTablePotongan4;  
              
        OPEN cTablePotongan10(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTablePotongan10 INTO m_JumlahPot10;
        CLOSE cTablePotongan10;        

        
        m_Jumlah := recPegawaiInsentif.JUMLAH_INSENTIF * (recPegawaiInsentif.PROSENTASE_INSENTIF / 100);
        m_Jumlah := ROUND(m_Jumlah);
        
        m_JumlahPot4  := NVL(m_JumlahPot4, 0) * 4;
        
        m_JumlahPot10 := NVL(m_JumlahPot10, 0) * 10;
        
        m_JumlahPot1 := NVL(m_JumlahPot1, 0) * 1;
        
        m_JumlahPot2 := NVL(m_JumlahPot2, 0) * 2;
        
        m_ProsentasePotongan := m_JumlahPot4 + m_JumlahPot10 + m_JumlahPot1 + m_JumlahPot2;        

        m_JumlahPotongan     := ROUND(m_Jumlah * (m_ProsentasePotongan / 100));
        
        IF m_ProsentasePotongan > 100 THEN
            m_ProsentasePotongan := 100;
            m_JumlahPotongan := m_Jumlah;
        END IF;
        
        

        m_PPH21Prosentase := recPegawaiInsentif.POTONGAN_PPH * 100;
        m_JumlahPPH := (m_Jumlah - m_JumlahPotongan) * recPegawaiInsentif.POTONGAN_PPH;

        m_JumlahDibayarkan := m_Jumlah - m_JumlahPPH - m_JumlahPotongan;
      
        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.INSENTIF_BANTUAN (
           PEGAWAI_ID, PERIODE, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, PROSENTASE_PPH, JUMLAH_PPH, DIBAYARKAN) 
        VALUES (' || recPegawaiInsentif.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_Jumlah || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan ||  ', ' || m_PPH21Prosentase || ', ' || m_JumlahPPH || ', ' || m_JumlahDibayarkan || ')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_INSENTIF_BAK;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_INSENTIF_BAK
         IS 

CURSOR cTablePegawaiInsentif(pBulanProses IN VARCHAR2) IS

SELECT DISTINCT A.PEGAWAI_ID, A.NRP, CASE WHEN NVL(JUMLAH_INSENTIF, 0) = 0 THEN JUMLAH_INSENTIF_KELAS ELSE TO_NUMBER(JUMLAH_INSENTIF) END JUMLAH_INSENTIF, CASE WHEN NVL(H.KELOMPOK, 'X') = 'X' THEN '5H' ELSE H.KELOMPOK END KELOMPOK, 
CASE WHEN NVL(JUMLAH_INSENTIF, 0) = 0 THEN 85 ELSE TO_NUMBER(PROSENTASE_INSENTIF) END PROSENTASE_INSENTIF, NPWP, C.JENIS_PEGAWAI_ID, 
CASE WHEN NVL(NPWP, 'X') = 'X' THEN D.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN D.JUMLAH_NPWP ELSE D.JUMLAH_TANPA_NPWP END END POTONGAN_PPH FROM IMASYS_SIMPEG.PEGAWAI A 
LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanProses, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
INNER JOIN IMASYS_GAJI.PERHITUNGAN_PPH D ON C.JENIS_PEGAWAI_ID = D.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'INSENTIF' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND E.KELAS IN (SELECT REGEXP_SUBSTR(D.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(D.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
INNER JOIN (SELECT B.KELAS, MAX(JUMLAH) JUMLAH_INSENTIF_KELAS FROM IMASYS_GAJI.INSENTIF A INNER JOIN IMASYS_SIMPEG.JABATAN B ON A.JABATAN_ID = B.JABATAN_ID GROUP BY B.KELAS) F ON E.KELAS = F.KELAS 
LEFT JOIN IMASYS_ABSENSI.PEGAWAI_JAM_KERJA_JENIS G ON A.PEGAWAI_ID = G.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.JAM_KERJA_JENIS H ON G.JAM_KERJA_JENIS_ID  = H.JAM_KERJA_JENIS_ID
LEFT JOIN (SELECT DISTINCT PEGAWAI_ID FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN WHERE NOT NVL(JUMLAH_INSENTIF, 0) = 0 AND  TO_DATE(pBulanProses, 'MMYYYY') BETWEEN TMT_PENGHASILAN AND SYSDATE AND TO_DATE(pBulanProses, 'MMYYYY') >= TMT_PENGHASILAN) I ON I.PEGAWAI_ID = A.PEGAWAI_ID
WHERE 1 = 1 AND ((NOT NVL(JUMLAH_INSENTIF, 0) = 0 AND I.PEGAWAI_ID IS NOT NULL) OR EXISTS(SELECT 1 FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI X 
WHERE A.PEGAWAI_ID = X.PEGAWAI_ID AND KAPAL_ID = 40 AND (TO_DATE(pBulanProses, 'MMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses))) AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
AND ((E.TMT_JABATAN <= TO_DATE(pBulanProses, 'MMYYYY') OR (SELECT COUNT(1) FROM IMASYS_SIMPEG.PEGAWAI_JABATAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) > 1)  OR EXISTS (SELECT 1 FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI X 
WHERE E.PEGAWAI_ID = X.PEGAWAI_ID AND KAPAL_ID = 40 AND (TO_DATE(pBulanProses, 'MMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses)));

/*
CURSOR cTableHitungPPH21(pPegawaiId IN INTEGER, pPeriode IN VARCHAR, pInsentif IN NUMBER) IS
SELECT IMASYS_GAJI.HITUNG_PPH21_PER_TAHUN (GAJI_POKOK,
                                           MERIT_PMS,
                                           TUNJANGAN_JABATAN,
                                           TPP_PMS,
                                           TUNJANGAN_PERBANTUAN,
                                           JUMLAH_TRANSPORTASI,
                                           JUMLAH_UANG_MAKAN,
                                           0,
                                           pInsentif,
                                           IURAN_TASPEN,
                                           DANA_PENSIUN,
                                           STATUS_KELUARGA,
                                           DECODE (HARI_KERJA, '7H', 30, 22),
                                           JENIS_PEGAWAI_ID
                                          ) JUMLAH
FROM IMASYS_GAJI.GAJI_AWAL_BULAN_REPORT
WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;
*/

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT IMASYS_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(IMASYS_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

    
CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS

SELECT  
    JUMLAH_H + CT + CS + CB + SDK + DL
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;


CURSOR cTablePotongan10(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_A + ITK + CAP
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

CURSOR cTablePotongan4(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    STK + IDK + CB
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

    
m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_HariKerja INTEGER;
m_MasukKerja INTEGER;
m_JumlahPPH NUMBER;
m_JumlahDibayarkan INTEGER;
m_PPH21DenganInsentif NUMBER := 0;
m_PPH21TanpaInsentif NUMBER := 0;
m_PPH21Prosentase NUMBER := 0;
m_JumlahAlpha INTEGER := 0;
m_JumlahPot10 NUMBER := 0;
m_JumlahPot4 NUMBER := 0;

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE IMASYS_GAJI.INSENTIF_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');


        FOR recPegawaiInsentif IN cTablePegawaiInsentif(m_BulanProses) LOOP        
        
        m_JumlahAlpha := 0;
        

        IF recPegawaiInsentif.KELOMPOK = '5H' THEN
            m_HariKerja :=  m_HariKerjaNormal;  
        ELSE
            m_HariKerja :=  m_HariKerjaFull;          
        END IF;
        
        OPEN cTableHariMasukKerja(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
            
        FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
        CLOSE cTableHariMasukKerja;
        
        /*
        IF m_MasukKerja >= m_HariKerja THEN
            m_JumlahAlpha := 0;
        ELSE
        m_JumlahAlpha := m_HariKerja - m_MasukKerja;
        END IF;
        */
        /*
        OPEN cTableHariAlphaKerja(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTableHariAlphaKerja INTO m_JumlahAlpha;
        CLOSE cTableHariAlphaKerja;        
        */

        OPEN cTablePotongan4(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTablePotongan4 INTO m_JumlahPot4;
        CLOSE cTablePotongan4;  
              
        OPEN cTablePotongan10(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTablePotongan10 INTO m_JumlahPot10;
        CLOSE cTablePotongan10;        

        
        m_Jumlah := recPegawaiInsentif.JUMLAH_INSENTIF * (recPegawaiInsentif.PROSENTASE_INSENTIF / 100);
        m_Jumlah := ROUND(m_Jumlah);
        
        m_JumlahPot4  := NVL(m_JumlahPot4, 0) * 4;
        
        m_JumlahPot10 := NVL(m_JumlahPot10, 0) * 10;
        
        m_ProsentasePotongan := m_JumlahPot4 + m_JumlahPot10;        

        m_JumlahPotongan     := ROUND(m_Jumlah * (m_ProsentasePotongan / 100));
        
        IF m_ProsentasePotongan > 100 THEN
            m_ProsentasePotongan := 100;
            m_JumlahPotongan := m_Jumlah;
        END IF;
        
        

        m_PPH21Prosentase := recPegawaiInsentif.POTONGAN_PPH * 100;
        m_JumlahPPH := (m_Jumlah - m_JumlahPotongan) * recPegawaiInsentif.POTONGAN_PPH;

        m_JumlahDibayarkan := m_Jumlah - m_JumlahPPH - m_JumlahPotongan;
      
        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.INSENTIF_BANTUAN (
           PEGAWAI_ID, PERIODE, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, PROSENTASE_PPH, JUMLAH_PPH, DIBAYARKAN) 
        VALUES (' || recPegawaiInsentif.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_Jumlah || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan ||  ', ' || m_PPH21Prosentase || ', ' || m_JumlahPPH || ', ' || m_JumlahDibayarkan || ')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_INSENTIF_KHUSUS;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_INSENTIF_KHUSUS
         IS 

CURSOR cTableGalangan(pPeriode IN VARCHAR2) IS
SELECT SUM(JUMLAH) FROM IMASYS_GALANGAN.GALANGAN_PENDAPATAN WHERE PERIODE = pPeriode;

/* SETUP PEGAWAI YANG BEKERJA PADA GALANGAN, SET PPH UNTUK JENIS PEGAWAI DAN PROSENTASE INSENTIF */
CURSOR cTableGalanganKru(pBulanProses IN VARCHAR2) IS

SELECT A.PEGAWAI_ID, D.NAMA GALANGAN, A.JABATAN_GALANGAN_ID, B.NAMA JABATAN, PROSENTASE_INSENTIF, 
       CASE WHEN C.JENIS_PEGAWAI_ID = 2 THEN 15 ELSE CASE WHEN NVL(NPWP, 'X') = 'X' THEN E.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN E.JUMLAH_NPWP ELSE E.JUMLAH_TANPA_NPWP END END END POTONGAN_PPH
FROM IMASYS_GALANGAN.GALANGAN_KRU A 
    INNER JOIN IMASYS_GALANGAN.JABATAN_GALANGAN B ON A.JABATAN_GALANGAN_ID = B.JABATAN_GALANGAN_ID
    INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
    INNER JOIN IMASYS_GALANGAN.GALANGAN D ON A.GALANGAN_ID = D.GALANGAN_ID
    INNER JOIN IMASYS_GAJI.PPH_PARAMETER E ON C.JENIS_PEGAWAI_ID = E.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'INSENTIF'
    INNER JOIN IMASYS_SIMPEG.PEGAWAI F ON A.PEGAWAI_ID = F.PEGAWAI_ID;

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE PERIODE='052014' ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;
    
/* SETUP DATA KEHADIRAN YANG TERPOTONG 10% */    

CURSOR cTablePotongan10(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_A + ITK
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

CURSOR cTablePotongan4(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    STK + IDK
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

/* SETUP DATA KEHADIRAN YANG TERPOTONG 1% */   

CURSOR cTablePotongan1(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    SDK + DL
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

/* SETUP DATA KEHADIRAN YANG TERPOTONG 2% */   

CURSOR cTablePotongan2(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    CAP + CB + CS + CT
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
    
m_Jumlah NUMBER;
m_JumlahInsentif NUMBER;
m_PotonganInsentif NUMBER;
m_JumlahDiterima NUMBER;
m_BulanProses VARCHAR2(6);
m_QUERY VARCHAR2(2000);

m_JumlahPot10 NUMBER := 0;
m_JumlahPot4 NUMBER := 0;
m_JumlahPot1 NUMBER := 0;
m_JumlahPot2 NUMBER := 0;
m_ProsentasePotongan NUMBER :=0;
m_JumlahPotongan NUMBER := 0;

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE IMASYS_GAJI.INSENTIF_KHUSUS 
            WHERE PERIODE = m_BulanProses; 

    OPEN cTableGalangan(m_BulanProses);
            
    FETCH cTableGalangan INTO m_Jumlah;
            
    CLOSE cTableGalangan;         
    
    m_Jumlah := m_Jumlah * (2.5 / 100);
    m_Jumlah := ROUND(m_Jumlah);
    m_Jumlah := m_Jumlah - MOD(m_Jumlah, 1000);
                
    FOR recGalanganKru IN cTableGalanganKru(m_BulanProses) LOOP
        m_ProsentasePotongan := 0;
        m_JumlahPotongan := 0;
        
        OPEN cTablePotongan1(m_BulanProses, recGalanganKru.PEGAWAI_ID);
            FETCH cTablePotongan1 INTO m_JumlahPot1;
            CLOSE cTablePotongan1; 
            
            OPEN cTablePotongan2(m_BulanProses, recGalanganKru.PEGAWAI_ID);
            FETCH cTablePotongan2 INTO m_JumlahPot2;
            CLOSE cTablePotongan2;

            OPEN cTablePotongan4(m_BulanProses, recGalanganKru.PEGAWAI_ID);
            FETCH cTablePotongan4 INTO m_JumlahPot4;
            CLOSE cTablePotongan4;  
                  
            OPEN cTablePotongan10(m_BulanProses, recGalanganKru.PEGAWAI_ID);
            FETCH cTablePotongan10 INTO m_JumlahPot10;
            CLOSE cTablePotongan10;        
            
            m_JumlahPot4  := NVL(m_JumlahPot4, 0) * 4;
            
            m_JumlahPot10 := NVL(m_JumlahPot10, 0) * 10;
            
            m_JumlahPot1 := NVL(m_JumlahPot1, 0) * 1;
            
            m_JumlahPot2 := NVL(m_JumlahPot2, 0) * 2;
            
            m_ProsentasePotongan := m_JumlahPot4 + m_JumlahPot10 + m_JumlahPot1 + m_JumlahPot2;        
            
        
        m_JumlahInsentif := m_Jumlah * (recGalanganKru.PROSENTASE_INSENTIF / 100);
        m_JumlahInsentif := ROUND(m_JumlahInsentif);
        
        --IF MOD(m_JumlahInsentif, 1000) > 500 THEN
        --    m_JumlahInsentif := m_JumlahInsentif + (1000 - MOD(m_JumlahInsentif, 1000));
        --ELSE        
            m_JumlahInsentif := m_JumlahInsentif - MOD(m_JumlahInsentif, 1000);
        --END IF;
        
        
        m_JumlahPotongan     := ROUND(m_JumlahInsentif * (m_ProsentasePotongan / 100));
            
        IF m_ProsentasePotongan > 100 THEN
            m_ProsentasePotongan := 100;
            m_JumlahPotongan := m_JumlahInsentif;
        END IF;
        
        m_PotonganInsentif := (m_JumlahInsentif - m_JumlahPotongan) * (recGalanganKru.POTONGAN_PPH);
        m_JumlahDiterima := (m_JumlahInsentif - m_JumlahPotongan) - m_PotonganInsentif;
        
        m_QUERY := 'INSERT INTO IMASYS_GAJI.INSENTIF_KHUSUS (
                                       PEGAWAI_ID, PERIODE, PROSENTASE_POTONGAN_PPH, 
                                       PENDAPATAN_GALANGAN, JUMLAH_INSENTIF, JUMLAH_POTONGAN_PPH, 
                                       JUMLAH_DITERIMA, PROSENTASE_INSENTIF, JABATAN, GALANGAN, JABATAN_GALANGAN_ID, POTONGAN_KEHADIRAN)  
                            VALUES (' || recGalanganKru.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || recGalanganKru.POTONGAN_PPH * 100 || ', ' || m_Jumlah || ', ' || m_JumlahInsentif || ', 
                                    ' || m_PotonganInsentif || ', ' || m_JumlahDiterima || ', ' || recGalanganKru.PROSENTASE_INSENTIF || ', 
                                    ''' || recGalanganKru.JABATAN || ''', ''' || recGalanganKru.GALANGAN || ''', ' || recGalanganKru.JABATAN_GALANGAN_ID || ','
                                    || m_JumlahPotongan || ')';
                    
         EXECUTE IMMEDIATE m_QUERY;
        
    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_INSENTIF_OLD;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_INSENTIF_OLD
         IS 

CURSOR cTablePegawaiInsentif(pBulanProses IN VARCHAR2) IS

SELECT A.PEGAWAI_ID, NRP, CASE WHEN NVL(JUMLAH_INSENTIF, 0) = 0 THEN JUMLAH_INSENTIF_KELAS ELSE TO_NUMBER(JUMLAH_INSENTIF) END JUMLAH_INSENTIF, CASE WHEN NVL(H.KELOMPOK, 'X') = 'X' THEN '5H' ELSE H.KELOMPOK END KELOMPOK, 
CASE WHEN NVL(JUMLAH_INSENTIF, 0) = 0 THEN 85 ELSE TO_NUMBER(PROSENTASE_INSENTIF) END PROSENTASE_INSENTIF, NPWP, C.JENIS_PEGAWAI_ID, 
CASE WHEN NVL(NPWP, 'X') = 'X' THEN D.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN D.JUMLAH_NPWP ELSE D.JUMLAH_TANPA_NPWP END END POTONGAN_PPH FROM IMASYS_SIMPEG.PEGAWAI A 
LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
INNER JOIN IMASYS_GAJI.PPH_PARAMETER D ON C.JENIS_PEGAWAI_ID = D.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'INSENTIF'
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
INNER JOIN (SELECT B.KELAS, MAX(JUMLAH) JUMLAH_INSENTIF_KELAS FROM IMASYS_GAJI.INSENTIF A INNER JOIN IMASYS_SIMPEG.JABATAN B ON A.JABATAN_ID = B.JABATAN_ID GROUP BY B.KELAS) F ON E.KELAS = F.KELAS 
LEFT JOIN IMASYS_ABSENSI.PEGAWAI_JAM_KERJA_JENIS G ON A.PEGAWAI_ID = G.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.JAM_KERJA_JENIS H ON G.JAM_KERJA_JENIS_ID  = H.JAM_KERJA_JENIS_ID
WHERE 1 = 1 AND (NOT NVL(JUMLAH_INSENTIF, 0) = 0 OR EXISTS(SELECT 1 FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI_TERAKHIR X 
WHERE A.PEGAWAI_ID = X.PEGAWAI_ID AND KAPAL_ID = 40)) AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY')  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
AND ((E.TMT_JABATAN <= TO_DATE(pBulanProses, 'MMYYYY') OR (SELECT COUNT(1) FROM IMASYS_SIMPEG.PEGAWAI_JABATAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) > 1)  OR EXISTS (SELECT 1 FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI_TERAKHIR X 
WHERE E.PEGAWAI_ID = X.PEGAWAI_ID AND KAPAL_ID = 40));

/*
CURSOR cTableHitungPPH21(pPegawaiId IN INTEGER, pPeriode IN VARCHAR, pInsentif IN NUMBER) IS
SELECT IMASYS_GAJI.HITUNG_PPH21_PER_TAHUN (GAJI_POKOK,
                                           MERIT_PMS,
                                           TUNJANGAN_JABATAN,
                                           TPP_PMS,
                                           TUNJANGAN_PERBANTUAN,
                                           JUMLAH_TRANSPORTASI,
                                           JUMLAH_UANG_MAKAN,
                                           0,
                                           pInsentif,
                                           IURAN_TASPEN,
                                           DANA_PENSIUN,
                                           STATUS_KELUARGA,
                                           DECODE (HARI_KERJA, '7H', 30, 22),
                                           JENIS_PEGAWAI_ID
                                          ) JUMLAH
FROM IMASYS_GAJI.GAJI_AWAL_BULAN_REPORT
WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;
*/

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT IMASYS_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(IMASYS_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

    
CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS

SELECT  
    JUMLAH_H + JUMLAH_C + SDK + DL
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;


CURSOR cTableHariAlphaKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_A
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
    
m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_HariKerja INTEGER;
m_MasukKerja INTEGER;
m_JumlahPPH NUMBER;
m_JumlahDibayarkan INTEGER;
m_PPH21DenganInsentif NUMBER := 0;
m_PPH21TanpaInsentif NUMBER := 0;
m_PPH21Prosentase NUMBER := 0;
m_JumlahAlpha INTEGER := 0;

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE IMASYS_GAJI.INSENTIF_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');


        FOR recPegawaiInsentif IN cTablePegawaiInsentif(m_BulanProses) LOOP        
        
        m_JumlahAlpha := 0;
        

        IF recPegawaiInsentif.KELOMPOK = '5H' THEN
            m_HariKerja :=  m_HariKerjaNormal;  
        ELSE
            m_HariKerja :=  m_HariKerjaFull;          
        END IF;
        
        OPEN cTableHariMasukKerja(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
            
        FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
        CLOSE cTableHariMasukKerja;
        
        IF m_MasukKerja >= m_HariKerja THEN
            m_JumlahAlpha := 0;
        ELSE
        m_JumlahAlpha := m_HariKerja - m_MasukKerja;
        END IF;
        
        /*
        OPEN cTableHariAlphaKerja(m_BulanProses, recPegawaiInsentif.PEGAWAI_ID);
        FETCH cTableHariAlphaKerja INTO m_JumlahAlpha;
        CLOSE cTableHariAlphaKerja;        
        */
        
        m_Jumlah := recPegawaiInsentif.JUMLAH_INSENTIF * (recPegawaiInsentif.PROSENTASE_INSENTIF / 100);
        m_Jumlah := ROUND(m_Jumlah);

        --OPEN cTableHitungPPH21(recPegawaiInsentif.PEGAWAI_ID, m_BulanProses, m_Jumlah);
            
        --FETCH cTableHitungPPH21 INTO m_PPH21DenganInsentif;
            
        --CLOSE cTableHitungPPH21;

        --OPEN cTableHitungPPH21(recPegawaiInsentif.PEGAWAI_ID, m_BulanProses, 0);
            
        --FETCH cTableHitungPPH21 INTO m_PPH21TanpaInsentif;
            
        --CLOSE cTableHitungPPH21;
        
        m_ProsentasePotongan := m_JumlahAlpha * 4;
        m_JumlahPotongan     := m_Jumlah * (m_ProsentasePotongan / 100);

        m_PPH21Prosentase := recPegawaiInsentif.POTONGAN_PPH * 100;
        m_JumlahPPH := (m_Jumlah - m_JumlahPotongan) * recPegawaiInsentif.POTONGAN_PPH;

        m_JumlahDibayarkan := m_Jumlah - m_JumlahPPH - m_JumlahPotongan;
        
        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.INSENTIF_BANTUAN (
           PEGAWAI_ID, PERIODE, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, PROSENTASE_PPH, JUMLAH_PPH, DIBAYARKAN) 
        VALUES (' || recPegawaiInsentif.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_Jumlah || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan ||  ', ' || m_PPH21Prosentase || ', ' || m_JumlahPPH || ', ' || m_JumlahDibayarkan || ')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_MOBILITAS;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_MOBILITAS
         IS 

CURSOR cTablePegawaiInsentif(pBulanProses IN VARCHAR2) IS


/* SETUP PEGAWAI YANG MENDAPAT MOBILITAS, SET PPH UNTUK JENIS PEGAWAI DAN NPWP, JUMLAH BESARAN DAN PROSENTASE */

SELECT A.PEGAWAI_ID, NRP, 
        CASE WHEN NVL(JUMLAH_MOBILITAS, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_MOBILITAS) FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_MOBILITAS, 0) = 0) 
             ELSE 
                TRIM(JUMLAH_MOBILITAS) 
        END JUMLAH_MOBILITAS,
        CASE WHEN NVL(NPWP, 'X') = 'X' THEN D.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN D.JUMLAH_NPWP ELSE D.JUMLAH_TANPA_NPWP END END POTONGAN_PPH        
         FROM PPI_SIMPEG.PEGAWAI A 
/*INNER JOIN PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID */
INNER JOIN (SELECT A.PEGAWAI_ID, A.JUMLAH_MOBILITAS
FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN A
               INNER JOIN
                  (  SELECT   K.PEGAWAI_ID, MAX (K.TMT_PENGHASILAN) TMT_PENGHASILAN
                       FROM   PPI_SIMPEG.PEGAWAI_PENGHASILAN K
                       where (K.TMT_PENGHASILAN <= TO_DATE (pBulanProses, 'MMYYYY') OR K.TMT_PENGHASILAN = TO_DATE (pBulanProses, 'MMYYYY'))
                   GROUP BY   PEGAWAI_ID) B
               ON A.PEGAWAI_ID = B.PEGAWAI_ID AND B.TMT_PENGHASILAN = A.TMT_PENGHASILAN) B ON A.PEGAWAI_ID = B.PEGAWAI_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH D ON C.JENIS_PEGAWAI_ID = D.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'MOBILITAS' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND E.KELAS IN (SELECT REGEXP_SUBSTR(D.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(D.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
WHERE 1 = 1 AND NOT NVL(JUMLAH_MOBILITAS, 0) = 0 AND NOT C.JENIS_PEGAWAI_ID IN (6,7) AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY')  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY');

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;
    
m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_JumlahDibayarkan NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE PPI_GAJI.MOBILITAS_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

    FOR recPegawaiInsentif IN cTablePegawaiInsentif(m_BulanProses) LOOP        
    
        m_Jumlah := recPegawaiInsentif.JUMLAH_MOBILITAS;
        m_Jumlah := ROUND(m_Jumlah);
        m_ProsentasePotongan := recPegawaiInsentif.POTONGAN_PPH * 100;
        m_JumlahPotongan := ROUND(m_Jumlah * (recPegawaiInsentif.POTONGAN_PPH));
        m_JumlahDibayarkan := m_Jumlah; -- - m_JumlahPotongan;
        
        EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.MOBILITAS_BANTUAN (
           PEGAWAI_ID, PERIODE, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, DIBAYARKAN) 
        VALUES (' || recPegawaiInsentif.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ''' || m_Jumlah || ''', ''' || m_ProsentasePotongan || ''', ''' || m_JumlahPotongan || ''', ''' || m_JumlahDibayarkan || ''')';           


    END LOOP;    

    COMMIT;

    
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_MOBILITAS_OLD;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_MOBILITAS_OLD
         IS 

CURSOR cTablePegawaiInsentif(pBulanProses IN VARCHAR2) IS

SELECT A.PEGAWAI_ID, NRP, 
        CASE WHEN NVL(JUMLAH_MOBILITAS, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_MOBILITAS) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_MOBILITAS, 0) = 0) 
             ELSE 
                TRIM(JUMLAH_MOBILITAS) 
        END JUMLAH_MOBILITAS FROM IMASYS_SIMPEG.PEGAWAI A 
INNER JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
WHERE 1 = 1 AND NOT NVL(JUMLAH_MOBILITAS, 0) = 0 AND NOT JENIS_PEGAWAI_ID IN (6,7) AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY')  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY');

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;
    
m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_JumlahDibayarkan NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE IMASYS_GAJI.MOBILITAS_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

    FOR recPegawaiInsentif IN cTablePegawaiInsentif(m_BulanProses) LOOP        
    
        m_Jumlah := recPegawaiInsentif.JUMLAH_MOBILITAS;
        m_Jumlah := ROUND(m_Jumlah);
        m_ProsentasePotongan := 5;
        m_JumlahPotongan := m_Jumlah * (m_ProsentasePotongan / 100);
        m_JumlahDibayarkan := m_Jumlah; -- - m_JumlahPotongan;
        
        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.MOBILITAS_BANTUAN (
           PEGAWAI_ID, PERIODE, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, DIBAYARKAN) 
        VALUES (' || recPegawaiInsentif.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ''' || m_Jumlah || ''', ''' || m_ProsentasePotongan || ''', ''' || m_JumlahPotongan || ''', ''' || m_JumlahDibayarkan || ''')';           


    END LOOP;    

    COMMIT;

    
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_PEG_V2;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_PEG_V2
       ( pBulanTahun IN VARCHAR2, 
         pDepartemenId  IN VARCHAR2,
         pJenisPegawaiId IN VARCHAR2,
         pPegawaiId IN VARCHAR2,
         pWaktuPembayaran IN VARCHAR2)
         IS 

CURSOR cTablePenghasilanTerakhir IS

 SELECT 
   ROW_NUMBER() OVER (ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC) NO_URUT, A.PEGAWAI_ID, C.JENIS_PEGAWAI_ID, A.NAMA, JUMLAH_PENGHASILAN, JUMLAH_TPP, JUMLAH_TUNJANGAN_JABATAN, JUMLAH_TUNJANGAN_SELISIH, 
   JUMLAH_TRANSPORTASI, JUMLAH_UANG_MAKAN, JUMLAH_INSENTIF, 
   JUMLAH_MOBILITAS, PROSENTASE_PENGHASILAN, PROSENTASE_TUNJANGAN_JABATAN, 
   PROSENTASE_UANG_MAKAN, PROSENTASE_TRANSPORTASI, PROSENTASE_INSENTIF, JUMLAH_UANG_KEHADIRAN, 
   PROSENTASE_UANG_KEHADIRAN, B.KELAS, KELOMPOK, JUMLAH_P3,STATUS_KAWIN, GAJI_POKOK, F.KODE STATUS_KELUARGA, PROSENTASE_TPP, PROSENTASE_MOBILITAS, 
   JUMLAH_PERUMAHAN, PROSENTASE_PERUMAHAN, JUMLAH_BBM, PROSENTASE_BBM, JUMLAH_TELEPON, PROSENTASE_TELEPON, JENIS_KELAMIN
   FROM PPI_SIMPEG.PEGAWAI A LEFT JOIN PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
   LEFT JOIN PPI_SIMPEG. PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
   INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
   LEFT JOIN PPI_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR E ON A.PEGAWAI_ID = E.PEGAWAI_ID
   LEFT JOIN PPI_SIMPEG.STATUS_KELUARGA F ON A.STATUS_KELUARGA_ID = F.STATUS_KELUARGA_ID WHERE A.PEGAWAI_ID = pPegawaiId AND (A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5)
   AND C.JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) ORDER BY A.DEPARTEMEN_ID ASC, TO_NUMBER(D.KELAS) ASC, (SELECT NO_URUT FROM PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) ASC;
      
CURSOR cTableItemPenghasilan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.GAJI_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH, GAJI_DIBERIKAN
    FROM PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.GAJI_KONDISI B
    WHERE 
    A.GAJI_KONDISI_ID = B.GAJI_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND 
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTableItemSumbangan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 
    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = pKelompok AND
    JENIS_PEGAWAI_ID = pJenisPegawai AND JENIS_POTONGAN = 'S' AND
    pKelas IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTableItemTanggungan(pJenisPegawai IN INTEGER, pKelas IN INTEGER, pKelompok IN CHAR) IS 

    SELECT A.POTONGAN_KONDISI_ID, B.PREFIX, A.PROSENTASE, A.KALI, JUMLAH,JUMLAH_ENTRI
    FROM PPI_GAJI.POTONGAN_KONDISI_JENIS_PEGAWAI A, PPI_GAJI.POTONGAN_KONDISI B
    WHERE 
    A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID AND KELOMPOK = 'D' AND
    JENIS_PEGAWAI_ID = 1 AND JENIS_POTONGAN = 'T' AND
    9 IN (SELECT REGEXP_SUBSTR(A.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(A.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL);

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2) IS 
    SELECT 
       A.POTONGAN_KONDISI_ID, PREFIX, JUMLAH
    FROM PPI_GAJI.POTONGAN_KONDISI_PEGAWAI A INNER JOIN PPI_GAJI.POTONGAN_KONDISI B ON A.POTONGAN_KONDISI_ID = B.POTONGAN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId ORDER BY A.POTONGAN_KONDISI_ID;

CURSOR cTablePotonganLainJSON(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS    
    SELECT 
       PREFIX, SUM(CASE WHEN ANGSURAN_TERBAYAR = 0 OR ANGSURAN_TERBAYAR = 1 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END) ANGSURAN_DIBAYARKAN
    FROM PPI_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN PPI_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND NOT ANGSURAN_TERBAYAR = ANGSURAN AND TO_DATE('01' || pBulanProses, 'DDMMYYYY') BETWEEN TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') AND ADD_MONTHS(TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY'), ANGSURAN - 1) GROUP BY PREFIX;

    
CURSOR cTablePotonganLain(pPegawaiId IN VARCHAR2, pBulanProses IN VARCHAR2) IS
    SELECT 
       A.LAIN_KONDISI_PEGAWAI_ID, A.LAIN_KONDISI_ID, PREFIX, 
       ANGSURAN, PEGAWAI_ID,
       JUMLAH_AWAL_ANGSURAN, JUMLAH_ANGSURAN, 
       ANGSURAN_TERBAYAR, BULAN_AKHIR_BAYAR, CASE WHEN ANGSURAN_TERBAYAR = 0 THEN DECODE(JUMLAH_AWAL_ANGSURAN, 0, JUMLAH_ANGSURAN, JUMLAH_AWAL_ANGSURAN) ELSE JUMLAH_ANGSURAN END ANGSURAN_DIBAYARKAN
    FROM PPI_GAJI.LAIN_KONDISI_PEGAWAI A INNER JOIN PPI_GAJI.LAIN_KONDISI B ON A.LAIN_KONDISI_ID = B.LAIN_KONDISI_ID 
    WHERE A.PEGAWAI_ID = pPegawaiId AND TO_DATE('01' || BULAN_MULAI, 'DDMMYYYY') <= TO_DATE('01' || pBulanProses, 'DDMMYYYY') AND NOT ANGSURAN = ANGSURAN_TERBAYAR;
    
    
CURSOR cHitungIuranPensiun(pStatusKawin IN INTEGER, pGajiPokok IN NUMBER) IS    
SELECT ROUND(pGajiPokok * ((CASE WHEN pStatusKawin = 2 THEN (SELECT PEGAWAI_PERSEN FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_KAWIN') ELSE (SELECT PEGAWAI_PERSEN FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'PENSIUN_BUJANG') END / 100)) * (SELECT FAKTOR_WAJIB / 100 FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;

CURSOR cHitungDanaPensiun(pJumlahP3 IN NUMBER) IS    
SELECT ROUND(pJumlahP3 * (SELECT FAKTOR_WAJIB / 100 FROM PPI_GAJI.POTONGAN_WAJIB WHERE NAMA = 'DANA_PENSIUN')) JUMLAH
FROM DUAL;


CURSOR cHitungTaspen(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 3.25) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM PPI_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM PPI_SIMPEG.PEGAWAI A INNER JOIN PPI_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);
    
CURSOR cHitungIuranKesehatan(pPegawaiId IN VARCHAR2) IS    
    SELECT ROUND((GAJI_POKOK * PROSENTASE * 1.75) / 100) FROM
    (
    SELECT
        GAJI_POKOK
    FROM PPI_SIMPEG.PEGAWAI_PANGKAT_TERAKHIR A WHERE A.PEGAWAI_ID = pPegawaiId), 
    (SELECT PROSENTASE/100 PROSENTASE FROM PPI_SIMPEG.PEGAWAI A INNER JOIN PPI_SIMPEG.STATUS_KELUARGA B ON A.STATUS_KELUARGA_ID = B.STATUS_KELUARGA_ID AND A.PEGAWAI_ID = pPegawaiId);
    
CURSOR cHitungIuranSPPI(pKelasJabatan IN VARCHAR2) IS    
    SELECT JUMLAH FROM PPI_GAJI.IURAN_SPPI WHERE KELAS = pKelasJabatan;

CURSOR cTabelJumlahPenghasilan(pJumlah IN VARCHAR2, pMeritPMS IN NUMBER, pUangKehadiran IN NUMBER, pUangTransport IN NUMBER, pUangMakan IN NUMBER,
                               pTunjanganJabatan IN NUMBER, pTPPPMS IN NUMBER, pTunjanganPerbantuan IN NUMBER, pTunjanganInsentif IN NUMBER) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN pMeritPMS
                WHEN PIVOT = 2 THEN pUangKehadiran
                WHEN PIVOT = 3 THEN pUangTransport
                WHEN PIVOT = 4 THEN pUangMakan
                WHEN PIVOT = 5 THEN pTunjanganJabatan
                WHEN PIVOT = 6 THEN pTPPPMS
                WHEN PIVOT = 7 THEN pTunjanganPerbantuan
                WHEN PIVOT = 8 THEN pTunjanganInsentif
           END JUMLAH
    FROM (SELECT pMeritPMS, pUangKehadiran, pUangTransport, pUangMakan, pTunjanganJabatan, pTPPPMS, pTunjanganPerbantuan, pTunjanganInsentif FROM DUAL), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_CAPEG_PKWT ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

CURSOR cHitungPPH21(pGajiPokok NUMBER,
pPenghasilan NUMBER,
pTunjanganJabatan NUMBER,
pTunjanganPrestasi NUMBER,
pTunjanganPerbantuan NUMBER,
pIuranTaspen NUMBER,
pIuranPensiun NUMBER,
pStatusKeluarga VARCHAR2,
pJenisKelamin VARCHAR2,
pStatusKawin CHAR) IS
    SELECT PPI_GAJI.HITUNG_PPH21(pGajiPokok, pPenghasilan, pTunjanganJabatan, pTunjanganPrestasi, pTunjanganPerbantuan, pIuranTaspen, pIuranPensiun, pStatusKeluarga, pJenisKelamin, pStatusKawin) JUMLAH FROM DUAL;

CURSOR cHitungPotonganKehadiran(pPegawaiId IN INTEGER, pPeriode VARCHAR2) IS
        SELECT SUM(POTONGAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI A INNER JOIN PPI_ABSENSI.IJIN_KOREKSI B ON  B.KODE = A.KEHADIRAN
        WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode AND KEHADIRAN IN ('STK', 'SDK', 'ITK', 'IDK', 'A', 'HT', 'HPC', 'HTPC');

        
gaji_json_obj           PPI.json.JSONStructObj; 
gaji_array              PPI.json.JSONArray;     
sumbangan_json_obj      PPI.json.JSONStructObj;
sumbangan_array         PPI.json.JSONArray;
potongan_json_obj       PPI.json.JSONStructObj;
potongan_array          PPI.json.JSONArray;
tanggungan_json_obj     PPI.json.JSONStructObj;
tanggungan_array        PPI.json.JSONArray;
potongan_lain_json_obj  PPI.json.JSONStructObj;
potongan_lain_array     PPI.json.JSONArray;
m_Jumlah         NUMBER;     
m_ArrItemJumlahSumbangan PPI.string_fnc.t_array; 
m_ArrKali PPI.string_fnc.t_array; 
m_ItemJumlahSumbanganPrefix VARCHAR2(100);  
-- TAMPUNG NILAI GAJI UNTUK POTONGAN
m_MeritPMS               NUMBER;
m_UangKehadiran          NUMBER;
m_TunjanganJabatan       NUMBER;
m_TunjanganInsentif      NUMBER;
m_TPPPMS                 NUMBER;
m_TunjanganPerbantuan    NUMBER;
m_UangTransport          NUMBER;
m_UangMakan              NUMBER;
m_Premi                  NUMBER;
m_Kali                   NUMBER;
m_BulanProses            VARCHAR(6);
m_Taspen                 NUMBER;
m_IuranPensiun            NUMBER;
m_DanaPensiun           NUMBER;
m_ProsentasePotonganKehadiran INTEGER;

BEGIN    

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

END IF;
            
IF NOT m_BulanProses = pBulanTahun THEN
    RETURN;
END IF;

m_MeritPMS             := 0;
m_UangKehadiran        := 0;
m_UangTransport        := 0;
m_UangMakan            := 0;
m_TunjanganJabatan     := 0;
m_TPPPMS               := 0;
m_TunjanganPerbantuan  := 0;
m_TunjanganInsentif    := 0;
m_Premi                := 0;

     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
          DELETE PPI_GAJI.GAJI_AWAL_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     ELSE
          DELETE PPI_GAJI.GAJI_TENGAH_BULAN 
            WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
                (SELECT PEGAWAI_ID FROM PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR WHERE JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 
     
     END IF;
    FOR recPenghasilanTerakhir IN cTablePenghasilanTerakhir LOOP        
        
        PPI.JSON.newJSONObj(gaji_json_obj);
    
        FOR recItemPenghasilan IN cTableItemPenghasilan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;


            IF recItemPenghasilan.PREFIX = 'MERIT_PMS' THEN 
                m_Jumlah := ROUND(recPenghasilanTerakhir.JUMLAH_PENGHASILAN * (recPenghasilanTerakhir.PROSENTASE_PENGHASILAN / 100) * recItemPenghasilan.KALI);
                m_MeritPMS := ROUND(m_Jumlah);
            ELSIF recItemPenghasilan.PREFIX = 'UANG_KEHADIRAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_KEHADIRAN * (recPenghasilanTerakhir.PROSENTASE_UANG_KEHADIRAN / 100) * recItemPenghasilan.KALI;    
                m_UangKehadiran := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_TRANSPORT' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TRANSPORTASI * (recPenghasilanTerakhir.PROSENTASE_TRANSPORTASI / 100) * recItemPenghasilan.KALI;                                            
                m_UangTransport := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'UANG_MAKAN' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_UANG_MAKAN * (recPenghasilanTerakhir.PROSENTASE_UANG_MAKAN / 100) * recItemPenghasilan.KALI;                                            
                m_UangMakan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_JABATAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_JABATAN * (recPenghasilanTerakhir.PROSENTASE_TUNJANGAN_JABATAN / 100) * recItemPenghasilan.KALI;                               
                m_TunjanganJabatan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TPP_PMS' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TPP * (recPenghasilanTerakhir.PROSENTASE_TPP / 100) * recItemPenghasilan.KALI;                                            
                m_TPPPMS := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_PERBANTUAN' THEN
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TUNJANGAN_SELISIH * (recItemPenghasilan.PROSENTASE / 100) * recItemPenghasilan.KALI;                                            
                m_TunjanganPerbantuan := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TUNJANGAN_INSENTIF_KINERJA' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_INSENTIF * (recPenghasilanTerakhir.PROSENTASE_INSENTIF / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'MOBILITAS' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_MOBILITAS * (recPenghasilanTerakhir.PROSENTASE_MOBILITAS / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'PERUMAHAN' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_PERUMAHAN * (recPenghasilanTerakhir.PROSENTASE_PERUMAHAN / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'BBM' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_BBM * (recPenghasilanTerakhir.PROSENTASE_BBM / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'TELEPON' THEN 
                m_Jumlah := recPenghasilanTerakhir.JUMLAH_TELEPON * (recPenghasilanTerakhir.PROSENTASE_TELEPON / 100) * recItemPenghasilan.KALI;   
                m_TunjanganInsentif := m_Jumlah;
            ELSIF recItemPenghasilan.PREFIX = 'PREMI' THEN
                m_Jumlah := 1;
                m_Premi := 1;
            END IF;
           
           IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 4 THEN
          
                   gaji_array(1):= m_Jumlah;    
                   gaji_json_obj := PPI.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, PPI.JSON.addArray(gaji_array));
           
           ELSE
               IF recItemPenghasilan.GAJI_DIBERIKAN = pWaktuPembayaran THEN 
                   gaji_array(1):= m_Jumlah;    
                   gaji_json_obj := PPI.JSON.addAttr(gaji_json_obj, recItemPenghasilan.PREFIX, PPI.JSON.addArray(gaji_array));
               END IF;
            END IF;
        END LOOP;  

     
       PPI.JSON.closeJSONObj(gaji_json_obj);


       PPI.JSON.newJSONObj(potongan_json_obj);
       
       FOR recItemPotongan IN cTablePotongan(recPenghasilanTerakhir.PEGAWAI_ID) LOOP  
           
       IF recItemPotongan.PREFIX = 'IURAN_TASPEN' THEN
            OPEN cHitungTaspen(recPenghasilanTerakhir.PEGAWAI_ID);
            
            FETCH cHitungTaspen INTO m_Jumlah;
            
            CLOSE cHitungTaspen;      
            m_Taspen := m_Jumlah; 
       ELSIF recItemPotongan.PREFIX = 'DANA_PENSIUN' THEN
            
            OPEN cHitungIuranPensiun(recPenghasilanTerakhir.STATUS_KAWIN, recPenghasilanTerakhir.GAJI_POKOK);
            
            FETCH cHitungIuranPensiun INTO m_Jumlah;
            
            CLOSE cHitungIuranPensiun;      
            
            m_IuranPensiun := m_Jumlah;
       ELSIF recItemPotongan.PREFIX = 'IURAN_KESEHATAN' THEN
            OPEN cHitungIuranKesehatan(recPenghasilanTerakhir.PEGAWAI_ID);
            
            FETCH cHitungIuranKesehatan INTO m_Jumlah;
            
            CLOSE cHitungIuranKesehatan;           
       ELSIF recItemPotongan.PREFIX = 'SUMBANGAN_MASJID' THEN
            m_Jumlah := 0;
       ELSIF recItemPotongan.PREFIX = 'ASURANSI_JIWASRAYA' THEN
            m_Jumlah := 0;       
       ELSIF recItemPotongan.PREFIX = 'ARISAN_PERISPINDO' THEN
            m_Jumlah := 55000;       
       ELSIF recItemPotongan.PREFIX = 'IURAN_SPPI' THEN
            OPEN cHitungIuranSPPI(recPenghasilanTerakhir.KELAS);
            
            FETCH cHitungIuranSPPI INTO m_Jumlah;
            
            CLOSE cHitungIuranSPPI;                          
       ELSIF recItemPotongan.PREFIX = 'IURAN_PURNA_BAKTI' THEN
            IF NVL(recPenghasilanTerakhir.JUMLAH_P3, 0) = 0 THEN
                m_Jumlah := (recPenghasilanTerakhir.JUMLAH_PENGHASILAN * 5) / 100;                               
            ELSE
                m_Jumlah := (recPenghasilanTerakhir.JUMLAH_P3 * 5) / 100;       
            END IF;                            
       ELSIF recItemPotongan.PREFIX = 'SIMPANAN_WAJIB_KOPERASI' THEN
            m_Jumlah := recItemPotongan.JUMLAH;
       ELSIF recItemPotongan.PREFIX = 'ABSENSI_DINAS' THEN
            
            --OPEN cHitungPotonganKehadiran(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses);
            
            --FETCH cHitungPotonganKehadiran INTO m_ProsentasePotonganKehadiran;
            
            --CLOSE cHitungPotonganKehadiran;  
            
            --m_Jumlah := ROUND(m_MeritPMS * (m_ProsentasePotonganKehadiran/100));
            
            m_Jumlah := 0;
       ELSE
            m_Jumlah := recItemPotongan.JUMLAH;       
       END IF;         
                  
           potongan_array(1):= m_Jumlah;    
           potongan_json_obj := PPI.JSON.addAttr(potongan_json_obj, recItemPotongan.PREFIX, PPI.JSON.addArray(potongan_array));
           
            
       END LOOP;

 

       PPI.JSON.closeJSONObj(potongan_json_obj);

        
       
       PPI.JSON.newJSONObj(sumbangan_json_obj);
       
       FOR recItemSumbangan IN cTableItemSumbangan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;
            
            
            IF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '01' THEN
            
            OPEN cTabelJumlahPenghasilan(recItemSumbangan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
            FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
            CLOSE cTabelJumlahPenghasilan;
            
              
            ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '02' THEN
                m_Jumlah := 1;
            ELSIF SUBSTR(recItemSumbangan.JUMLAH, 1, 2) = '04' THEN
            
                m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
                
            ELSE
                m_Jumlah := recItemSumbangan.JUMLAH_ENTRI;
            END IF;
            
            
            IF INSTR(recItemSumbangan.KALI, '/') > 0 THEN
                m_ArrKali := PPI.string_fnc.split(recItemSumbangan.KALI,'/');    
                m_Kali := SUBSTR(recItemSumbangan.KALI,1,1) / SUBSTR(recItemSumbangan.KALI,3,2);
            ELSE
                m_Kali := recItemSumbangan.KALI;
            END IF;
            
            
            IF recItemSumbangan.PREFIX = 'JAMINAN_PEMELIHARAAN_KESEHATAN' THEN
                IF recPenghasilanTerakhir.STATUS_KAWIN = 1 THEN
                    m_Jumlah := m_Jumlah * (3 / 100) * m_Kali;                                                                    
                ELSE
                    m_Jumlah := m_Jumlah * (6 / 100) * m_Kali;                                                                                    
                END IF;
            ELSIF recItemSumbangan.PREFIX = 'POTONGAN_PPH21' THEN
            
            -- JIKA DIREKSI DAN KOMISARIS
            IF recPenghasilanTerakhir.KELAS = 0 THEN
                
                IF m_MeritPMS <= 5000000 THEN
                
                m_Jumlah := ROUND(m_MeritPMS * (15 / 85));                

                ELSE
                
                m_Jumlah := ROUND(m_MeritPMS * (25 / 75));                
                
                END IF;
            
            ELSE
                                
                OPEN cHitungPPH21(NVL(recPenghasilanTerakhir.GAJI_POKOK, 0), m_MeritPMS, NVL(m_TunjanganJabatan, 0), NVL(m_TPPPMS, 0), NVL(m_TunjanganPerbantuan, 0), NVL(m_Taspen, 0), NVL(m_IuranPensiun, 0), recPenghasilanTerakhir.STATUS_KELUARGA, recPenghasilanTerakhir.JENIS_KELAMIN, recPenghasilanTerakhir.STATUS_KAWIN);
            
                FETCH cHitungPPH21 INTO m_Jumlah;
            
                CLOSE cHitungPPH21;
            
                --m_Jumlah := m_MeritPMS; 

            END IF;
            
            ELSE
                m_Jumlah := m_Jumlah * (recItemSumbangan.PROSENTASE / 100) * m_Kali;                                            
            END IF;
                           
           sumbangan_array(1):= ROUND(m_Jumlah);    
           sumbangan_json_obj := PPI.JSON.addAttr(sumbangan_json_obj, recItemSumbangan.PREFIX, PPI.JSON.addArray(sumbangan_array));
            
       END LOOP;      

       PPI.JSON.closeJSONObj(sumbangan_json_obj);

                  
      PPI.JSON.newJSONObj(tanggungan_json_obj);
       
       FOR recItemTanggungan IN cTableItemTanggungan(recPenghasilanTerakhir.JENIS_PEGAWAI_ID, recPenghasilanTerakhir.KELAS, recPenghasilanTerakhir.KELOMPOK) LOOP  
            
            m_Jumlah :=0;
            
            
            IF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '01' THEN
            
            OPEN cTabelJumlahPenghasilan(recItemTanggungan.JUMLAH, m_MeritPMS, m_UangKehadiran, m_UangTransport, m_UangMakan, m_TunjanganJabatan, m_TPPPMS, m_TunjanganPerbantuan, m_TunjanganInsentif);
            
            FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
            CLOSE cTabelJumlahPenghasilan;
            
              
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '02' THEN
                m_Jumlah := 1;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '03' THEN
                m_Jumlah := recItemTanggungan.JUMLAH_ENTRI;
            ELSIF SUBSTR(recItemTanggungan.JUMLAH, 1, 2) = '04' THEN
                m_Jumlah := recPenghasilanTerakhir.GAJI_POKOK;
            END IF;

            
            IF INSTR(recItemTanggungan.KALI, '/') > 0 THEN
                m_ArrKali := PPI.string_fnc.split(recItemTanggungan.KALI,'/');    
                m_Kali := SUBSTR(recItemTanggungan.KALI,1,1) / SUBSTR(recItemTanggungan.KALI,3,2);
            ELSE
                m_Kali := recItemTanggungan.KALI;
            END IF;
            
            m_Jumlah := m_Jumlah * (recItemTanggungan.PROSENTASE / 100) * m_Kali;                                            

                           
           sumbangan_array(1):= CEIL(m_Jumlah);    
           tanggungan_json_obj := PPI.JSON.addAttr(tanggungan_json_obj, recItemTanggungan.PREFIX, PPI.JSON.addArray(sumbangan_array));
            
       END LOOP;      

       PPI.JSON.closeJSONObj(tanggungan_json_obj);
       
       PPI.JSON.newJSONObj(potongan_lain_json_obj);

       FOR recPotonganLainJSON IN cTablePotonganLainJSON(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  

           potongan_lain_array(1) := recPotonganLainJSON.ANGSURAN_DIBAYARKAN;    
           potongan_lain_json_obj := PPI.JSON.addAttr(potongan_lain_json_obj, recPotonganLainJSON.PREFIX, PPI.JSON.addArray(potongan_lain_array));
           
       
       END LOOP;  

       PPI.JSON.closeJSONObj(potongan_lain_json_obj);      
       
       --KEBUTUHAN UPDATE KE TABEL POTONGAN_LAIN_PEGAWAI UPDATE ANGSURAN
       FOR recItemPotonganLain IN cTablePotonganLain(recPenghasilanTerakhir.PEGAWAI_ID, m_BulanProses) LOOP  
            
            m_Jumlah := recItemPotonganLain.ANGSURAN_DIBAYARKAN;       
           
           --UPDATE KE TABEL POTONGAN LAIN  FIELD ANGSURAN TERBAYAR
           IF pBulanTahun = recItemPotonganLain.BULAN_AKHIR_BAYAR THEN
                m_Jumlah := 1;
           ELSE

                EXECUTE IMMEDIATE 'UPDATE PPI_GAJI.LAIN_KONDISI_PEGAWAI SET BULAN_AKHIR_BAYAR = ''' || pBulanTahun || ''',ANGSURAN_TERBAYAR = ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ' WHERE PEGAWAI_ID = ''' || recItemPotonganLain.PEGAWAI_ID || ''' AND LAIN_KONDISI_PEGAWAI_ID = ''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || '''';   

         EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN (
                                     LAIN_KONDISI_PEGAWAI_ID, ANGSURAN_KE, ANGSURAN_BULAN, 
                                     JUMLAH) 
                                    VALUES (''' || recItemPotonganLain.LAIN_KONDISI_PEGAWAI_ID || ''', ' || (recItemPotonganLain.ANGSURAN_TERBAYAR + 1) || ', ''' || pBulanTahun || ''', ' || m_Jumlah || ')';   

           END IF;
            
       END LOOP;      
       
       m_DanaPensiun := 0;
       
       IF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 1 THEN

        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_PENGHASILAN);
            
        FETCH cHitungDanaPensiun INTO m_DanaPensiun;
            
        CLOSE cHitungDanaPensiun;           
       
       ELSIF recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 2 OR recPenghasilanTerakhir.JENIS_PEGAWAI_ID = 6 THEN
       
        OPEN cHitungDanaPensiun(recPenghasilanTerakhir.JUMLAH_P3);
            
        FETCH cHitungDanaPensiun INTO m_DanaPensiun;
            
        CLOSE cHitungDanaPensiun;           
       
       END IF; 
          
     IF pWaktuPembayaran = 'AWAL_BULAN' THEN
       
         EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.GAJI_' || pWaktuPembayaran || ' (NO_URUT,
                                   PEGAWAI_ID, DEPARTEMEN_ID, 
                                   BULANTAHUN, KELAS, PERIODE, GAJI_JSON, SUMBANGAN_JSON, POTONGAN_LAIN_JSON, POTONGAN_JSON, TANGGUNGAN_JSON, DANA_PENSIUN) 
                                VALUES (' || recPenghasilanTerakhir.NO_URUT || ', ' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                        ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(PPI.JSON.JSON2String(gaji_json_obj), '''', '"') || ''',
                                        ''' || REPLACE(PPI.JSON.JSON2String(sumbangan_json_obj), '''', '"') || ''', ''' || REPLACE(PPI.JSON.JSON2String(potongan_lain_json_obj), '''', '"') || ''', ''' || REPLACE(PPI.JSON.JSON2String(potongan_json_obj), '''', '"') || ''', ''' || REPLACE(PPI.JSON.JSON2String(tanggungan_json_obj), '''', '"') || ''', ''' || m_DanaPensiun || ''')';
     ELSE

         EXECUTE IMMEDIATE 'XXXINSERT INTO PPI_GAJI.GAJI_' || pWaktuPembayaran || ' (
                                   PEGAWAI_ID, DEPARTEMEN_ID, 
                                   BULANTAHUN, KELAS, PERIODE, GAJI_JSON) 
                                VALUES (' || recPenghasilanTerakhir.PEGAWAI_ID || ', ' || pDepartemenId || ', ''' || pBulanTahun || ''',
                                        ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ' || NVL(recPenghasilanTerakhir.KELAS, 0) || ', ''' || REPLACE(PPI.JSON.JSON2String(gaji_json_obj), '''', '"') || ''')';

     
     END IF;      

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||m_Kali||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_PREMI;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_PREMI
         IS 

/* SETUP KAPAL YANG SIAP OPERASI PADA PERIODE TERTENTU */
CURSOR cTableKapal IS
SELECT KAPAL_ID, KAPAL_JENIS_ID, NAMA FROM PPI_OPERASIONAL.KAPAL;

/* SETUP AWAK KAPAL YANG BERADA PADA KAPAL SIAP OPERASI DAN JANGKA WAKTU PEGAWAI TERSEBUT AKTIF DI KAPAL TERSEBUT TERMASUK ABSENSINYA */
CURSOR cTableAwakKapal(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER, pKruJabatanId IN VARCHAR2) IS

SELECT 
PEGAWAI_KAPAL_HISTORI_ID, B.JENIS_PEGAWAI_ID, KAPAL_ID, A.PEGAWAI_ID, 
   (SELECT PROSENTASE FROM PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI X WHERE X.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND GAJI_KONDISI_ID = '09') PROSENTASE,
   KRU_JABATAN_ID, TANGGAL_MASUK, TANGGAL_KELUAR,
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   TANGGAL_KELUAR - TANGGAL_MASUK + 1
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TANGGAL_MASUK + 1
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   TANGGAL_KELUAR -  TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   ELSE
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   END MASA_KERJA,
   TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') JUMLAH_BULAN, 
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%' OR KEHADIRAN = 'P') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%' OR KEHADIRAN = 'P') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%' OR KEHADIRAN = 'P') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%' OR KEHADIRAN = 'P') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END MASUK_KERJA,    
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'A' OR KEHADIRAN = 'ITK') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'A' OR KEHADIRAN = 'ITK') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'A' OR KEHADIRAN = 'ITK') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'A' OR KEHADIRAN = 'ITK') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END POT_10,   
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'STK' OR KEHADIRAN ='IDK') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'STK' OR KEHADIRAN ='IDK') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'STK' OR KEHADIRAN ='IDK') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'STK' OR KEHADIRAN ='IDK') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END POT_4,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'CAP' OR KEHADIRAN = 'CB' OR KEHADIRAN = 'CS' OR KEHADIRAN = 'CT') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'CAP' OR KEHADIRAN = 'CB' OR KEHADIRAN = 'CS' OR KEHADIRAN = 'CT') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'CAP' OR KEHADIRAN = 'CB' OR KEHADIRAN = 'CS' OR KEHADIRAN = 'CT') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'CAP' OR KEHADIRAN = 'CB' OR KEHADIRAN = 'CS' OR KEHADIRAN = 'CT') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END POT_2,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'SDK' OR KEHADIRAN = 'DL') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'SDK' OR KEHADIRAN = 'DL') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'SDK' OR KEHADIRAN = 'DL') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN = 'SDK' OR KEHADIRAN = 'DL') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END POT_1,     
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) - TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) + 1 FROM DUAL)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD')) - TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) + 1  FROM DUAL)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) - 1 + 1 FROM DUAL)  
   ELSE
   (SELECT TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD')) - 1 + 1 FROM DUAL)  
   END MASA_KERJA_PERIODE,      
   CASE WHEN NVL(NPWP, 'X') = 'X' THEN D.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulan || pTahun, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulan || pTahun THEN D.JUMLAH_NPWP ELSE D.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM PPI_OPERASIONAL.PEGAWAI_KAPAL_HISTORI A 
INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulan || pTahun, A.PEGAWAI_ID) = B.JENIS_PEGAWAI_ID
AND (TO_DATE('01' || pBulan || pTahun, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE)  OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun)
INNER JOIN (SELECT PEGAWAI_ID, NPWP, TANGGAL_NPWP, TANGGAL_MPP FROM PPI_SIMPEG.PEGAWAI X WHERE (X.STATUS_PEGAWAI_ID IN (1,5) OR (X.STATUS_PEGAWAI_ID = 6 AND X.TGL_NON_AKTIF > TO_DATE(pBulan || pTahun,'MMYYYY')) )) C ON A.PEGAWAI_ID = C.PEGAWAI_ID 
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH D ON D.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'PREMI' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
WHERE 0=0 
AND KAPAL_ID = pKapalId 
AND  KRU_JABATAN_ID = pKruJabatanId
AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulan || pTahun, 'MMYYYY');

/* SETUP TABEL PREMI SESUAI JENIS KAPAL DAN LOKASI */
CURSOR cTablePremi(pKapalJenisId IN INTEGER, pLokasiId IN VARCHAR2) IS

SELECT 
DISTINCT KRU_JABATAN_ID, 
   LOKASI_ID, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, 
   INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, 
   KETERANGAN
FROM PPI_GAJI.PREMI WHERE KAPAL_JENIS_ID = pKapalJenisId AND LOKASI_ID = pLokasiId;

/* SETUP KAPAL PRODUKSI SESUAI PERIODE */
CURSOR cTableKapalProduksi(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
KAPAL_PRODUKSI_ID, KAPAL_ID, LOKASI_ID, 
   PERIODE, TANGGAL_AWAL, TANGGAL_AKHIR, 
   (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM PPI_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);

/* SETUP KAPAL PRODUKSI PERIODE KEMARIN */
CURSOR cTableKapalProduksiSebelum(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
    (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM PPI_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);

/* SETUP PEGAWAI MASUK KERJA */
/*
CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_H + CT + CS + CB + SDK + DL
FROM PPI_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
*/
/*
CURSOR cTableHitungPPH21(pPegawaiId IN INTEGER, pPeriode IN VARCHAR, pPremi IN NUMBER) IS
SELECT PPI_GAJI.HITUNG_PPH21_PER_TAHUN (GAJI_POKOK,
                                           MERIT_PMS,
                                           TUNJANGAN_JABATAN,
                                           TPP_PMS,
                                           TUNJANGAN_PERBANTUAN,
                                           JUMLAH_TRANSPORTASI,
                                           JUMLAH_UANG_MAKAN,
                                           pPremi,
                                           0,
                                           IURAN_TASPEN,
                                           DANA_PENSIUN,
                                           STATUS_KELUARGA,
                                           DECODE (HARI_KERJA, '7H', 30, 22),
                                           JENIS_PEGAWAI_ID
                                          ) JUMLAH
FROM PPI_GAJI.GAJI_AWAL_BULAN_REPORT
WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;
*/

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableBulanLalu(pPeriodeTerakhir IN VARCHAR2) IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE = pPeriodeTerakhir ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableBulanLalu1(pPeriodeTerakhir1 IN VARCHAR2, pPeriodeTerakhir2 IN VARCHAR2) IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE IN (pPeriodeTerakhir1, pPeriodeTerakhir2) ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;    

CURSOR cTableBulanLalu2(pPeriodeTerakhir1 IN VARCHAR2, pPeriodeTerakhir2 IN VARCHAR2, pPeriodeTerakhir3 IN VARCHAR2) IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE IN (pPeriodeTerakhir1, pPeriodeTerakhir2, pPeriodeTerakhir3) ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;    

        
json_obj           PPI.json.JSONStructObj; 
json_array              PPI.json.JSONArray;     

m_PremiNormal NUMBER;
m_PremiKelebihan NUMBER;
m_PremiTotal NUMBER;
m_PegawaiId INTEGER;
m_PremiDiberikanKotor NUMBER;
m_PPH21 NUMBER;
m_BulanProses VARCHAR2(6);
m_BulanProsesSebelum VARCHAR2(6);
m_BulanProsesSebelum1 VARCHAR2(6);
m_BulanProsesSebelum2 VARCHAR2(6);
m_Bulan VARCHAR2(2);
m_Tahun VARCHAR2(4);
m_BulanSebelum VARCHAR2(2);
m_TahunSebelum VARCHAR2(4);
m_BulanSebelum1 VARCHAR2(2);
m_TahunSebelum1 VARCHAR2(4);
m_BulanSebelum2 VARCHAR2(2);
m_TahunSebelum2 VARCHAR2(4);
m_PPH21DenganPremi NUMBER := 0;
m_PPH21TanpaPremi NUMBER := 0;
m_PPH21Prosentase NUMBER := 0;
m_RealisasiProduksi NUMBER;
m_KaliProsentaseDocking NUMBER := 1;
m_IntervalProduksi NUMBER;
m_ProsentasePotongan NUMBER;
m_JumlahPotongan NUMBER;
m_MasukKerja INTEGER;

m_Potongan10 NUMBER;
m_Potongan4 NUMBER;
m_Potongan2 NUMBER;
m_Potongan1 NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

OPEN cTableBulanLalu(m_BulanProses);
            
FETCH cTableBulanLalu INTO m_BulanProsesSebelum;
            
CLOSE cTableBulanLalu;

OPEN cTableBulanLalu1(m_BulanProses, m_BulanProsesSebelum);
            
FETCH cTableBulanLalu1 INTO m_BulanProsesSebelum1;
            
CLOSE cTableBulanLalu1;

OPEN cTableBulanLalu2(m_BulanProses, m_BulanProsesSebelum, m_BulanProsesSebelum1);
            
FETCH cTableBulanLalu2 INTO m_BulanProsesSebelum2;
            
CLOSE cTableBulanLalu2;


m_Bulan := SUBSTR(m_BulanProses, 1, 2);
m_Tahun := SUBSTR(m_BulanProses, 3, 4);

m_BulanSebelum := SUBSTR(m_BulanProsesSebelum, 1, 2);
m_TahunSebelum := SUBSTR(m_BulanProsesSebelum, 3, 4);

m_BulanSebelum1 := SUBSTR(m_BulanProsesSebelum1, 1, 2);
m_TahunSebelum1 := SUBSTR(m_BulanProsesSebelum1, 3, 4);

m_BulanSebelum2 := SUBSTR(m_BulanProsesSebelum2, 1, 2);
m_TahunSebelum2 := SUBSTR(m_BulanProsesSebelum2, 3, 4);

DELETE PPI_GAJI.PREMI_KAPAL 
            WHERE PERIODE = m_BulanProses; 



    FOR recKapal IN cTableKapal LOOP        
        
        m_KaliProsentaseDocking := 1; -- 100 persen
            
        FOR recKapalProduksi IN cTableKapalProduksi(m_Bulan, m_Tahun, recKapal.KAPAL_ID) LOOP  

           -- MENGARAH KE PREMI PER JABATAN
           FOR recPremi IN cTablePremi(recKapal.KAPAL_JENIS_ID, recKapalProduksi.LOKASI_ID) LOOP   
           
           m_RealisasiProduksi := recKapalProduksi.REALISASI_PRODUKSI;
           
           
           --IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
            --BERLAKU HANYA APABILA PRODUKSI BULAN INI 0
            IF m_RealisasiProduksi = 0 THEN            
            
            -- BULAN 1
            OPEN cTableKapalProduksiSebelum(m_BulanSebelum, m_TahunSebelum, recKapal.KAPAL_ID);
                        
            FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
            CLOSE cTableKapalProduksiSebelum;       
            
            -- BULAN 2
            IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
                OPEN cTableKapalProduksiSebelum(m_BulanSebelum1, m_TahunSebelum1, recKapal.KAPAL_ID);
                        
                FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
                CLOSE cTableKapalProduksiSebelum;             
            
                
            END IF;
             
            -- BULAN 3
            IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
                OPEN cTableKapalProduksiSebelum(m_BulanSebelum2, m_TahunSebelum2, recKapal.KAPAL_ID);
                        
                FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
                CLOSE cTableKapalProduksiSebelum;             
            
            END IF;

            
            m_KaliProsentaseDocking := 0.3; -- 30 persen     

            END IF;
           
           IF m_RealisasiProduksi >= recPremi.PRODUKSI_NORMAL THEN
                             

                FOR recAwakKapal IN cTableAwakKapal(m_Bulan, m_Tahun, recKapal.KAPAL_ID, recPremi.KRU_JABATAN_ID) LOOP
                

                   m_PPH21DenganPremi := 0;
                   m_PPH21TanpaPremi  := 0;
                    IF m_RealisasiProduksi > recPremi.PRODUKSI_MAKSIMAL THEN
                    m_IntervalProduksi := recPremi.INTERVAL_PRODUKSI;
                    m_PremiNormal := recPremi.INTERVAL_PRODUKSI * recPremi.TARIF_NORMAL * (recAwakKapal.PROSENTASE / 100);
                
                    m_PremiKelebihan := (ROUND(m_RealisasiProduksi, 2) - recPremi.PRODUKSI_MAKSIMAL) * recPremi.TARIF_MAKSIMAL  * (recAwakKapal.PROSENTASE / 100);
                
                    ELSE
                    m_IntervalProduksi := m_RealisasiProduksi - recPremi.PRODUKSI_NORMAL;
                    m_PremiNormal := ROUND(m_IntervalProduksi, 2) * recPremi.TARIF_NORMAL * (recAwakKapal.PROSENTASE / 100);
                    m_PremiKelebihan := 0;                 
                    END IF;
           
                   m_PremiTotal := ROUND(m_PremiNormal) + ROUND(m_PremiKelebihan);
                   
                   m_PremiDiberikanKotor := m_PremiTotal * m_KaliProsentaseDocking;
                   
                   /*
                   OPEN cTableHariMasukKerja(m_Bulan || m_Tahun, recAwakKapal.PEGAWAI_ID);
            
                   FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
                   CLOSE cTableHariMasukKerja;                   
                   */
                   
                   IF recAwakKapal.MASUK_KERJA = recAwakKapal.MASA_KERJA THEN
                   
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor * (recAwakKapal.MASUK_KERJA / recAwakKapal.JUMLAH_BULAN);         
                       
                       -- CUTI BESAR POTONG 4% 
                       m_Potongan4  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.POT_4, 0) * 4) / 100);          
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_Potongan4;
                       
                       
                   ELSE
                    
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor * (recAwakKapal.MASA_KERJA / recAwakKapal.JUMLAH_BULAN);
                                             
                       IF ( (nvl(recAwakKapal.POT_10, 0) + NVL(recAwakKapal.POT_4, 0) + NVL(recAwakKapal.POT_2, 0) + NVL(recAwakKapal.POT_1, 0)) >= 100 ) THEN
                                    
                           m_ProsentasePotongan := 100;                   
                           m_JumlahPotongan := ROUND(m_PremiDiberikanKotor * (m_ProsentasePotongan / 100));
                           m_PremiDiberikanKotor := 0;
                            
                       ELSE
                           
                           m_Potongan10 := m_PremiDiberikanKotor * ((NVL(recAwakKapal.POT_10, 0) * 10) / 100);
                           m_Potongan4  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.POT_4, 0) * 4) / 100);
                           m_Potongan2  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.POT_2, 0) * 2) / 100);
                           m_Potongan1  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.POT_1, 0) * 1) / 100);
                           --DBMS_OUTPUT.put_line ('-----------------------------------------------');
                           --DBMS_OUTPUT.put_line (m_PremiDiberikanKotor);
                           m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_Potongan10 - m_Potongan4 - m_Potongan2 - m_Potongan1;
                           
                           --DBMS_OUTPUT.put_line (recAwakKapal.kapal_id || ' ------ ' || recAwakKapal.KRU_JABATAN_ID);
                           --DBMS_OUTPUT.put_line (m_Potongan10);
                           --DBMS_OUTPUT.put_line (m_Potongan4);
                           --DBMS_OUTPUT.put_line (m_Potongan2);
                           --DBMS_OUTPUT.put_line (m_Potongan1);
                           --DBMS_OUTPUT.put_line (m_PremiDiberikanKotor);
                           --DBMS_OUTPUT.put_line ('-----------------------------------------------');
                           
                           
                           --m_ProsentasePotongan := (recAwakKapal.MASA_KERJA_PERIODE - recAwakKapal.MASUK_KERJA) * 10;                   
                           --m_JumlahPotongan := ROUND(m_PremiDiberikanKotor * (m_ProsentasePotongan / 100));
                           --m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_JumlahPotongan;
                       END IF;

                   END IF;
                    
                   m_PPH21Prosentase := recAwakKapal.POTONGAN_PPH * 100;
                           
                   /*
                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, m_PremiDiberikanKotor);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21DenganPremi;
            
                    CLOSE cTableHitungPPH21;

                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, 0);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21TanpaPremi;
            
                    CLOSE cTableHitungPPH21;

                   
                   m_PPH21 := m_PPH21DenganPremi - m_PPH21TanpaPremi;
                   
                   IF NOT NVL(m_PPH21DenganPremi, 0) = 0 THEN
                   m_PPH21Prosentase := ROUND((m_PPH21 / m_PPH21DenganPremi) * 100, 0);
                   ELSE
                   m_PPH21Prosentase := 6;
                   END IF;
                   */
                   
                    m_PPH21 := m_PremiDiberikanKotor * (m_PPH21Prosentase / 100);
                   
                   PPI.JSON.newJSONObj(json_obj);
                   
                   json_array(1):=  ROUND(m_PremiNormal); 
                   json_array(2):=  ROUND(m_PremiKelebihan); 
                   json_array(3):=  ROUND(m_PremiDiberikanKotor); 
                   json_array(4):=  ROUND(m_PPH21);                       
                   json_array(5):=  ROUND(m_PremiDiberikanKotor - m_PPH21);  
                   json_obj := PPI.JSON.addAttr(json_obj, 'PREMI', PPI.JSON.addArray(json_array));

                   PPI.JSON.closeJSONObj(json_obj);
                                                 
                  
                   EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.PREMI_KAPAL (
                               KAPAL_ID, PEGAWAI_ID, 
                               PERIODE, MASA_KERJA, MASUK_KERJA, JUMLAH_BULAN, PREMI_JSON, REALISASI_PRODUKSI, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, FAKTOR_KONVERSI, PPH, KRU_JABATAN_ID) 
                            VALUES (' || recKapal.KAPAL_ID || ', ' || recAwakKapal.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || recAwakKapal.MASA_KERJA || ', ' || NVL(recAwakKapal.MASUK_KERJA, 0) || ', ' || recAwakKapal.JUMLAH_BULAN || ', 
                                    ''' || REPLACE(PPI.JSON.JSON2String(json_obj), '''', '"') || ''', ' || ROUND(m_RealisasiProduksi, 2) || ', ' || recPremi.PRODUKSI_NORMAL || ', 
                                    ' || recPremi.PRODUKSI_MAKSIMAL || ', ' || ROUND(m_IntervalProduksi, 2) || ', ' || recPremi.TARIF_NORMAL || ', 
                                    ' || ROUND(recPremi.TARIF_MAKSIMAL * (recAwakKapal.PROSENTASE / 100)) || ', ' || recAwakKapal.PROSENTASE || ', ' || m_PPH21Prosentase || ', ' || recPremi.KRU_JABATAN_ID || ')';           

                
    
    COMMIT;
                END LOOP;


       
           END IF;
           
            
        
           END LOOP;
        
        END LOOP;  

    END LOOP;    

    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_PREMI_BAK;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_PREMI_BAK
         IS 

CURSOR cTableKapal IS
SELECT KAPAL_ID, KAPAL_JENIS_ID, NAMA FROM IMASYS_OPERASIONAL.KAPAL;

CURSOR cTableAwakKapal(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER, pKruJabatanId IN VARCHAR2) IS

SELECT 
PEGAWAI_KAPAL_HISTORI_ID, B.JENIS_PEGAWAI_ID, KAPAL_ID, A.PEGAWAI_ID, 
   (SELECT PROSENTASE FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI X WHERE X.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND GAJI_KONDISI_ID = '09') PROSENTASE,
   KRU_JABATAN_ID, TANGGAL_MASUK, TANGGAL_KELUAR,
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   TANGGAL_KELUAR - TANGGAL_MASUK + 1
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TANGGAL_MASUK + 1
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   TANGGAL_KELUAR -  TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   ELSE
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   END MASA_KERJA,
   TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') JUMLAH_BULAN, 
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END MASUK_KERJA,    
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END ALPHA,   
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END IJIN,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END CUTI_BESAR,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) - TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) + 1 FROM DUAL)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD')) - TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) + 1  FROM DUAL)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) - 1 + 1 FROM DUAL)  
   ELSE
   (SELECT TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD')) - 1 + 1 FROM DUAL)  
   END MASA_KERJA_PERIODE,      
   CASE WHEN NVL(NPWP, 'X') = 'X' THEN D.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulan || pTahun, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulan || pTahun THEN D.JUMLAH_NPWP ELSE D.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI A 
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulan || pTahun, A.PEGAWAI_ID) = B.JENIS_PEGAWAI_ID
AND (TO_DATE('01' || pBulan || pTahun, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE)  OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun)
INNER JOIN (SELECT PEGAWAI_ID, NPWP, TANGGAL_NPWP, TANGGAL_MPP FROM IMASYS_SIMPEG.PEGAWAI X WHERE X.STATUS_PEGAWAI_ID IN (1,5)) C ON A.PEGAWAI_ID = C.PEGAWAI_ID 
INNER JOIN IMASYS_GAJI.PERHITUNGAN_PPH D ON D.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'PREMI' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
WHERE KAPAL_ID = pKapalId AND  KRU_JABATAN_ID = pKruJabatanId AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulan || pTahun, 'MMYYYY');


CURSOR cTablePremi(pKapalJenisId IN INTEGER, pLokasiId IN VARCHAR2) IS

SELECT 
DISTINCT KRU_JABATAN_ID, 
   LOKASI_ID, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, 
   INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, 
   KETERANGAN
FROM IMASYS_GAJI.PREMI WHERE KAPAL_JENIS_ID = pKapalJenisId AND LOKASI_ID = pLokasiId;


CURSOR cTableKapalProduksi(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
KAPAL_PRODUKSI_ID, KAPAL_ID, LOKASI_ID, 
   PERIODE, TANGGAL_AWAL, TANGGAL_AKHIR, 
   (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM IMASYS_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);

CURSOR cTableKapalProduksiSebelum(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
    (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM IMASYS_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);


CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_H + CT + CS + CB + SDK + DL
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

/*
CURSOR cTableHitungPPH21(pPegawaiId IN INTEGER, pPeriode IN VARCHAR, pPremi IN NUMBER) IS
SELECT IMASYS_GAJI.HITUNG_PPH21_PER_TAHUN (GAJI_POKOK,
                                           MERIT_PMS,
                                           TUNJANGAN_JABATAN,
                                           TPP_PMS,
                                           TUNJANGAN_PERBANTUAN,
                                           JUMLAH_TRANSPORTASI,
                                           JUMLAH_UANG_MAKAN,
                                           pPremi,
                                           0,
                                           IURAN_TASPEN,
                                           DANA_PENSIUN,
                                           STATUS_KELUARGA,
                                           DECODE (HARI_KERJA, '7H', 30, 22),
                                           JENIS_PEGAWAI_ID
                                          ) JUMLAH
FROM IMASYS_GAJI.GAJI_AWAL_BULAN_REPORT
WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;
*/

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableBulanLalu(pPeriodeTerakhir IN VARCHAR2) IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE = pPeriodeTerakhir ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableBulanLalu1(pPeriodeTerakhir1 IN VARCHAR2, pPeriodeTerakhir2 IN VARCHAR2) IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE IN (pPeriodeTerakhir1, pPeriodeTerakhir2) ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;    

CURSOR cTableBulanLalu2(pPeriodeTerakhir1 IN VARCHAR2, pPeriodeTerakhir2 IN VARCHAR2, pPeriodeTerakhir3 IN VARCHAR2) IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE IN (pPeriodeTerakhir1, pPeriodeTerakhir2, pPeriodeTerakhir3) ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;    

        
json_obj           IMASYS.json.JSONStructObj; 
json_array              IMASYS.json.JSONArray;     

m_PremiNormal NUMBER;
m_PremiKelebihan NUMBER;
m_PremiTotal NUMBER;
m_PegawaiId INTEGER;
m_PremiDiberikanKotor NUMBER;
m_PPH21 NUMBER;
m_BulanProses VARCHAR2(6);
m_BulanProsesSebelum VARCHAR2(6);
m_BulanProsesSebelum1 VARCHAR2(6);
m_BulanProsesSebelum2 VARCHAR2(6);
m_Bulan VARCHAR2(2);
m_Tahun VARCHAR2(4);
m_BulanSebelum VARCHAR2(2);
m_TahunSebelum VARCHAR2(4);
m_BulanSebelum1 VARCHAR2(2);
m_TahunSebelum1 VARCHAR2(4);
m_BulanSebelum2 VARCHAR2(2);
m_TahunSebelum2 VARCHAR2(4);
m_PPH21DenganPremi NUMBER := 0;
m_PPH21TanpaPremi NUMBER := 0;
m_PPH21Prosentase NUMBER := 0;
m_RealisasiProduksi NUMBER;
m_KaliProsentaseDocking NUMBER := 1;
m_IntervalProduksi NUMBER;
m_ProsentasePotongan NUMBER;
m_JumlahPotongan NUMBER;
m_MasukKerja INTEGER;
m_PotonganAlpha NUMBER;
m_PotonganIjin NUMBER;
m_PotonganCutiBesar NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

OPEN cTableBulanLalu(m_BulanProses);
            
FETCH cTableBulanLalu INTO m_BulanProsesSebelum;
            
CLOSE cTableBulanLalu;

OPEN cTableBulanLalu1(m_BulanProses, m_BulanProsesSebelum);
            
FETCH cTableBulanLalu1 INTO m_BulanProsesSebelum1;
            
CLOSE cTableBulanLalu1;

OPEN cTableBulanLalu2(m_BulanProses, m_BulanProsesSebelum, m_BulanProsesSebelum1);
            
FETCH cTableBulanLalu2 INTO m_BulanProsesSebelum2;
            
CLOSE cTableBulanLalu2;


m_Bulan := SUBSTR(m_BulanProses, 1, 2);
m_Tahun := SUBSTR(m_BulanProses, 3, 4);

m_BulanSebelum := SUBSTR(m_BulanProsesSebelum, 1, 2);
m_TahunSebelum := SUBSTR(m_BulanProsesSebelum, 3, 4);

m_BulanSebelum1 := SUBSTR(m_BulanProsesSebelum1, 1, 2);
m_TahunSebelum1 := SUBSTR(m_BulanProsesSebelum1, 3, 4);

m_BulanSebelum2 := SUBSTR(m_BulanProsesSebelum2, 1, 2);
m_TahunSebelum2 := SUBSTR(m_BulanProsesSebelum2, 3, 4);

DELETE IMASYS_GAJI.PREMI_KAPAL 
            WHERE PERIODE = m_BulanProses; 



    FOR recKapal IN cTableKapal LOOP        
        
        m_KaliProsentaseDocking := 1; -- 100 persen
            
        FOR recKapalProduksi IN cTableKapalProduksi(m_Bulan, m_Tahun, recKapal.KAPAL_ID) LOOP  

           -- MENGARAH KE PREMI PER JABATAN
           FOR recPremi IN cTablePremi(recKapal.KAPAL_JENIS_ID, recKapalProduksi.LOKASI_ID) LOOP   
           
           m_RealisasiProduksi := recKapalProduksi.REALISASI_PRODUKSI;
           
           
           --IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
            --BERLAKU HANYA APABILA PRODUKSI BULAN INI 0
            IF m_RealisasiProduksi = 0 THEN            
            
            -- BULAN 1
            OPEN cTableKapalProduksiSebelum(m_BulanSebelum, m_TahunSebelum, recKapal.KAPAL_ID);
                        
            FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
            CLOSE cTableKapalProduksiSebelum;       
            
            -- BULAN 2
            IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
                OPEN cTableKapalProduksiSebelum(m_BulanSebelum1, m_TahunSebelum1, recKapal.KAPAL_ID);
                        
                FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
                CLOSE cTableKapalProduksiSebelum;             
            
                
            END IF;
             
            -- BULAN 3
            IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
                OPEN cTableKapalProduksiSebelum(m_BulanSebelum2, m_TahunSebelum2, recKapal.KAPAL_ID);
                        
                FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
                CLOSE cTableKapalProduksiSebelum;             
            
            END IF;

            
            m_KaliProsentaseDocking := 0.3; -- 30 persen     

            END IF;
           
           IF m_RealisasiProduksi >= recPremi.PRODUKSI_NORMAL THEN
                             

                FOR recAwakKapal IN cTableAwakKapal(m_Bulan, m_Tahun, recKapal.KAPAL_ID, recPremi.KRU_JABATAN_ID) LOOP
                

                   m_PPH21DenganPremi := 0;
                   m_PPH21TanpaPremi  := 0;
                    IF m_RealisasiProduksi > recPremi.PRODUKSI_MAKSIMAL THEN
                    m_IntervalProduksi := recPremi.INTERVAL_PRODUKSI;
                    m_PremiNormal := recPremi.INTERVAL_PRODUKSI * recPremi.TARIF_NORMAL * (recAwakKapal.PROSENTASE / 100);
                
                    m_PremiKelebihan := (ROUND(m_RealisasiProduksi, 2) - recPremi.PRODUKSI_MAKSIMAL) * recPremi.TARIF_MAKSIMAL  * (recAwakKapal.PROSENTASE / 100);
                
                    ELSE
                    m_IntervalProduksi := m_RealisasiProduksi - recPremi.PRODUKSI_NORMAL;
                    m_PremiNormal := ROUND(m_IntervalProduksi, 2) * recPremi.TARIF_NORMAL * (recAwakKapal.PROSENTASE / 100);
                    m_PremiKelebihan := 0;                 
                    END IF;
           
                   m_PremiTotal := ROUND(m_PremiNormal) + ROUND(m_PremiKelebihan);
                   
                   m_PremiDiberikanKotor := m_PremiTotal * m_KaliProsentaseDocking;
                   

                   OPEN cTableHariMasukKerja(m_Bulan || m_Tahun, recAwakKapal.PEGAWAI_ID);
            
                   FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
                   CLOSE cTableHariMasukKerja;                   
                   
                   IF recAwakKapal.MASUK_KERJA = recAwakKapal.MASA_KERJA THEN
                   
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor * (recAwakKapal.MASUK_KERJA / recAwakKapal.JUMLAH_BULAN);         
                       
                       -- CUTI BESAR POTONG 4% 
                       m_PotonganCutiBesar  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.CUTI_BESAR, 0) * 4) / 100);          
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_PotonganCutiBesar;
                       
                       
                   ELSE
                    
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor * (recAwakKapal.MASA_KERJA / recAwakKapal.JUMLAH_BULAN);
                                             
                       IF recAwakKapal.ALPHA >= 10 THEN
                                    
                           m_ProsentasePotongan := 100;                   
                           m_JumlahPotongan := ROUND(m_PremiDiberikanKotor * (m_ProsentasePotongan / 100));
                           m_PremiDiberikanKotor := 0;
                            
                       ELSE
                           
                           m_PotonganAlpha := m_PremiDiberikanKotor * ((NVL(recAwakKapal.ALPHA, 0) * 10) / 100);
                           m_PotonganIjin  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.IJIN, 0) * 4) / 100);
                           m_PotonganCutiBesar  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.CUTI_BESAR, 0) * 4) / 100);
                           
                           m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_PotonganAlpha - m_PotonganIjin - m_PotonganCutiBesar;
                           --m_ProsentasePotongan := (recAwakKapal.MASA_KERJA_PERIODE - recAwakKapal.MASUK_KERJA) * 10;                   
                           --m_JumlahPotongan := ROUND(m_PremiDiberikanKotor * (m_ProsentasePotongan / 100));
                           --m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_JumlahPotongan;
                       END IF;

                   END IF;
                    
                   m_PPH21Prosentase := recAwakKapal.POTONGAN_PPH * 100;
                           
                   /*
                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, m_PremiDiberikanKotor);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21DenganPremi;
            
                    CLOSE cTableHitungPPH21;

                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, 0);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21TanpaPremi;
            
                    CLOSE cTableHitungPPH21;

                   
                   m_PPH21 := m_PPH21DenganPremi - m_PPH21TanpaPremi;
                   
                   IF NOT NVL(m_PPH21DenganPremi, 0) = 0 THEN
                   m_PPH21Prosentase := ROUND((m_PPH21 / m_PPH21DenganPremi) * 100, 0);
                   ELSE
                   m_PPH21Prosentase := 6;
                   END IF;
                   */
                   
                    m_PPH21 := m_PremiDiberikanKotor * (m_PPH21Prosentase / 100);
                   
                   IMASYS.JSON.newJSONObj(json_obj);
                   
                   json_array(1):=  ROUND(m_PremiNormal); 
                   json_array(2):=  ROUND(m_PremiKelebihan); 
                   json_array(3):=  ROUND(m_PremiDiberikanKotor); 
                   json_array(4):=  ROUND(m_PPH21);                       
                   json_array(5):=  ROUND(m_PremiDiberikanKotor - m_PPH21);  
                   json_obj := IMASYS.JSON.addAttr(json_obj, 'PREMI', IMASYS.JSON.addArray(json_array));

                   IMASYS.JSON.closeJSONObj(json_obj);
                                                 
                  
                   EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.PREMI_KAPAL (
                               KAPAL_ID, PEGAWAI_ID, 
                               PERIODE, MASA_KERJA, MASUK_KERJA, JUMLAH_BULAN, PREMI_JSON, REALISASI_PRODUKSI, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, FAKTOR_KONVERSI, PPH, KRU_JABATAN_ID) 
                            VALUES (' || recKapal.KAPAL_ID || ', ' || recAwakKapal.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || recAwakKapal.MASA_KERJA || ', ' || NVL(recAwakKapal.MASUK_KERJA, 0) || ', ' || recAwakKapal.JUMLAH_BULAN || ', 
                                    ''' || REPLACE(IMASYS.JSON.JSON2String(json_obj), '''', '"') || ''', ' || ROUND(m_RealisasiProduksi, 2) || ', ' || recPremi.PRODUKSI_NORMAL || ', 
                                    ' || recPremi.PRODUKSI_MAKSIMAL || ', ' || ROUND(m_IntervalProduksi, 2) || ', ' || recPremi.TARIF_NORMAL || ', 
                                    ' || ROUND(recPremi.TARIF_MAKSIMAL * (recAwakKapal.PROSENTASE / 100)) || ', ' || recAwakKapal.PROSENTASE || ', ' || m_PPH21Prosentase || ', ' || recPremi.KRU_JABATAN_ID || ')';           

                
    
    COMMIT;
                END LOOP;


       
           END IF;
           
            
        
           END LOOP;
        
        END LOOP;  

    END LOOP;    

    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_PREMI_BK_140314;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_PREMI_BK_140314
         IS 

/* SETUP KAPAL YANG SIAP OPERASI PADA PERIODE TERTENTU */
CURSOR cTableKapal IS
SELECT KAPAL_ID, KAPAL_JENIS_ID, NAMA FROM IMASYS_OPERASIONAL.KAPAL;

/* SETUP AWAK KAPAL YANG BERADA PADA KAPAL SIAP OPERASI DAN JANGKA WAKTU PEGAWAI TERSEBUT AKTIF DI KAPAL TERSEBUT TERMASUK ABSENSINYA */
CURSOR cTableAwakKapal(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER, pKruJabatanId IN VARCHAR2) IS

SELECT 
PEGAWAI_KAPAL_HISTORI_ID, B.JENIS_PEGAWAI_ID, KAPAL_ID, A.PEGAWAI_ID, 
   (SELECT PROSENTASE FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI X WHERE X.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND GAJI_KONDISI_ID = '09') PROSENTASE,
   KRU_JABATAN_ID, TANGGAL_MASUK, TANGGAL_KELUAR,
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   TANGGAL_KELUAR - TANGGAL_MASUK + 1
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TANGGAL_MASUK + 1
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   TANGGAL_KELUAR -  TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   ELSE
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   END MASA_KERJA,
   TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') JUMLAH_BULAN, 
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END MASUK_KERJA,    
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END ALPHA,   
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END IJIN,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END CUTI_BESAR,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'SDK%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'SDK%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'SDK%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'SDK%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END SAKIT_DGN_KETERANGAN,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) - TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) + 1 FROM DUAL)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD')) - TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) + 1  FROM DUAL)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) - 1 + 1 FROM DUAL)  
   ELSE
   (SELECT TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD')) - 1 + 1 FROM DUAL)  
   END MASA_KERJA_PERIODE,      
   CASE WHEN NVL(NPWP, 'X') = 'X' THEN D.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulan || pTahun, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulan || pTahun THEN D.JUMLAH_NPWP ELSE D.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI A 
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulan || pTahun, A.PEGAWAI_ID) = B.JENIS_PEGAWAI_ID
AND (TO_DATE('01' || pBulan || pTahun, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE)  OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun)
INNER JOIN (SELECT PEGAWAI_ID, NPWP, TANGGAL_NPWP, TANGGAL_MPP FROM IMASYS_SIMPEG.PEGAWAI X WHERE X.STATUS_PEGAWAI_ID IN (1,5)) C ON A.PEGAWAI_ID = C.PEGAWAI_ID 
INNER JOIN IMASYS_GAJI.PERHITUNGAN_PPH D ON D.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'PREMI' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
WHERE KAPAL_ID = pKapalId AND  KRU_JABATAN_ID = pKruJabatanId AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulan || pTahun, 'MMYYYY');

/* SETUP TABEL PREMI SESUAI JENIS KAPAL DAN LOKASI */
CURSOR cTablePremi(pKapalJenisId IN INTEGER, pLokasiId IN VARCHAR2) IS

SELECT 
DISTINCT KRU_JABATAN_ID, 
   LOKASI_ID, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, 
   INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, 
   KETERANGAN
FROM IMASYS_GAJI.PREMI WHERE KAPAL_JENIS_ID = pKapalJenisId AND LOKASI_ID = pLokasiId;

/* SETUP KAPAL PRODUKSI SESUAI PERIODE */
CURSOR cTableKapalProduksi(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
KAPAL_PRODUKSI_ID, KAPAL_ID, LOKASI_ID, 
   PERIODE, TANGGAL_AWAL, TANGGAL_AKHIR, 
   (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM IMASYS_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);

/* SETUP KAPAL PRODUKSI PERIODE KEMARIN */
CURSOR cTableKapalProduksiSebelum(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
    (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM IMASYS_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);

/* SETUP PEGAWAI MASUK KERJA */
CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_H + CT + CS + CB + SDK + DL
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

/*
CURSOR cTableHitungPPH21(pPegawaiId IN INTEGER, pPeriode IN VARCHAR, pPremi IN NUMBER) IS
SELECT IMASYS_GAJI.HITUNG_PPH21_PER_TAHUN (GAJI_POKOK,
                                           MERIT_PMS,
                                           TUNJANGAN_JABATAN,
                                           TPP_PMS,
                                           TUNJANGAN_PERBANTUAN,
                                           JUMLAH_TRANSPORTASI,
                                           JUMLAH_UANG_MAKAN,
                                           pPremi,
                                           0,
                                           IURAN_TASPEN,
                                           DANA_PENSIUN,
                                           STATUS_KELUARGA,
                                           DECODE (HARI_KERJA, '7H', 30, 22),
                                           JENIS_PEGAWAI_ID
                                          ) JUMLAH
FROM IMASYS_GAJI.GAJI_AWAL_BULAN_REPORT
WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;
*/

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableBulanLalu(pPeriodeTerakhir IN VARCHAR2) IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE = pPeriodeTerakhir ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableBulanLalu1(pPeriodeTerakhir1 IN VARCHAR2, pPeriodeTerakhir2 IN VARCHAR2) IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE IN (pPeriodeTerakhir1, pPeriodeTerakhir2) ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;    

CURSOR cTableBulanLalu2(pPeriodeTerakhir1 IN VARCHAR2, pPeriodeTerakhir2 IN VARCHAR2, pPeriodeTerakhir3 IN VARCHAR2) IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE IN (pPeriodeTerakhir1, pPeriodeTerakhir2, pPeriodeTerakhir3) ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;    

        
json_obj           IMASYS.json.JSONStructObj; 
json_array              IMASYS.json.JSONArray;     

m_PremiNormal NUMBER;
m_PremiKelebihan NUMBER;
m_PremiTotal NUMBER;
m_PegawaiId INTEGER;
m_PremiDiberikanKotor NUMBER;
m_PPH21 NUMBER;
m_BulanProses VARCHAR2(6);
m_BulanProsesSebelum VARCHAR2(6);
m_BulanProsesSebelum1 VARCHAR2(6);
m_BulanProsesSebelum2 VARCHAR2(6);
m_Bulan VARCHAR2(2);
m_Tahun VARCHAR2(4);
m_BulanSebelum VARCHAR2(2);
m_TahunSebelum VARCHAR2(4);
m_BulanSebelum1 VARCHAR2(2);
m_TahunSebelum1 VARCHAR2(4);
m_BulanSebelum2 VARCHAR2(2);
m_TahunSebelum2 VARCHAR2(4);
m_PPH21DenganPremi NUMBER := 0;
m_PPH21TanpaPremi NUMBER := 0;
m_PPH21Prosentase NUMBER := 0;
m_RealisasiProduksi NUMBER;
m_KaliProsentaseDocking NUMBER := 1;
m_IntervalProduksi NUMBER;
m_ProsentasePotongan NUMBER;
m_JumlahPotongan NUMBER;
m_MasukKerja INTEGER;
m_PotonganAlpha NUMBER;
m_PotonganIjin NUMBER;
m_PotonganCutiBesar NUMBER;
m_PotonganSakitDgnKeterangan NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

OPEN cTableBulanLalu(m_BulanProses);
            
FETCH cTableBulanLalu INTO m_BulanProsesSebelum;
            
CLOSE cTableBulanLalu;

OPEN cTableBulanLalu1(m_BulanProses, m_BulanProsesSebelum);
            
FETCH cTableBulanLalu1 INTO m_BulanProsesSebelum1;
            
CLOSE cTableBulanLalu1;

OPEN cTableBulanLalu2(m_BulanProses, m_BulanProsesSebelum, m_BulanProsesSebelum1);
            
FETCH cTableBulanLalu2 INTO m_BulanProsesSebelum2;
            
CLOSE cTableBulanLalu2;


m_Bulan := SUBSTR(m_BulanProses, 1, 2);
m_Tahun := SUBSTR(m_BulanProses, 3, 4);

m_BulanSebelum := SUBSTR(m_BulanProsesSebelum, 1, 2);
m_TahunSebelum := SUBSTR(m_BulanProsesSebelum, 3, 4);

m_BulanSebelum1 := SUBSTR(m_BulanProsesSebelum1, 1, 2);
m_TahunSebelum1 := SUBSTR(m_BulanProsesSebelum1, 3, 4);

m_BulanSebelum2 := SUBSTR(m_BulanProsesSebelum2, 1, 2);
m_TahunSebelum2 := SUBSTR(m_BulanProsesSebelum2, 3, 4);

DELETE IMASYS_GAJI.PREMI_KAPAL 
            WHERE PERIODE = m_BulanProses; 



    FOR recKapal IN cTableKapal LOOP        
        
        m_KaliProsentaseDocking := 1; -- 100 persen
            
        FOR recKapalProduksi IN cTableKapalProduksi(m_Bulan, m_Tahun, recKapal.KAPAL_ID) LOOP  

           -- MENGARAH KE PREMI PER JABATAN
           FOR recPremi IN cTablePremi(recKapal.KAPAL_JENIS_ID, recKapalProduksi.LOKASI_ID) LOOP   
           
           m_RealisasiProduksi := recKapalProduksi.REALISASI_PRODUKSI;
           
           
           --IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
            --BERLAKU HANYA APABILA PRODUKSI BULAN INI 0
            IF m_RealisasiProduksi = 0 THEN            
            
            -- BULAN 1
            OPEN cTableKapalProduksiSebelum(m_BulanSebelum, m_TahunSebelum, recKapal.KAPAL_ID);
                        
            FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
            CLOSE cTableKapalProduksiSebelum;       
            
            -- BULAN 2
            IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
                OPEN cTableKapalProduksiSebelum(m_BulanSebelum1, m_TahunSebelum1, recKapal.KAPAL_ID);
                        
                FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
                CLOSE cTableKapalProduksiSebelum;             
            
                
            END IF;
             
            -- BULAN 3
            IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
                OPEN cTableKapalProduksiSebelum(m_BulanSebelum2, m_TahunSebelum2, recKapal.KAPAL_ID);
                        
                FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
                CLOSE cTableKapalProduksiSebelum;             
            
            END IF;

            
            m_KaliProsentaseDocking := 0.3; -- 30 persen     

            END IF;
           
           IF m_RealisasiProduksi >= recPremi.PRODUKSI_NORMAL THEN
                             

                FOR recAwakKapal IN cTableAwakKapal(m_Bulan, m_Tahun, recKapal.KAPAL_ID, recPremi.KRU_JABATAN_ID) LOOP
                

                   m_PPH21DenganPremi := 0;
                   m_PPH21TanpaPremi  := 0;
                    IF m_RealisasiProduksi > recPremi.PRODUKSI_MAKSIMAL THEN
                    m_IntervalProduksi := recPremi.INTERVAL_PRODUKSI;
                    m_PremiNormal := recPremi.INTERVAL_PRODUKSI * recPremi.TARIF_NORMAL * (recAwakKapal.PROSENTASE / 100);
                
                    m_PremiKelebihan := (ROUND(m_RealisasiProduksi, 2) - recPremi.PRODUKSI_MAKSIMAL) * recPremi.TARIF_MAKSIMAL  * (recAwakKapal.PROSENTASE / 100);
                
                    ELSE
                    m_IntervalProduksi := m_RealisasiProduksi - recPremi.PRODUKSI_NORMAL;
                    m_PremiNormal := ROUND(m_IntervalProduksi, 2) * recPremi.TARIF_NORMAL * (recAwakKapal.PROSENTASE / 100);
                    m_PremiKelebihan := 0;                 
                    END IF;
           
                   m_PremiTotal := ROUND(m_PremiNormal) + ROUND(m_PremiKelebihan);
                   
                   m_PremiDiberikanKotor := m_PremiTotal * m_KaliProsentaseDocking;
                   

                   OPEN cTableHariMasukKerja(m_Bulan || m_Tahun, recAwakKapal.PEGAWAI_ID);
            
                   FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
                   CLOSE cTableHariMasukKerja;                   
                   
                   IF recAwakKapal.MASUK_KERJA = recAwakKapal.MASA_KERJA THEN
                   
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor * (recAwakKapal.MASUK_KERJA / recAwakKapal.JUMLAH_BULAN);         
                       
                       -- CUTI BESAR POTONG 4% 
                       m_PotonganCutiBesar  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.CUTI_BESAR, 0) * 4) / 100);          
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_PotonganCutiBesar;
                       
                       
                   ELSE
                    
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor * (recAwakKapal.MASA_KERJA / recAwakKapal.JUMLAH_BULAN);
                                             
                       IF recAwakKapal.ALPHA >= 10 THEN
                                    
                           m_ProsentasePotongan := 100;                   
                           m_JumlahPotongan := ROUND(m_PremiDiberikanKotor * (m_ProsentasePotongan / 100));
                           m_PremiDiberikanKotor := 0;
                            
                       ELSE
                           
                           m_PotonganAlpha := m_PremiDiberikanKotor * ((NVL(recAwakKapal.ALPHA, 0) * 10) / 100);
                           m_PotonganIjin  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.IJIN, 0) * 4) / 100);
                           m_PotonganCutiBesar  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.CUTI_BESAR, 0) * 4) / 100);
                           m_PotonganSakitDgnKeterangan := m_PremiDiberikanKotor * ((NVL(recAwakKapal.SAKIT_DGN_KETERANGAN, 0) * 1) / 100);
                           
                           m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_PotonganAlpha - m_PotonganIjin - m_PotonganCutiBesar - m_PotonganSakitDgnKeterangan;
                           --m_ProsentasePotongan := (recAwakKapal.MASA_KERJA_PERIODE - recAwakKapal.MASUK_KERJA) * 10;                   
                           --m_JumlahPotongan := ROUND(m_PremiDiberikanKotor * (m_ProsentasePotongan / 100));
                           --m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_JumlahPotongan;
                       END IF;

                   END IF;
                    
                   m_PPH21Prosentase := recAwakKapal.POTONGAN_PPH * 100;
                           
                   /*
                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, m_PremiDiberikanKotor);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21DenganPremi;
            
                    CLOSE cTableHitungPPH21;

                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, 0);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21TanpaPremi;
            
                    CLOSE cTableHitungPPH21;

                   
                   m_PPH21 := m_PPH21DenganPremi - m_PPH21TanpaPremi;
                   
                   IF NOT NVL(m_PPH21DenganPremi, 0) = 0 THEN
                   m_PPH21Prosentase := ROUND((m_PPH21 / m_PPH21DenganPremi) * 100, 0);
                   ELSE
                   m_PPH21Prosentase := 6;
                   END IF;
                   */
                   
                    m_PPH21 := m_PremiDiberikanKotor * (m_PPH21Prosentase / 100);
                   
                   IMASYS.JSON.newJSONObj(json_obj);
                   
                   json_array(1):=  ROUND(m_PremiNormal); 
                   json_array(2):=  ROUND(m_PremiKelebihan); 
                   json_array(3):=  ROUND(m_PremiDiberikanKotor); 
                   json_array(4):=  ROUND(m_PPH21);                       
                   json_array(5):=  ROUND(m_PremiDiberikanKotor - m_PPH21);  
                   json_obj := IMASYS.JSON.addAttr(json_obj, 'PREMI', IMASYS.JSON.addArray(json_array));

                   IMASYS.JSON.closeJSONObj(json_obj);
                                                 
                  
                   EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.PREMI_KAPAL (
                               KAPAL_ID, PEGAWAI_ID, 
                               PERIODE, MASA_KERJA, MASUK_KERJA, JUMLAH_BULAN, PREMI_JSON, REALISASI_PRODUKSI, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, FAKTOR_KONVERSI, PPH, KRU_JABATAN_ID) 
                            VALUES (' || recKapal.KAPAL_ID || ', ' || recAwakKapal.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || recAwakKapal.MASA_KERJA || ', ' || NVL(recAwakKapal.MASUK_KERJA, 0) || ', ' || recAwakKapal.JUMLAH_BULAN || ', 
                                    ''' || REPLACE(IMASYS.JSON.JSON2String(json_obj), '''', '"') || ''', ' || ROUND(m_RealisasiProduksi, 2) || ', ' || recPremi.PRODUKSI_NORMAL || ', 
                                    ' || recPremi.PRODUKSI_MAKSIMAL || ', ' || ROUND(m_IntervalProduksi, 2) || ', ' || recPremi.TARIF_NORMAL || ', 
                                    ' || ROUND(recPremi.TARIF_MAKSIMAL * (recAwakKapal.PROSENTASE / 100)) || ', ' || recAwakKapal.PROSENTASE || ', ' || m_PPH21Prosentase || ', ' || recPremi.KRU_JABATAN_ID || ')';           

                
    
    COMMIT;
                END LOOP;


       
           END IF;
           
            
        
           END LOOP;
        
        END LOOP;  

    END LOOP;    

    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_PREMI_KAPAL;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_PREMI_KAPAL(gKapalId IN INTEGER)
         IS 

/* SETUP KAPAL YANG SIAP OPERASI PADA PERIODE TERTENTU */
CURSOR cTableKapal IS
SELECT KAPAL_ID, KAPAL_JENIS_ID, NAMA FROM PPI_OPERASIONAL.KAPAL WHERE KAPAL_ID = gKapalId;

/* SETUP AWAK KAPAL YANG BERADA PADA KAPAL SIAP OPERASI DAN JANGKA WAKTU PEGAWAI TERSEBUT AKTIF DI KAPAL TERSEBUT TERMASUK ABSENSINYA */
CURSOR cTableAwakKapal(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER, pKruJabatanId IN VARCHAR2) IS

SELECT 
PEGAWAI_KAPAL_HISTORI_ID, B.JENIS_PEGAWAI_ID, KAPAL_ID, A.PEGAWAI_ID, 
   (SELECT PROSENTASE FROM PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI X WHERE X.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND GAJI_KONDISI_ID = '09') PROSENTASE,
   KRU_JABATAN_ID, TANGGAL_MASUK, TANGGAL_KELUAR,
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   TANGGAL_KELUAR - TANGGAL_MASUK + 1
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TANGGAL_MASUK + 1
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   TANGGAL_KELUAR -  TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   ELSE
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   END MASA_KERJA,
   TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') JUMLAH_BULAN, 
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END MASUK_KERJA,    
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'A%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END ALPHA,   
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'I%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END IJIN,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'CB%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END CUTI_BESAR,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'SDK%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'SDK%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'SDK%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'SDK%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END SAKIT_DGN_KETERANGAN,      
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) - TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) + 1 FROM DUAL)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD')) - TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) + 1  FROM DUAL)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) - 1 + 1 FROM DUAL)  
   ELSE
   (SELECT TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD')) - 1 + 1 FROM DUAL)  
   END MASA_KERJA_PERIODE,      
   CASE WHEN NVL(NPWP, 'X') = 'X' THEN D.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulan || pTahun, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulan || pTahun THEN D.JUMLAH_NPWP ELSE D.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM PPI_OPERASIONAL.PEGAWAI_KAPAL_HISTORI A 
INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulan || pTahun, A.PEGAWAI_ID) = B.JENIS_PEGAWAI_ID
AND (TO_DATE('01' || pBulan || pTahun, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE)  OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun)
INNER JOIN (SELECT PEGAWAI_ID, NPWP, TANGGAL_NPWP, TANGGAL_MPP FROM PPI_SIMPEG.PEGAWAI X WHERE X.STATUS_PEGAWAI_ID IN (1,5)) C ON A.PEGAWAI_ID = C.PEGAWAI_ID 
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH D ON D.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'PREMI' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
WHERE KAPAL_ID = pKapalId AND  KRU_JABATAN_ID = pKruJabatanId AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulan || pTahun, 'MMYYYY');

/* SETUP TABEL PREMI SESUAI JENIS KAPAL DAN LOKASI */
CURSOR cTablePremi(pKapalJenisId IN INTEGER, pLokasiId IN VARCHAR2) IS

SELECT 
DISTINCT KRU_JABATAN_ID, 
   LOKASI_ID, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, 
   INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, 
   KETERANGAN
FROM PPI_GAJI.PREMI WHERE KAPAL_JENIS_ID = pKapalJenisId AND LOKASI_ID = pLokasiId;

/* SETUP KAPAL PRODUKSI SESUAI PERIODE */
CURSOR cTableKapalProduksi(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
KAPAL_PRODUKSI_ID, KAPAL_ID, LOKASI_ID, 
   PERIODE, TANGGAL_AWAL, TANGGAL_AKHIR, 
   (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM PPI_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);

/* SETUP KAPAL PRODUKSI PERIODE KEMARIN */
CURSOR cTableKapalProduksiSebelum(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
    (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM PPI_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);

/* SETUP PEGAWAI MASUK KERJA */
CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_H + CT + CS + CB + SDK + DL
FROM PPI_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;

/*
CURSOR cTableHitungPPH21(pPegawaiId IN INTEGER, pPeriode IN VARCHAR, pPremi IN NUMBER) IS
SELECT PPI_GAJI.HITUNG_PPH21_PER_TAHUN (GAJI_POKOK,
                                           MERIT_PMS,
                                           TUNJANGAN_JABATAN,
                                           TPP_PMS,
                                           TUNJANGAN_PERBANTUAN,
                                           JUMLAH_TRANSPORTASI,
                                           JUMLAH_UANG_MAKAN,
                                           pPremi,
                                           0,
                                           IURAN_TASPEN,
                                           DANA_PENSIUN,
                                           STATUS_KELUARGA,
                                           DECODE (HARI_KERJA, '7H', 30, 22),
                                           JENIS_PEGAWAI_ID
                                          ) JUMLAH
FROM PPI_GAJI.GAJI_AWAL_BULAN_REPORT
WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;
*/

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableBulanLalu(pPeriodeTerakhir IN VARCHAR2) IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE = pPeriodeTerakhir ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableBulanLalu1(pPeriodeTerakhir1 IN VARCHAR2, pPeriodeTerakhir2 IN VARCHAR2) IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE IN (pPeriodeTerakhir1, pPeriodeTerakhir2) ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;    

CURSOR cTableBulanLalu2(pPeriodeTerakhir1 IN VARCHAR2, pPeriodeTerakhir2 IN VARCHAR2, pPeriodeTerakhir3 IN VARCHAR2) IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN WHERE NOT PERIODE IN (pPeriodeTerakhir1, pPeriodeTerakhir2, pPeriodeTerakhir3) ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;    

        
json_obj           PPI.json.JSONStructObj; 
json_array              PPI.json.JSONArray;     

m_PremiNormal NUMBER;
m_PremiKelebihan NUMBER;
m_PremiTotal NUMBER;
m_PegawaiId INTEGER;
m_PremiDiberikanKotor NUMBER;
m_PPH21 NUMBER;
m_BulanProses VARCHAR2(6);
m_BulanProsesSebelum VARCHAR2(6);
m_BulanProsesSebelum1 VARCHAR2(6);
m_BulanProsesSebelum2 VARCHAR2(6);
m_Bulan VARCHAR2(2);
m_Tahun VARCHAR2(4);
m_BulanSebelum VARCHAR2(2);
m_TahunSebelum VARCHAR2(4);
m_BulanSebelum1 VARCHAR2(2);
m_TahunSebelum1 VARCHAR2(4);
m_BulanSebelum2 VARCHAR2(2);
m_TahunSebelum2 VARCHAR2(4);
m_PPH21DenganPremi NUMBER := 0;
m_PPH21TanpaPremi NUMBER := 0;
m_PPH21Prosentase NUMBER := 0;
m_RealisasiProduksi NUMBER;
m_KaliProsentaseDocking NUMBER := 1;
m_IntervalProduksi NUMBER;
m_ProsentasePotongan NUMBER;
m_JumlahPotongan NUMBER;
m_MasukKerja INTEGER;
m_PotonganAlpha NUMBER;
m_PotonganIjin NUMBER;
m_PotonganCutiBesar NUMBER;
m_PotonganSakitDgnKeterangan NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

OPEN cTableBulanLalu(m_BulanProses);
            
FETCH cTableBulanLalu INTO m_BulanProsesSebelum;
            
CLOSE cTableBulanLalu;

OPEN cTableBulanLalu1(m_BulanProses, m_BulanProsesSebelum);
            
FETCH cTableBulanLalu1 INTO m_BulanProsesSebelum1;
            
CLOSE cTableBulanLalu1;

OPEN cTableBulanLalu2(m_BulanProses, m_BulanProsesSebelum, m_BulanProsesSebelum1);
            
FETCH cTableBulanLalu2 INTO m_BulanProsesSebelum2;
            
CLOSE cTableBulanLalu2;


m_Bulan := SUBSTR(m_BulanProses, 1, 2);
m_Tahun := SUBSTR(m_BulanProses, 3, 4);

m_BulanSebelum := SUBSTR(m_BulanProsesSebelum, 1, 2);
m_TahunSebelum := SUBSTR(m_BulanProsesSebelum, 3, 4);

m_BulanSebelum1 := SUBSTR(m_BulanProsesSebelum1, 1, 2);
m_TahunSebelum1 := SUBSTR(m_BulanProsesSebelum1, 3, 4);

m_BulanSebelum2 := SUBSTR(m_BulanProsesSebelum2, 1, 2);
m_TahunSebelum2 := SUBSTR(m_BulanProsesSebelum2, 3, 4);

DELETE PPI_GAJI.PREMI_KAPAL 
            WHERE PERIODE = m_BulanProses; 



    FOR recKapal IN cTableKapal LOOP        
        
        m_KaliProsentaseDocking := 1; -- 100 persen
            
        FOR recKapalProduksi IN cTableKapalProduksi(m_Bulan, m_Tahun, recKapal.KAPAL_ID) LOOP  

    
           -- MENGARAH KE PREMI PER JABATAN
           FOR recPremi IN cTablePremi(recKapal.KAPAL_JENIS_ID, recKapalProduksi.LOKASI_ID) LOOP   
           
           m_RealisasiProduksi := recKapalProduksi.REALISASI_PRODUKSI;
           
           
           --IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
            --BERLAKU HANYA APABILA PRODUKSI BULAN INI 0
            IF m_RealisasiProduksi = 0 THEN            
            
            -- BULAN 1
            OPEN cTableKapalProduksiSebelum(m_BulanSebelum, m_TahunSebelum, recKapal.KAPAL_ID);
                        
            FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
            CLOSE cTableKapalProduksiSebelum;       
            
            -- BULAN 2
            IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
                OPEN cTableKapalProduksiSebelum(m_BulanSebelum1, m_TahunSebelum1, recKapal.KAPAL_ID);
                        
                FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
                CLOSE cTableKapalProduksiSebelum;             
            
                
            END IF;
             
            -- BULAN 3
            IF m_RealisasiProduksi < recPremi.PRODUKSI_NORMAL THEN
            
                OPEN cTableKapalProduksiSebelum(m_BulanSebelum2, m_TahunSebelum2, recKapal.KAPAL_ID);
                        
                FETCH cTableKapalProduksiSebelum INTO m_RealisasiProduksi;
                        
                CLOSE cTableKapalProduksiSebelum;             
            
            END IF;

            
            m_KaliProsentaseDocking := 0.3; -- 30 persen     

            END IF;
           
           IF m_RealisasiProduksi >= recPremi.PRODUKSI_NORMAL THEN
                             

                FOR recAwakKapal IN cTableAwakKapal(m_Bulan, m_Tahun, recKapal.KAPAL_ID, recPremi.KRU_JABATAN_ID) LOOP
                

                   m_PPH21DenganPremi := 0;
                   m_PPH21TanpaPremi  := 0;
                    IF m_RealisasiProduksi > recPremi.PRODUKSI_MAKSIMAL THEN
                    m_IntervalProduksi := recPremi.INTERVAL_PRODUKSI;
                    m_PremiNormal := recPremi.INTERVAL_PRODUKSI * recPremi.TARIF_NORMAL * (recAwakKapal.PROSENTASE / 100);
                
                    m_PremiKelebihan := (ROUND(m_RealisasiProduksi, 2) - recPremi.PRODUKSI_MAKSIMAL) * recPremi.TARIF_MAKSIMAL  * (recAwakKapal.PROSENTASE / 100);
                
                    ELSE
                    m_IntervalProduksi := m_RealisasiProduksi - recPremi.PRODUKSI_NORMAL;
                    m_PremiNormal := ROUND(m_IntervalProduksi, 2) * recPremi.TARIF_NORMAL * (recAwakKapal.PROSENTASE / 100);
                    m_PremiKelebihan := 0;                 
                    END IF;
           
                   m_PremiTotal := ROUND(m_PremiNormal) + ROUND(m_PremiKelebihan);
                   
                   m_PremiDiberikanKotor := m_PremiTotal * m_KaliProsentaseDocking;
                   

                   OPEN cTableHariMasukKerja(m_Bulan || m_Tahun, recAwakKapal.PEGAWAI_ID);
            
                   FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
                   CLOSE cTableHariMasukKerja;                   
                   
                   IF recAwakKapal.MASUK_KERJA = recAwakKapal.MASA_KERJA THEN
                   
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor * (recAwakKapal.MASUK_KERJA / recAwakKapal.JUMLAH_BULAN);         
                       
                       -- CUTI BESAR POTONG 4% 
                       m_PotonganCutiBesar  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.CUTI_BESAR, 0) * 4) / 100);          
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_PotonganCutiBesar;
                       
                       
                   ELSE
                    
                       m_PremiDiberikanKotor := m_PremiDiberikanKotor * (recAwakKapal.MASA_KERJA / recAwakKapal.JUMLAH_BULAN);
                                             
                       IF recAwakKapal.ALPHA >= 10 THEN
                                    
                           m_ProsentasePotongan := 100;                   
                           m_JumlahPotongan := ROUND(m_PremiDiberikanKotor * (m_ProsentasePotongan / 100));
                           m_PremiDiberikanKotor := 0;
                            
                       ELSE
                           
                           m_PotonganAlpha := m_PremiDiberikanKotor * ((NVL(recAwakKapal.ALPHA, 0) * 10) / 100);
                           m_PotonganIjin  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.IJIN, 0) * 4) / 100);
                           m_PotonganCutiBesar  := m_PremiDiberikanKotor * ((NVL(recAwakKapal.CUTI_BESAR, 0) * 4) / 100);
                           m_PotonganSakitDgnKeterangan := m_PremiDiberikanKotor * ((NVL(recAwakKapal.SAKIT_DGN_KETERANGAN, 0) * 1) / 100);
                           
                           m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_PotonganAlpha - m_PotonganIjin - m_PotonganCutiBesar - m_PotonganSakitDgnKeterangan;
                           --m_ProsentasePotongan := (recAwakKapal.MASA_KERJA_PERIODE - recAwakKapal.MASUK_KERJA) * 10;                   
                           --m_JumlahPotongan := ROUND(m_PremiDiberikanKotor * (m_ProsentasePotongan / 100));
                           --m_PremiDiberikanKotor := m_PremiDiberikanKotor - m_JumlahPotongan;
                       END IF;

                   END IF;
                    
                   m_PPH21Prosentase := recAwakKapal.POTONGAN_PPH * 100;
                           
                   /*
                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, m_PremiDiberikanKotor);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21DenganPremi;
            
                    CLOSE cTableHitungPPH21;

                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, 0);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21TanpaPremi;
            
                    CLOSE cTableHitungPPH21;

                   
                   m_PPH21 := m_PPH21DenganPremi - m_PPH21TanpaPremi;
                   
                   IF NOT NVL(m_PPH21DenganPremi, 0) = 0 THEN
                   m_PPH21Prosentase := ROUND((m_PPH21 / m_PPH21DenganPremi) * 100, 0);
                   ELSE
                   m_PPH21Prosentase := 6;
                   END IF;
                   */
                   
                    m_PPH21 := m_PremiDiberikanKotor * (m_PPH21Prosentase / 100);
                   
                   PPI.JSON.newJSONObj(json_obj);
                   
                   json_array(1):=  ROUND(m_PremiNormal); 
                   json_array(2):=  ROUND(m_PremiKelebihan); 
                   json_array(3):=  ROUND(m_PremiDiberikanKotor); 
                   json_array(4):=  ROUND(m_PPH21);                       
                   json_array(5):=  ROUND(m_PremiDiberikanKotor - m_PPH21);  
                   json_obj := PPI.JSON.addAttr(json_obj, 'PREMI', PPI.JSON.addArray(json_array));

                   PPI.JSON.closeJSONObj(json_obj);
                                                 
                  
                   EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.PREMI_KAPAL (
                               KAPAL_ID, PEGAWAI_ID, 
                               PERIODE, MASA_KERJA, MASUK_KERJA, JUMLAH_BULAN, PREMI_JSON, REALISASI_PRODUKSI, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, FAKTOR_KONVERSI, PPH, KRU_JABATAN_ID) 
                            VALUES (' || recKapal.KAPAL_ID || ', ' || recAwakKapal.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || recAwakKapal.MASA_KERJA || ', ' || NVL(recAwakKapal.MASUK_KERJA, 0) || ', ' || recAwakKapal.JUMLAH_BULAN || ', 
                                    ''' || REPLACE(PPI.JSON.JSON2String(json_obj), '''', '"') || ''', ' || ROUND(m_RealisasiProduksi, 2) || ', ' || recPremi.PRODUKSI_NORMAL || ', 
                                    ' || recPremi.PRODUKSI_MAKSIMAL || ', ' || ROUND(m_IntervalProduksi, 2) || ', ' || recPremi.TARIF_NORMAL || ', 
                                    ' || ROUND(recPremi.TARIF_MAKSIMAL * (recAwakKapal.PROSENTASE / 100)) || ', ' || recAwakKapal.PROSENTASE || ', ' || m_PPH21Prosentase || ', ' || recPremi.KRU_JABATAN_ID || ')';           

                
    
    COMMIT;
                END LOOP;


       
           END IF;
           
            
        
           END LOOP;
        
        END LOOP;  

    END LOOP;    

    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_PREMI_KHUSUS;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_PREMI_KHUSUS
         IS 

CURSOR cTableKapalPekerjaan(pPeriode IN VARCHAR2) IS

SELECT A.KAPAL_PEKERJAAN_ID, B.KAPAL_ID, TOTAL_PREMI, NVL(MESIN_DAYA, 0) * NVL(D.NAMA, 0) MESIN_DAYA, TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') PERIODE  FROM PPI_OPERASIONAL.KAPAL_PEKERJAAN A 
INNER JOIN PPI_OPERASIONAL.KAPAL_PEKERJAAN_KAPAL B ON A.KAPAL_PEKERJAAN_ID = B.KAPAL_PEKERJAAN_ID 
INNER JOIN PPI_OPERASIONAL.KAPAL C ON C.KAPAL_ID = B.KAPAL_ID
INNER JOIN PPI_OPERASIONAL.HORSE_POWER D ON C.HORSE_POWER_ID = D.HORSE_POWER_ID;

--WHERE TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') = pPeriode;

CURSOR cTableKapalPekerjaanPegawai(pKapalPekerjaanId IN INTEGER, pKapalId IN INTEGER, pPeriode IN VARCHAR2) IS
SELECT C.PEGAWAI_ID, PREMI_PORSENTASE, D.KRU_JABATAN_ID,
       CASE WHEN NVL(NPWP, 'X') = 'X' THEN E.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pPeriode, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pPeriode THEN E.JUMLAH_NPWP ELSE E.JUMLAH_TANPA_NPWP END END POTONGAN_PPH,
       F.nama,
       C.TANGGAL_MASUK, C.TANGGAL_KELUAR, A.TANGGAL_AWAL, A.TANGGAL_AKHIR,
       TO_NUMBER(NVL(C.TANGGAL_KELUAR,A.TANGGAL_AKHIR) - DECODE(TO_CHAR(C.TANGGAL_MASUK, 'MMYYYY'), pPeriode, C.TANGGAL_MASUK, A.TANGGAL_AWAL)) LAMA
FROM PPI_OPERASIONAL.KAPAL_PEKERJAAN A 
INNER JOIN PPI_OPERASIONAL.KAPAL_PEKERJAAN_KAPAL B ON A.KAPAL_PEKERJAAN_ID = B.KAPAL_PEKERJAAN_ID
INNER JOIN PPI_OPERASIONAL.PEGAWAI_KAPAL_HISTORI C ON C.KAPAL_ID = B.KAPAL_ID 
--AND A.TANGGAL_AWAL BETWEEN C.TANGGAL_MASUK AND NVL(C.TANGGAL_KELUAR, SYSDATE)
AND (DECODE(TO_CHAR(C.TANGGAL_MASUK, 'MMYYYY'), '052014', C.TANGGAL_MASUK, A.TANGGAL_AWAL) BETWEEN A.TANGGAL_AWAL AND A.TANGGAL_AKHIR OR NVL(C.TANGGAL_KELUAR, A.TANGGAL_AKHIR) BETWEEN A.TANGGAL_AWAL AND A.TANGGAL_AKHIR )
INNER JOIN PPI_OPERASIONAL.KAPAL_PEKERJAAN_KRU D ON D.KAPAL_PEKERJAAN_ID = A.KAPAL_PEKERJAAN_ID AND C.KRU_JABATAN_ID = D.KRU_JABATAN_ID
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH E ON E.JENIS_PEGAWAI_ID = PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pPeriode, C.PEGAWAI_ID) AND JENIS_PENGHASILAN = 'PREMI_KHUSUS' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
INNER JOIN PPI_SIMPEG.PEGAWAI F ON F.PEGAWAI_ID = C.PEGAWAI_ID
WHERE A.KAPAL_PEKERJAAN_ID = pKapalPekerjaanId AND C.KAPAL_ID = pKapalId
and (C.TANGGAL_KELUAR is null OR TO_CHAR(C.TANGGAL_KELUAR, 'MMYYYY') = pPeriode)
AND TO_NUMBER(NVL(C.TANGGAL_KELUAR,A.TANGGAL_AKHIR) - DECODE(TO_CHAR(C.TANGGAL_MASUK, 'MMYYYY'), pPeriode, C.TANGGAL_MASUK, A.TANGGAL_AWAL)) > 20
order by kru_jabatan_id;
/*
SELECT C.PEGAWAI_ID, PREMI_PORSENTASE, D.KRU_JABATAN_ID,
       CASE WHEN NVL(NPWP, 'X') = 'X' THEN E.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pPeriode, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pPeriode THEN E.JUMLAH_NPWP ELSE E.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM PPI_OPERASIONAL.KAPAL_PEKERJAAN A 
INNER JOIN PPI_OPERASIONAL.KAPAL_PEKERJAAN_KAPAL B ON A.KAPAL_PEKERJAAN_ID = B.KAPAL_PEKERJAAN_ID
INNER JOIN PPI_OPERASIONAL.PEGAWAI_KAPAL_HISTORI C ON C.KAPAL_ID = B.KAPAL_ID AND A.TANGGAL_AWAL BETWEEN C.TANGGAL_MASUK AND NVL(C.TANGGAL_KELUAR, SYSDATE)
INNER JOIN PPI_OPERASIONAL.KAPAL_PEKERJAAN_KRU D ON D.KAPAL_PEKERJAAN_ID = A.KAPAL_PEKERJAAN_ID AND C.KRU_JABATAN_ID = D.KRU_JABATAN_ID
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH E ON E.JENIS_PEGAWAI_ID = PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pPeriode, C.PEGAWAI_ID) AND JENIS_PENGHASILAN = 'PREMI_KHUSUS' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
INNER JOIN PPI_SIMPEG.PEGAWAI F ON F.PEGAWAI_ID = C.PEGAWAI_ID
WHERE A.KAPAL_PEKERJAAN_ID = pKapalPekerjaanId AND C.KAPAL_ID = pKapalId;
*/
CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;
    
m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_JumlahDibayarkan INTEGER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE PPI_GAJI.PREMI_KAPAL_PEKERJAAN;
           -- WHERE PERIODE = m_BulanProses; 

    FOR recKapalPekerjaan IN cTableKapalPekerjaan(m_BulanProses) LOOP        
        
        FOR recKapalPekerjaanPegawai IN cTableKapalPekerjaanPegawai(recKapalPekerjaan.KAPAL_PEKERJAAN_ID, recKapalPekerjaan.KAPAL_ID, recKapalPekerjaan.PERIODE) LOOP

            m_Jumlah := ROUND(recKapalPekerjaan.TOTAL_PREMI * (recKapalPekerjaanPegawai.PREMI_PORSENTASE / 100));
            m_ProsentasePotongan := recKapalPekerjaanPegawai.POTONGAN_PPH * 100;
            m_JumlahPotongan := ROUND(m_Jumlah * (m_ProsentasePotongan / 100));
            m_JumlahDibayarkan := m_Jumlah - m_JumlahPotongan;

            EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.PREMI_KAPAL_PEKERJAAN (
                                   KAPAL_PEKERJAAN_ID, PEGAWAI_ID, JUMLAH, 
                                   PROSENTASE_POTONGAN, JUMLAH_POTONGAN, DIBAYARKAN, PERIODE, KRU_JABATAN_ID, MESIN_DAYA, PROSENTASE) 
                                VALUES (' || recKapalPekerjaan.KAPAL_PEKERJAAN_ID || ', ' || recKapalPekerjaanPegawai.PEGAWAI_ID || ', ' || m_Jumlah || ',
                                    ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ' || m_JumlahDibayarkan || ', ''' || recKapalPekerjaan.PERIODE || ''', ' || recKapalPekerjaanPegawai.KRU_JABATAN_ID || ', ' || recKapalPekerjaan.MESIN_DAYA || ', ' || recKapalPekerjaanPegawai.PREMI_PORSENTASE || ')';  
                
        END LOOP;
        

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_PREMI_OLD;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_PREMI_OLD
         IS 

CURSOR cTableKapal IS
SELECT KAPAL_ID, KAPAL_JENIS_ID, NAMA FROM IMASYS_OPERASIONAL.KAPAL;

CURSOR cTableAwakKapal(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER, pKruJabatanId IN VARCHAR2) IS

SELECT 
PEGAWAI_KAPAL_HISTORI_ID, B.JENIS_PEGAWAI_ID, KAPAL_ID, A.PEGAWAI_ID, 
   (SELECT PROSENTASE FROM IMASYS_GAJI.GAJI_KONDISI_JENIS_PEGAWAI X WHERE X.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND GAJI_KONDISI_ID = '09') PROSENTASE,
   KRU_JABATAN_ID, TANGGAL_MASUK, TANGGAL_KELUAR,
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   TANGGAL_KELUAR - TANGGAL_MASUK + 1
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TANGGAL_MASUK + 1
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   TANGGAL_KELUAR -  TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   ELSE
   TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') || pBulan || pTahun,'DDMMYYYY') - TO_DATE('01' || pBulan || pTahun,'DDMMYYYY') + 1
   END MASA_KERJA,
   TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD') JUMLAH_BULAN, 
   CASE 
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%' OR KEHADIRAN = 'SDK' OR KEHADIRAN LIKE 'C%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun OR TANGGAL_KELUAR IS NULL)  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%' OR KEHADIRAN = 'SDK' OR KEHADIRAN LIKE 'C%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulan || pTahun  THEN
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%' OR KEHADIRAN = 'SDK' OR KEHADIRAN LIKE 'C%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   ELSE
   (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulan || pTahun,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulan || pTahun AND (KEHADIRAN LIKE 'H%' OR KEHADIRAN = 'SDK' OR KEHADIRAN LIKE 'C%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
   END MASUK_KERJA,      
   CASE WHEN NVL((SELECT NPWP FROM IMASYS_SIMPEG.PEGAWAI X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID), 'X') = 'X' THEN C.JUMLAH_TANPA_NPWP ELSE C.JUMLAH_NPWP END POTONGAN_PPH
FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI A INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID  
AND (TO_DATE('01' || pBulan || pTahun, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE)  OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulan || pTahun)
INNER JOIN IMASYS_GAJI.PPH_PARAMETER C ON B.JENIS_PEGAWAI_ID = C.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'PREMI'
WHERE KAPAL_ID = pKapalId AND  KRU_JABATAN_ID = pKruJabatanId;


CURSOR cTablePremi(pKapalJenisId IN INTEGER, pLokasiId IN VARCHAR2) IS

SELECT 
DISTINCT KRU_JABATAN_ID, 
   LOKASI_ID, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, 
   INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, 
   KETERANGAN
FROM IMASYS_GAJI.PREMI WHERE KAPAL_JENIS_ID = pKapalJenisId AND LOKASI_ID = pLokasiId;

CURSOR cTableKapalProduksi(pBulan IN VARCHAR2, pTahun IN VARCHAR2, pKapalId IN INTEGER) IS
SELECT 
KAPAL_PRODUKSI_ID, KAPAL_ID, LOKASI_ID, 
   PERIODE, TANGGAL_AWAL, TANGGAL_AKHIR, 
   (REALISASI_PRODUKSI + (REALISASI_PRODUKSI_MENIT / 60)) REALISASI_PRODUKSI
FROM IMASYS_OPERASIONAL.KAPAL_PRODUKSI WHERE KAPAL_ID = pKapalId AND  pBulan BETWEEN TO_CHAR(TANGGAL_AWAL, 'MM') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'MM'), pBulan) 
AND pTahun BETWEEN TO_CHAR(TANGGAL_AWAL, 'YYYY') AND NVL(TO_CHAR(TANGGAL_AKHIR, 'YYYY'), pTahun);

/*
CURSOR cTableHitungPPH21(pPegawaiId IN INTEGER, pPeriode IN VARCHAR, pPremi IN NUMBER) IS
SELECT IMASYS_GAJI.HITUNG_PPH21_PER_TAHUN (GAJI_POKOK,
                                           MERIT_PMS,
                                           TUNJANGAN_JABATAN,
                                           TPP_PMS,
                                           TUNJANGAN_PERBANTUAN,
                                           JUMLAH_TRANSPORTASI,
                                           JUMLAH_UANG_MAKAN,
                                           pPremi,
                                           0,
                                           IURAN_TASPEN,
                                           DANA_PENSIUN,
                                           STATUS_KELUARGA,
                                           DECODE (HARI_KERJA, '7H', 30, 22),
                                           JENIS_PEGAWAI_ID
                                          ) JUMLAH
FROM IMASYS_GAJI.GAJI_AWAL_BULAN_REPORT
WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;
*/

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;
    
json_obj           IMASYS.json.JSONStructObj; 
json_array              IMASYS.json.JSONArray;     

m_PremiNormal NUMBER;
m_PremiKelebihan NUMBER;
m_PremiTotal NUMBER;
m_PegawaiId INTEGER;
m_PremiDiberikanKotor NUMBER;
m_PPH21 NUMBER;
m_BulanProses VARCHAR2(6);
m_Bulan VARCHAR2(2);
m_Tahun VARCHAR2(4);
m_PPH21DenganPremi NUMBER := 0;
m_PPH21TanpaPremi NUMBER := 0;
m_PPH21Prosentase NUMBER := 0;

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

m_Bulan := SUBSTR(m_BulanProses, 1, 2);
m_Tahun := SUBSTR(m_BulanProses, 3, 4);

DELETE IMASYS_GAJI.PREMI_KAPAL 
            WHERE PERIODE = m_BulanProses; 



    FOR recKapal IN cTableKapal LOOP        
            
        FOR recKapalProduksi IN cTableKapalProduksi(m_Bulan, m_Tahun, recKapal.KAPAL_ID) LOOP  

           -- MENGARAH KE PREMI PER JABATAN
           FOR recPremi IN cTablePremi(recKapal.KAPAL_JENIS_ID, recKapalProduksi.LOKASI_ID) LOOP   
           
           IF recKapalProduksi.REALISASI_PRODUKSI >= recPremi.PRODUKSI_NORMAL THEN
                                      
                
 
                
                m_PremiNormal := recPremi.INTERVAL_PRODUKSI * recPremi.TARIF_NORMAL;
                
                IF recKapalProduksi.REALISASI_PRODUKSI > recPremi.PRODUKSI_MAKSIMAL THEN
                
                m_PremiKelebihan := (ROUND(recKapalProduksi.REALISASI_PRODUKSI, 2) - recPremi.PRODUKSI_MAKSIMAL) * recPremi.TARIF_MAKSIMAL; 
                
                ELSE
                
                m_PremiKelebihan := 0;                 
                END IF;
           
                m_PremiTotal := ROUND(m_PremiNormal) + ROUND(m_PremiKelebihan);
                


                FOR recAwakKapal IN cTableAwakKapal(m_Bulan, m_Tahun, recKapal.KAPAL_ID, recPremi.KRU_JABATAN_ID) LOOP
                

                   m_PPH21DenganPremi := 0;
                   m_PPH21TanpaPremi  := 0;
                   m_PremiDiberikanKotor := m_PremiTotal * (recAwakKapal.MASUK_KERJA / recAwakKapal.JUMLAH_BULAN) * (recAwakKapal.PROSENTASE / 100);
                    
                   m_PPH21Prosentase := recAwakKapal.POTONGAN_PPH * 100;
                           
                   /*
                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, m_PremiDiberikanKotor);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21DenganPremi;
            
                    CLOSE cTableHitungPPH21;

                    OPEN cTableHitungPPH21(recAwakKapal.PEGAWAI_ID, m_BulanProses, 0);
            
                    FETCH cTableHitungPPH21 INTO m_PPH21TanpaPremi;
            
                    CLOSE cTableHitungPPH21;

                   
                   m_PPH21 := m_PPH21DenganPremi - m_PPH21TanpaPremi;
                   
                   IF NOT NVL(m_PPH21DenganPremi, 0) = 0 THEN
                   m_PPH21Prosentase := ROUND((m_PPH21 / m_PPH21DenganPremi) * 100, 0);
                   ELSE
                   m_PPH21Prosentase := 6;
                   END IF;
                   */
                   
                    m_PPH21 := m_PremiDiberikanKotor * (m_PPH21Prosentase / 100);
                   
                   IMASYS.JSON.newJSONObj(json_obj);
                   
                   json_array(1):=  ROUND(m_PremiNormal); 
                   json_array(2):=  ROUND(m_PremiKelebihan); 
                   json_array(3):=  ROUND(m_PremiDiberikanKotor); 
                   json_array(4):=  ROUND(m_PPH21);                       
                   json_array(5):=  ROUND(m_PremiDiberikanKotor - m_PPH21);  
                   json_obj := IMASYS.JSON.addAttr(json_obj, 'PREMI', IMASYS.JSON.addArray(json_array));

                   IMASYS.JSON.closeJSONObj(json_obj);
                                                 
                  
                   EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.PREMI_KAPAL (
                               KAPAL_ID, PEGAWAI_ID, 
                               PERIODE, MASA_KERJA, MASUK_KERJA, JUMLAH_BULAN, PREMI_JSON, REALISASI_PRODUKSI, PRODUKSI_NORMAL, PRODUKSI_MAKSIMAL, INTERVAL_PRODUKSI, TARIF_NORMAL, TARIF_MAKSIMAL, FAKTOR_KONVERSI, PPH) 
                            VALUES (' || recKapal.KAPAL_ID || ', ' || recAwakKapal.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || recAwakKapal.MASA_KERJA || ', ' || NVL(recAwakKapal.MASUK_KERJA, 0) || ', ' || recAwakKapal.JUMLAH_BULAN || ', 
                                    ''' || REPLACE(IMASYS.JSON.JSON2String(json_obj), '''', '"') || ''', ' || ROUND(recKapalProduksi.REALISASI_PRODUKSI, 2) || ', ' || recPremi.PRODUKSI_NORMAL || ', 
                                    ' || recPremi.PRODUKSI_MAKSIMAL || ', ' || ROUND(recPremi.INTERVAL_PRODUKSI, 2) || ', ' || recPremi.TARIF_NORMAL || ', 
                                    ' || recPremi.TARIF_MAKSIMAL || ', ' || recAwakKapal.PROSENTASE || ', ' || m_PPH21Prosentase || ')';           

                
    
    COMMIT;
                END LOOP;


       
           END IF;
           
            
        
           END LOOP;
        
        END LOOP;  

    END LOOP;    

    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_THR;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_THR
         IS 

/*  SETUP PEGAWAI PENERIMA THR */
CURSOR cTablePegawai IS
    SELECT A.PEGAWAI_ID, PROSENTASE, KALI, D.JUMLAH, B.JENIS_PEGAWAI_ID, CASE WHEN NVL(NPWP, 'X') = 'X' THEN F.JUMLAH_TANPA_NPWP ELSE  F.JUMLAH_NPWP END POTONGAN_PPH FROM PPI_SIMPEG.PEGAWAI A 
            INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
            INNER JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
            INNER JOIN PPI_GAJI.GAJI_KONDISI_JENIS_PEGAWAI D ON D.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND D.KELOMPOK = C.KELOMPOK AND GAJI_KONDISI_ID = 10
            INNER JOIN PPI_GAJI.PERHITUNGAN_PPH F ON F.JENIS_PEGAWAI_ID = B.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'THR' AND JENIS_PERHITUNGAN = 'PROSENTASE'
    WHERE STATUS_PEGAWAI_ID = 1;

/*  SETUP GAJI KONDISI KE BESARAN JUMLAH */

CURSOR cTabelJumlahPenghasilan(pPegawaiId IN INTEGER, pJumlah IN VARCHAR2) IS 
    SELECT SUM(JUMLAH) JUMLAH FROM
    (
    SELECT '010' || ROWNUM KODE, 
           CASE 
                WHEN PIVOT = 1 THEN JUMLAH_PENGHASILAN
                WHEN PIVOT = 2 THEN JUMLAH_UANG_KEHADIRAN
                WHEN PIVOT = 3 THEN JUMLAH_TRANSPORTASI
                WHEN PIVOT = 4 THEN JUMLAH_UANG_MAKAN
                WHEN PIVOT = 5 THEN JUMLAH_TUNJANGAN_JABATAN
                WHEN PIVOT = 6 THEN JUMLAH_TPP
                WHEN PIVOT = 7 THEN JUMLAH_TUNJANGAN_SELISIH
                WHEN PIVOT = 8 THEN JUMLAH_INSENTIF
           END JUMLAH
    FROM (SELECT 
                NVL(JUMLAH_PENGHASILAN * (PROSENTASE_PENGHASILAN / 100), 0) JUMLAH_PENGHASILAN, 
                NVL(JUMLAH_UANG_KEHADIRAN * (PROSENTASE_UANG_KEHADIRAN / 100), 0) JUMLAH_UANG_KEHADIRAN, 
                NVL(JUMLAH_TRANSPORTASI * (PROSENTASE_TRANSPORTASI / 100), 0) JUMLAH_TRANSPORTASI,  
                NVL(JUMLAH_UANG_MAKAN * (PROSENTASE_UANG_MAKAN / 100), 0) JUMLAH_UANG_MAKAN, 
                NVL(JUMLAH_TUNJANGAN_JABATAN * (PROSENTASE_TUNJANGAN_JABATAN / 100), 0) JUMLAH_TUNJANGAN_JABATAN, 
                NVL(JUMLAH_TPP * (PROSENTASE_TPP / 100), 0) JUMLAH_TPP, 
                TO_NUMBER(NVL(JUMLAH_TUNJANGAN_SELISIH, 0)) JUMLAH_TUNJANGAN_SELISIH, 
                NVL(JUMLAH_INSENTIF * (PROSENTASE_INSENTIF / 100), 0) JUMLAH_INSENTIF
                FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR WHERE PEGAWAI_ID = pPegawaiId), 
                   (SELECT rownum pivot from dual
                    CONNECT BY LEVEL <=8) 
    ) WHERE INSTR(pJumlah, KODE) > 0;

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TAHUN ORDER BY GAJI_PERIODE_TAHUN_ID DESC;

m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_JumlahPPH NUMBER;
m_JumlahDibayarkan INTEGER;
m_PPH21Prosentase NUMBER := 0;
m_Query VARCHAR2(1000);

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE PPI_GAJI.TUNJANGAN_HARI_RAYA 
            WHERE PERIODE = m_BulanProses; 

        FOR recPegawai IN cTablePegawai LOOP        

        
        OPEN cTabelJumlahPenghasilan(recPegawai.PEGAWAI_ID, recPegawai.JUMLAH);
            
        FETCH cTabelJumlahPenghasilan INTO m_Jumlah;
            
        CLOSE cTabelJumlahPenghasilan;

        
        m_Jumlah := m_Jumlah * NVL(recPegawai.KALI, 0) * (NVL(recPegawai.PROSENTASE, 0) / 100);
        m_JumlahPPH := m_Jumlah * NVL(recPegawai.POTONGAN_PPH, 0);
        m_PPH21Prosentase := NVL(recPegawai.POTONGAN_PPH, 0) * 100;        

              
        EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.TUNJANGAN_HARI_RAYA (
                           PEGAWAI_ID, PERIODE, 
                           JUMLAH, JUMLAH_POTONGAN, PROSENTASE_POTONGAN, 
                           JENIS_PEGAWAI_ID)
        VALUES (' || recPegawai.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || ROUND(NVL(m_Jumlah, 0)) || ', ' || ROUND(NVL(m_JumlahPPH, 0)) || ', ' || NVL(m_PPH21Prosentase, 0) || ', ' || recPegawai.JENIS_PEGAWAI_ID || ')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||m_Query);
    END;
/


DROP PROCEDURE PROSES_HITUNG_THR_V2;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_THR_V2(PERIODE_THR_LALU VARCHAR2)
         IS 

CURSOR cTablehHadir(pPeriode IN VARCHAR2) IS
    SELECT HADIR FROM (
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 0), 'MMYYYY') PERIODE, 12 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 1), 'MMYYYY') PERIODE, 11 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 2), 'MMYYYY') PERIODE, 10 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 3), 'MMYYYY') PERIODE, 9 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 4), 'MMYYYY') PERIODE, 8 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 5), 'MMYYYY') PERIODE, 7 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 6), 'MMYYYY') PERIODE, 6 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 7), 'MMYYYY') PERIODE, 5 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 8), 'MMYYYY') PERIODE, 4 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 9), 'MMYYYY') PERIODE, 3 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 10), 'MMYYYY') PERIODE, 2 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 11), 'MMYYYY') PERIODE, 1 HADIR FROM DUAL
    UNION ALL
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 12), 'MMYYYY') PERIODE, 0 HADIR FROM DUAL
    )
    WHERE PERIODE = pPeriode;

CURSOR cTablePegawai(pPeriodeAwal IN VARCHAR2) IS
    SELECT A.PEGAWAI_ID, A.nama, nvl(a.kapal_id,'') kapal_id, DECODE(KAPAL_ID, NULL, '', DEPARTEMEN) NAMA_KAPAL, JUMLAH_GAJI_KOTOR + UANG_TRANSPORT + UANG_MAKAN + UANG_INSENTIF - POTONGAN_PPH21 JUMLAH, POTONGAN_PPH21 POTONGAN, TMT_JENIS_PEGAWAI, PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(TO_CHAR(SYSDATE, 'MMYYYY'), A.PEGAWAI_ID) JENIS_PEGAWAI_ID,
           (SELECT COUNT(X.PEGAWAI_ID) FROM PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID) JUMLAH_PERGANTIAN, C.STATUS_PEGAWAI_ID,
           CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pPeriodeAwal, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pPeriodeAwal THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
     FROM PPI_GAJI.GAJI_AWAL_BULAN_REPORT A 
    INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_AWAL B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND NOT B.JENIS_PEGAWAI_ID = 7
    INNER JOIN PPI_SIMPEG.PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID
    INNER JOIN PPI_GAJI.PERHITUNGAN_PPH I ON PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pPeriodeAwal, A.PEGAWAI_ID) = I.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'THR' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND A.KELAS IN (SELECT REGEXP_SUBSTR(I.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(I.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
    WHERE ((I.JENIS_PEGAWAI_ID IN (2,6,7) AND PERIODE = TO_CHAR(ADD_MONTHS(TO_DATE(pPeriodeAwal, 'MMYYYY'), 1), 'MMYYYY')) OR 
    (A.PEGAWAI_ID <> 1394 AND I.JENIS_PEGAWAI_ID IN (1,3,5,12) AND PERIODE = pPeriodeAwal) OR
    (A.PEGAWAI_ID = 1394 AND A.PERIODE = TO_CHAR(ADD_MONTHS(TO_DATE(pPeriodeAwal, 'MMYYYY'), -1), 'MMYYYY'))
    )
    AND (C.STATUS_PEGAWAI_ID <> 6 OR (C.STATUS_PEGAWAI_ID = 6 AND TRUNC(C.TGL_NON_AKTIF) > TRUNC(ADD_MONTHS(TO_DATE(pPeriodeAwal, 'MMYYYY'), 1))));

CURSOR cTableGaji(pPegawaiId IN VARCHAR2, pPeriode IN VARCHAR2) IS
    SELECT JUMLAH_GAJI_KOTOR - POTONGAN_PPH21 JUMLAH
     FROM PPI_GAJI.GAJI_AWAL_BULAN_REPORT A WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;

CURSOR cTablePotongan(pPegawaiId IN VARCHAR2, pPeriode IN VARCHAR2) IS
    SELECT POTONGAN_PPH21 POTONGAN
     FROM PPI_GAJI.GAJI_AWAL_BULAN_REPORT A WHERE PEGAWAI_ID = pPegawaiId AND PERIODE = pPeriode;


CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TAHUN ORDER BY GAJI_PERIODE_TAHUN_ID DESC;

CURSOR cTablePeriodeGajiAwal IS
    SELECT TO_CHAR(MAX(TO_DATE(PERIODE, 'MMYYYY')), 'MMYYYY') PERIODE FROM PPI_GAJI.PROSES_GAJI_LOCK WHERE JENIS_PROSES = 'GAJI_PERBANTUAN_ORGANIK';

CURSOR cTablePeriodeGajiAkhir IS
    SELECT TO_CHAR(MAX(TO_DATE(PERIODE, 'MMYYYY')), 'MMYYYY') PERIODE FROM PPI_GAJI.PROSES_GAJI_LOCK WHERE JENIS_PROSES = 'GAJI_CAPEG';

CURSOR cTableJenisPegawai(pPegawaiId IN INTEGER) IS
SELECT TMT_JENIS_PEGAWAI FROM (
    SELECT TMT_JENIS_PEGAWAI FROM PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI WHERE 
    (TMT_JENIS_PEGAWAI BETWEEN TO_DATE(PERIODE_THR_LALU, 'MMYYYY') AND ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 12) OR TMT_JENIS_PEGAWAI < TO_DATE(PERIODE_THR_LALU, 'MMYYYY')) 
    AND PEGAWAI_ID = pPegawaiId 
    --AND NOT JENIS_PEGAWAI_ID = 4 
    ORDER BY TMT_JENIS_PEGAWAI ASC) WHERE ROWNUM=1;

m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_PeriodeGajiAwal VARCHAR2(6);
m_PeriodeGajiAkhir VARCHAR2(6);
m_JumlahPPH NUMBER;
m_JumlahDibayarkan INTEGER;
m_PPH21Prosentase NUMBER := 0;
m_Query VARCHAR2(1000);
m_Hadir NUMBER;
m_HadirPengurang NUMBER;
m_Gaji NUMBER;
m_Potongan NUMBER;
m_TMT DATE;

aQuery varchar2(2000);

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

/*
OPEN cTablePeriodeGajiAwal();
            
FETCH cTablePeriodeGajiAwal INTO m_PeriodeGajiAwal;
            
CLOSE cTablePeriodeGajiAwal;

OPEN cTablePeriodeGajiAkhir();
            
FETCH cTablePeriodeGajiAkhir INTO m_PeriodeGajiAkhir;
            
CLOSE cTablePeriodeGajiAkhir;
*/

DELETE PPI_GAJI.TUNJANGAN_HARI_RAYA 
            WHERE PERIODE = m_BulanProses; 

    FOR recPegawai IN cTablePegawai(TO_CHAR(ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 11), 'MMYYYY')) LOOP        
        
        m_Hadir := 0;
        -- CEK JENIS PEGAWAI        
        IF recPegawai.JUMLAH_PERGANTIAN = 1 THEN
        
        
            IF recPegawai.TMT_JENIS_PEGAWAI < TO_DATE(PERIODE_THR_LALU, 'MMYYYY') THEN
        
                m_Hadir := 12;
        
            ELSIF recPegawai.TMT_JENIS_PEGAWAI > ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 11) THEN
        
                m_Hadir := 0;
            
            ELSE

                OPEN cTablehHadir(TO_CHAR(recPegawai.TMT_JENIS_PEGAWAI, 'MMYYYY'));
            
                FETCH cTablehHadir INTO m_Hadir;
            
                CLOSE cTablehHadir;        
            
        
            END IF; 
        
            -- FORCE FULL 12 APABILA JENIS_PEGAWAI_ID = PERBANTUAN
            IF recPegawai.JENIS_PEGAWAI_ID = 2 OR recPegawai.PEGAWAI_ID = 1495 THEN

                m_Hadir := 12;
            
            END IF;
    
            -- FORCE FULL 12 APABILA STATUS_PEGAWAI = MPP
            IF recPegawai.STATUS_PEGAWAI_ID = 5 THEN

                m_Hadir := 12;
            
            END IF;
            
            
        
            m_Jumlah := recPegawai.JUMLAH * (m_Hadir / 12);
            m_JumlahPPH := m_Jumlah * recPegawai.POTONGAN_PPH;
            m_PPH21Prosentase := recPegawai.POTONGAN_PPH;     
        
        ELSE

            m_HadirPengurang := 0;
            m_Jumlah := 0;
            m_JumlahPPH := 0;
            m_TMT := NULL;
            
            FOR recJenisPegawai IN cTableJenisPegawai(recPegawai.PEGAWAI_ID) LOOP      

                IF recJenisPegawai.TMT_JENIS_PEGAWAI < TO_DATE(PERIODE_THR_LALU, 'MMYYYY') THEN
        
                    m_Hadir := 12;
        
                ELSIF recJenisPegawai.TMT_JENIS_PEGAWAI > ADD_MONTHS(TO_DATE(PERIODE_THR_LALU, 'MMYYYY'), 11) THEN
        
                    m_Hadir := 0;
            
                ELSE

                    OPEN cTablehHadir(TO_CHAR(recJenisPegawai.TMT_JENIS_PEGAWAI, 'MMYYYY'));
            
                    FETCH cTablehHadir INTO m_Hadir;
            
                    CLOSE cTablehHadir;        
            
        
                END IF; 

                OPEN cTableGaji(recPegawai.PEGAWAI_ID, TO_CHAR(NVL(m_TMT, recJenisPegawai.TMT_JENIS_PEGAWAI), 'MMYYYY'));
            
                FETCH cTableGaji INTO m_Gaji;
            
                CLOSE cTableGaji;

                OPEN cTablePotongan(recPegawai.PEGAWAI_ID, TO_CHAR(NVL(m_TMT, recJenisPegawai.TMT_JENIS_PEGAWAI), 'MMYYYY'));
            
                FETCH cTablePotongan INTO m_Potongan;
            
                CLOSE cTablePotongan;
                                
                -- APABILA PROPOSIONAL BERDASARKAN JENIS PEGAWAI
                --m_Jumlah := m_Jumlah + m_Gaji * ((m_Hadir - m_HadirPengurang) / 12);
                --m_JumlahPPH := m_JumlahPPH + m_Potongan * ((m_Hadir - m_HadirPengurang) / 12);
                --m_PPH21Prosentase := 0;        
                                       
                
                m_HadirPengurang := m_Hadir;
                m_TMT := ADD_MONTHS(recJenisPegawai.TMT_JENIS_PEGAWAI, -1);
                        
            END LOOP;
            
           -- FORCE FULL 12 APABILA STATUS_PEGAWAI = MPP
            IF recPegawai.STATUS_PEGAWAI_ID = 5 THEN

                m_Hadir := 12;
            
            END IF;
                        
            m_Jumlah := recPegawai.JUMLAH * (m_Hadir / 12);
            m_JumlahPPH := m_Jumlah * recPegawai.POTONGAN_PPH;
            m_PPH21Prosentase := recPegawai.POTONGAN_PPH;                    
                
        END IF;
              
        aQuery := 'INSERT INTO PPI_GAJI.TUNJANGAN_HARI_RAYA (
                           PEGAWAI_ID, PERIODE, 
                           JUMLAH, JUMLAH_POTONGAN, PROSENTASE_POTONGAN, 
                           JENIS_PEGAWAI_ID, PERIODE_THR_TAHUN_LALU, HADIR, MASUK_KERJA,
                           KAPAL_ID, KAPAL_NAMA)
        VALUES (' || recPegawai.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || ROUND(NVL(m_Jumlah, 0)) || ', ' || 
        ROUND(NVL(m_JumlahPPH, 0)) || ', ' || NVL(m_PPH21Prosentase, 0) || ', ' || recPegawai.JENIS_PEGAWAI_ID || ', ''' || 
        PERIODE_THR_LALU || ''', ' || m_Hadir || ', ''' || TO_CHAR(recPegawai.TMT_JENIS_PEGAWAI, 'MMYYYY') || ''',''' ||
         recPegawai.KAPAL_ID || ''',''' || recPegawai.NAMA_KAPAL || ''')';           
        
        DBMS_OUTPUT.put_line (aQuery); 
        EXECUTE IMMEDIATE aQuery;
    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||m_Query);
    END;
/


DROP PROCEDURE PROSES_HITUNG_UANG_KEHADIRAN;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_UANG_KEHADIRAN(pJenisPegawaiId IN VARCHAR2)
         IS 

CURSOR cTablePegawaiKehadiran IS
SELECT A.PEGAWAI_ID, NRP, A.NAMA, JUMLAH_TRANSPORTASI, PROSENTASE_TRANSPORTASI, CASE WHEN NVL(E.KELOMPOK, 'X') = 'X' THEN '5H' ELSE E.KELOMPOK END KELOMPOK FROM PPI_SIMPEG.PEGAWAI A 
INNER JOIN PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
WHERE 1 = 1 AND C.JENIS_PEGAWAI_ID = pJenisPegawaiId AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0;

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT PPI_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(PPI_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;
    
m_Jumlah NUMBER;
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_BulanProses VARCHAR2(6);
m_HariKerja INTEGER;
m_MasukKerja INTEGER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE PPI_GAJI.UANG_MAKAN_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');

    FOR recPegawaiKehadiran IN cTablePegawaiKehadiran LOOP        
        
        IF recPegawaiKehadiran.KELOMPOK = '5H' THEN
            m_HariKerja :=  m_HariKerjaNormal;  
        ELSE
            m_HariKerja :=  m_HariKerjaFull;          
        END IF;
        
        m_MasukKerja := m_HariKerja;
        m_Jumlah := m_MasukKerja * recPegawaiKehadiran.JUMLAH_TRANSPORTASI * (recPegawaiKehadiran.PROSENTASE_TRANSPORTASI / 100);
        m_Jumlah := ROUND(m_Jumlah);
        
        EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.UANG_MAKAN_BANTUAN (
           PEGAWAI_ID, PERIODE, HARI_KERJA, 
           MASUK_KERJA, JUMLAH) 
        VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || m_MasukKerja || ', ' || m_Jumlah || ')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_UANG_MAKAN;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_UANG_MAKAN
         IS 

CURSOR cTablePegawaiKehadiran(pBulanProses IN VARCHAR2) IS
select A.*,PPI_ABSENSI.C_TOTAL_ABSEN_BULAN2(pBulanProses, A.PEGAWAI_ID, 'MAKAN') MASUK_KERJA2,
row_number() over ( partition by PEGAWAI_ID order by PEGAWAI_ID) as ROW_NUMBER
 from (
SELECT A.PEGAWAI_ID, A.NRP, A.NPWP, A.NAMA, C.JENIS_PEGAWAI_ID, 
        CASE WHEN NVL(JUMLAH_UANG_MAKAN, 0) = 0 THEN 
                TO_NUMBER((SELECT NILAI FROM PPI.SETTING_APLIKASI WHERE KODE = DECODE(K.LOKASI_ID, '01','UANG_MAKAN_KSO_TGPERAK','UANG_MAKAN_KSO')))
             ELSE 
                TO_NUMBER(JUMLAH_UANG_MAKAN)
        END 
        JUMLAH_UANG_MAKAN, 
        CASE WHEN NVL(JUMLAH_UANG_MAKAN, 0) = 0 THEN 
               100
             ELSE 
                PROSENTASE_UANG_MAKAN
        END         
        PROSENTASE_UANG_MAKAN, CASE WHEN NVL(E.KELOMPOK, 'X') = 'X' THEN '5H' ELSE E.KELOMPOK END KELOMPOK,
        H.NAMA KAPAL, G.KRU_JABATAN_ID, G.NAMA JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH,
        NVL(TOTAL_DOCKING, 0) TOTAL_DOCKING,
       CASE 
       WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses THEN
       (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses OR TANGGAL_KELUAR IS NULL)  THEN
       (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulanProses,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses  THEN
       (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       WHEN TANGGAL_MASUK IS NULL AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses THEN       
       (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       ELSE
       (SELECT COUNT(KEHADIRAN) FROM PPI_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulanProses,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       END MASUK_KERJA, 
       TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) KELUAR, TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) MASUK                   
FROM PPI_SIMPEG.PEGAWAI A 
LEFT JOIN PPI_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanProses, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
INNER JOIN PPI_OPERASIONAL.PEGAWAI_KAPAL_HISTORI F ON A.PEGAWAI_ID = F.PEGAWAI_ID AND (TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses  OR TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses )
LEFT JOIN PPI_OPERASIONAL.KRU_JABATAN G ON F.KRU_JABATAN_ID = G.KRU_JABATAN_ID
LEFT JOIN PPI_OPERASIONAL.KAPAL H ON F.KAPAL_ID = H.KAPAL_ID
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH I ON I.JENIS_PEGAWAI_ID = C.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'UANG_MAKAN' AND JENIS_PERHITUNGAN = 'PROSENTASE'                                                                                         
LEFT JOIN (
SELECT KAPAL_ID, SUM(JUMLAH) TOTAL_DOCKING FROM 
(
SELECT KAPAL_ID, TANGGAL_AWAL, TANGGAL_AKHIR, 
       CASE WHEN TO_CHAR(TANGGAL_AWAL, 'MMYYYY') = TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') THEN TRUNC(TANGGAL_AKHIR - TANGGAL_AWAL) 
            WHEN TO_CHAR(TANGGAL_AWAL, 'MMYYYY') = pBulanProses AND NOT TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') = pBulanProses THEN TRUNC(LAST_DAY(TO_DATE(pBulanProses, 'MMYYYY')) - TANGGAL_AWAL) 
            WHEN TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') = pBulanProses AND NOT TO_CHAR(TANGGAL_AWAL, 'MMYYYY') = pBulanProses  THEN TRUNC(TANGGAL_AKHIR - TO_DATE(pBulanProses, 'MMYYYY'))
            ELSE TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(pBulanProses, 'MMYYYY')), 'DD'))
       END JUMLAH  FROM PPI_OPERASIONAL.KAPAL_DOCKING
WHERE TO_CHAR(TANGGAL_AWAL, 'MMYYYY') = pBulanProses OR TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') = pBulanProses OR TO_DATE(pBulanProses, 'MMYYYY') BETWEEN TANGGAL_AWAL AND TANGGAL_AKHIR
) GROUP BY KAPAL_ID
) J ON H.KAPAL_ID = J.KAPAL_ID
LEFT JOIN PPI_OPERASIONAL.KAPAL_LOKASI_TERAKHIR K ON F.KAPAL_ID = K.KAPAL_ID
WHERE 1 = 1 AND (NOT NVL(JUMLAH_UANG_MAKAN, 0) = 0 OR (C.JENIS_PEGAWAI_ID = 4 AND F.KAPAL_ID IS NOT NULL)) AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
ORDER BY A.PEGAWAI_ID, TANGGAL_MASUK DESC ) A WHERE MASUK_KERJA IS NOT NULL;

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT PPI_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(PPI_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableHariDLK(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    DLK JUMLAH_H
FROM PPI_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
 
m_Jumlah NUMBER;
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_BulanProses VARCHAR2(6);
m_HariKerja INTEGER;
m_MasukKerja NUMBER(4,2);
m_UangMakan NUMBER;
m_ProsentasePotongan NUMBER;
m_JumlahPotongan NUMBER;
m_Query VARCHAR2(2000);
m_Jumlah1 NUMBER;
m_Jumlah2 NUMBER;
m_MasukTidakDocking INTEGER;
m_PegawaiId INTEGER;
m_HariKeluar INTEGER;
m_PengurangHariSama INTEGER;
m_TempMasukKerja INTEGER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;


DELETE PPI_GAJI.UANG_MAKAN_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');

m_PegawaiId := 0;
m_TempMasukKerja := 0;

    FOR recPegawaiKehadiran IN cTablePegawaiKehadiran(m_BulanProses) LOOP        
        IF ( recPegawaiKehadiran.ROW_NUMBER > 1 ) THEN
        CONTINUE;
        END IF;
        m_PengurangHariSama := 0;
        -- KONDISI APABILA TANGGAL KELUAR = TANGGAL MASUK DI LOOPING BERIKUTNYA
        --CONTOH
        -- 1-24
        -- 24-31        
        IF m_PegawaiId = recPegawaiKehadiran.PEGAWAI_ID THEN
            
            IF recPegawaiKehadiran.MASUK = m_HariKeluar THEN
                m_PengurangHariSama := 1;            
            ELSE
                m_PengurangHariSama := 0;
            END IF;
            
        END IF;
                
        m_MasukKerja := 0;
        
        --m_HariKerja :=  m_HariKerjaNormal;
        
        
        IF recPegawaiKehadiran.KELOMPOK = '5H' THEN
            m_HariKerja :=  m_HariKerjaNormal;  
        ELSE
            m_HariKerja :=  m_HariKerjaFull;          
        END IF;
        
        
        m_MasukKerja := recPegawaiKehadiran.MASUK_KERJA2 - m_PengurangHariSama;
        
        -- APABILA 2 KAPAL MAKA YANG SEBELUMNYA DITAMBAHKAN DI MASUK KERJA SAAT INI NANTI DIHAPUS YANG LAMA SEBELUM DIINSERTKAN LAGI
        IF m_PegawaiId = recPegawaiKehadiran.PEGAWAI_ID THEN
 
            m_MasukKerja := m_MasukKerja +  m_TempMasukKerja;         
            
        END IF;        
        
        m_ProsentasePotongan := ROUND(recPegawaiKehadiran.POTONGAN_PPH * 100, 2);
        
        m_UangMakan :=  recPegawaiKehadiran.JUMLAH_UANG_MAKAN * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100);
        
        IF(recPegawaiKehadiran.TOTAL_DOCKING = 0) THEN        
            m_Jumlah := NVL(m_MasukKerja, 0) * recPegawaiKehadiran.JUMLAH_UANG_MAKAN * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100);
            m_Jumlah := ROUND(m_Jumlah);
        ELSE        
            m_MasukTidakDocking := m_MasukKerja -  recPegawaiKehadiran.TOTAL_DOCKING;
            -- JIKA MASUK KERJA LEBIH SEDIKIT DARIPADA TOTAL DOCKING
            IF m_MasukTidakDocking < 1 THEN               
                m_Jumlah := NVL(m_MasukKerja, 0) * recPegawaiKehadiran.JUMLAH_UANG_MAKAN * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100) * (50/100);
                m_Jumlah := ROUND(m_Jumlah);
            ELSE
                m_Jumlah1 := recPegawaiKehadiran.TOTAL_DOCKING * recPegawaiKehadiran.JUMLAH_UANG_MAKAN * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100) * (50/100);
                m_Jumlah2 := m_MasukTidakDocking * recPegawaiKehadiran.JUMLAH_UANG_MAKAN * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100);
                m_Jumlah  := m_Jumlah1 + m_Jumlah2;
                m_Jumlah := ROUND(m_Jumlah);                
            END IF;
        END IF;
        
        m_JumlahPotongan := ROUND(m_Jumlah * recPegawaiKehadiran.POTONGAN_PPH);
        
        -- APABILA SAMA MAKA DIHAPUS DULU YANG LAMA DITUMPUK DENGAN YANG BARU
        IF m_PegawaiId = recPegawaiKehadiran.PEGAWAI_ID THEN
            EXECUTE IMMEDIATE ' DELETE FROM PPI_GAJI.UANG_MAKAN_BANTUAN WHERE PEGAWAI_ID = ' ||recPegawaiKehadiran.PEGAWAI_ID  || ' AND PERIODE = ''' ||  m_BulanProses || '''';
        END IF; 
        
        IF (recPegawaiKehadiran.KAPAL IS NOT NULL AND m_Jumlah > (20000 * m_HariKerjaFull)) THEN
                m_Jumlah := (20000 * m_HariKerjaFull);
            END IF;  
        
       m_Query := 'INSERT INTO PPI_GAJI.UANG_MAKAN_BANTUAN (
           PEGAWAI_ID, PERIODE, HARI_KERJA, 
           MASUK_KERJA, JUMLAH, UANG_MAKAN, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, KAPAL, KRU_JABATAN_ID, JABATAN) 
        VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_UangMakan || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ''' ||
               recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';  
               
        EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.UANG_MAKAN_BANTUAN (
           PEGAWAI_ID, PERIODE, HARI_KERJA, 
           MASUK_KERJA, JUMLAH, UANG_MAKAN, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, KAPAL, KRU_JABATAN_ID, JABATAN) 
        VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_UangMakan || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ''' ||
               recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';           

        m_PegawaiId := recPegawaiKehadiran.PEGAWAI_ID;
        m_HariKeluar := recPegawaiKehadiran.KELUAR;
        m_TempMasukKerja := m_MasukKerja;
        
    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,m_Query);
    END;
/


DROP PROCEDURE PROSES_HITUNG_UANG_MAKAN_OLD;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_UANG_MAKAN_OLD
         IS 

CURSOR cTablePegawaiKehadiran(pBulanProses IN VARCHAR2) IS

SELECT A.PEGAWAI_ID, NRP, A.NPWP, A.NAMA, C.JENIS_PEGAWAI_ID, 
        CASE WHEN NVL(JUMLAH_UANG_MAKAN, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_UANG_MAKAN) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_UANG_MAKAN, 0) = 0) 
             ELSE 
                JUMLAH_UANG_MAKAN
        END 
        JUMLAH_UANG_MAKAN, 
        CASE WHEN NVL(JUMLAH_UANG_MAKAN, 0) = 0 THEN 
                (SELECT MAX(PROSENTASE_UANG_MAKAN) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_UANG_MAKAN, 0) = 0) 
             ELSE 
                PROSENTASE_UANG_MAKAN
        END         
        PROSENTASE_UANG_MAKAN, CASE WHEN NVL(E.KELOMPOK, 'X') = 'X' THEN '5H' ELSE E.KELOMPOK END KELOMPOK,
        H.NAMA KAPAL, G.KRU_JABATAN_ID, G.NAMA JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM IMASYS_SIMPEG.PEGAWAI A 
INNER JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
LEFT JOIN IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI F ON A.PEGAWAI_ID = F.PEGAWAI_ID AND TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE)
LEFT JOIN IMASYS_OPERASIONAL.KRU_JABATAN G ON F.KRU_JABATAN_ID = G.KRU_JABATAN_ID
LEFT JOIN IMASYS_OPERASIONAL.KAPAL H ON F.KAPAL_ID = H.KAPAL_ID
INNER JOIN IMASYS_GAJI.PPH_PARAMETER I ON I.JENIS_PEGAWAI_ID = C.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'UANG_MAKAN'
WHERE 1 = 1 AND NOT NVL(JUMLAH_UANG_MAKAN, 0) = 0 AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY');

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT IMASYS_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(IMASYS_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_H
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
    
m_Jumlah NUMBER;
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_BulanProses VARCHAR2(6);
m_HariKerja INTEGER;
m_MasukKerja INTEGER;
m_UangMakan NUMBER;
m_ProsentasePotongan NUMBER;
m_JumlahPotongan NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;


DELETE IMASYS_GAJI.UANG_MAKAN_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');

    FOR recPegawaiKehadiran IN cTablePegawaiKehadiran(m_BulanProses) LOOP        
        
        m_MasukKerja := 0;
    
        IF recPegawaiKehadiran.KELOMPOK = '5H' THEN
            m_HariKerja :=  m_HariKerjaNormal;  
        ELSE
            m_HariKerja :=  m_HariKerjaFull;          
        END IF;

        OPEN cTableHariMasukKerja(m_BulanProses, recPegawaiKehadiran.PEGAWAI_ID);
            
        FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
        CLOSE cTableHariMasukKerja;
        
        m_ProsentasePotongan := recPegawaiKehadiran.POTONGAN_PPH * 100;
        
        m_UangMakan :=  recPegawaiKehadiran.JUMLAH_UANG_MAKAN * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100);
        
        m_Jumlah := NVL(m_MasukKerja, 0) * recPegawaiKehadiran.JUMLAH_UANG_MAKAN * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100);
        m_Jumlah := ROUND(m_Jumlah);
        
        m_JumlahPotongan := ROUND(m_Jumlah * recPegawaiKehadiran.POTONGAN_PPH);
        
        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.UANG_MAKAN_BANTUAN (
           PEGAWAI_ID, PERIODE, HARI_KERJA, 
           MASUK_KERJA, JUMLAH, UANG_MAKAN, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, KAPAL, KRU_JABATAN_ID, JABATAN) 
        VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_UangMakan || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ''' ||
               recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_UANG_MAKAN_V2;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_UANG_MAKAN_V2
         IS 

CURSOR cTablePegawaiKehadiran(pBulanProses IN VARCHAR2) IS
SELECT A.PEGAWAI_ID, A.NRP, A.NPWP, A.NAMA, C.JENIS_PEGAWAI_ID, 
        CASE WHEN NVL(JUMLAH_UANG_MAKAN, 0) = 0 THEN 
                TO_NUMBER((SELECT NILAI FROM IMASYS.SETTING_APLIKASI WHERE KODE = DECODE(K.LOKASI_ID, '01','UANG_MAKAN_KSO_TGPERAK','UANG_MAKAN_KSO')))
             ELSE 
                TO_NUMBER(JUMLAH_UANG_MAKAN)
        END 
        JUMLAH_UANG_MAKAN, 
        CASE WHEN NVL(JUMLAH_UANG_MAKAN, 0) = 0 THEN 
               100
             ELSE 
                PROSENTASE_UANG_MAKAN
        END         
        PROSENTASE_UANG_MAKAN, CASE WHEN NVL(E.KELOMPOK, 'X') = 'X' THEN '5H' ELSE E.KELOMPOK END KELOMPOK,
        H.NAMA KAPAL, G.KRU_JABATAN_ID, G.NAMA JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH,
        NVL(TOTAL_DOCKING, 0) TOTAL_DOCKING,
       CASE 
       WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses THEN
       (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       WHEN TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses AND (NOT TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses OR TANGGAL_KELUAR IS NULL)  THEN
       (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulanProses,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       WHEN NOT TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses  THEN
       (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       WHEN TANGGAL_MASUK IS NULL AND TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses THEN       
       (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       ELSE
       (SELECT COUNT(KEHADIRAN) FROM IMASYS_ABSENSI.REKAP_ABSENSI_KOREKSI X WHERE TO_NUMBER(HARI) BETWEEN 1 AND TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01' || pBulanProses,'DDMMYYYY')), 'DD'))  AND PERIODE = pBulanProses AND (KEHADIRAN LIKE 'H%') AND X.PEGAWAI_ID = A.PEGAWAI_ID GROUP BY X.PEGAWAI_ID)  
       END MASUK_KERJA, 
       TO_NUMBER(TO_CHAR(TANGGAL_KELUAR, 'DD')) KELUAR, TO_NUMBER(TO_CHAR(TANGGAL_MASUK, 'DD')) MASUK,
       row_number() over ( partition by A.PEGAWAI_ID order by A.PEGAWAI_ID) as ROW_NUMBER
FROM IMASYS_SIMPEG.PEGAWAI A 
LEFT JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanProses, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
INNER JOIN IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI F ON A.PEGAWAI_ID = F.PEGAWAI_ID AND (TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses  OR TO_CHAR(TANGGAL_KELUAR, 'MMYYYY') = pBulanProses )
LEFT JOIN IMASYS_OPERASIONAL.KRU_JABATAN G ON F.KRU_JABATAN_ID = G.KRU_JABATAN_ID
LEFT JOIN IMASYS_OPERASIONAL.KAPAL H ON F.KAPAL_ID = H.KAPAL_ID
INNER JOIN IMASYS_GAJI.PERHITUNGAN_PPH I ON I.JENIS_PEGAWAI_ID = C.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'UANG_MAKAN' AND JENIS_PERHITUNGAN = 'PROSENTASE'                                                                                         
LEFT JOIN (
SELECT KAPAL_ID, SUM(JUMLAH) TOTAL_DOCKING FROM 
(
SELECT KAPAL_ID, TANGGAL_AWAL, TANGGAL_AKHIR, 
       CASE WHEN TO_CHAR(TANGGAL_AWAL, 'MMYYYY') = TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') THEN TRUNC(TANGGAL_AKHIR - TANGGAL_AWAL) 
            WHEN TO_CHAR(TANGGAL_AWAL, 'MMYYYY') = pBulanProses AND NOT TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') = pBulanProses THEN TRUNC(LAST_DAY(TO_DATE(pBulanProses, 'MMYYYY')) - TANGGAL_AWAL) 
            WHEN TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') = pBulanProses AND NOT TO_CHAR(TANGGAL_AWAL, 'MMYYYY') = pBulanProses  THEN TRUNC(TANGGAL_AKHIR - TO_DATE(pBulanProses, 'MMYYYY'))
            ELSE TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(pBulanProses, 'MMYYYY')), 'DD'))
       END JUMLAH  FROM IMASYS_OPERASIONAL.KAPAL_DOCKING
WHERE TO_CHAR(TANGGAL_AWAL, 'MMYYYY') = pBulanProses OR TO_CHAR(TANGGAL_AKHIR, 'MMYYYY') = pBulanProses OR TO_DATE(pBulanProses, 'MMYYYY') BETWEEN TANGGAL_AWAL AND TANGGAL_AKHIR
) GROUP BY KAPAL_ID
) J ON H.KAPAL_ID = J.KAPAL_ID
LEFT JOIN IMASYS_OPERASIONAL.KAPAL_LOKASI_TERAKHIR K ON F.KAPAL_ID = K.KAPAL_ID
WHERE 1 = 1 AND (NOT NVL(JUMLAH_UANG_MAKAN, 0) = 0 OR (C.JENIS_PEGAWAI_ID = 4 AND F.KAPAL_ID IS NOT NULL)) AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
ORDER BY A.PEGAWAI_ID, TANGGAL_MASUK DESC;

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT IMASYS_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(IMASYS_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;
 
m_Jumlah NUMBER;
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_BulanProses VARCHAR2(6);
m_HariKerja INTEGER;
m_MasukKerja NUMBER(4,2);
m_UangMakan NUMBER;
m_ProsentasePotongan NUMBER;
m_JumlahPotongan NUMBER;
m_Query VARCHAR2(2000);
m_Jumlah1 NUMBER;
m_Jumlah2 NUMBER;
m_MasukTidakDocking INTEGER;
m_PegawaiId INTEGER;
m_HariKeluar INTEGER;
m_PengurangHariSama INTEGER;
m_TempMasukKerja INTEGER;
m_hariPerak number(4,2);
m_hariDaerah number(4,2);
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;


DELETE IMASYS_GAJI.UANG_MAKAN_BANTUAN 
            WHERE PERIODE = m_BulanProses; 

OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');

m_PegawaiId := 0;
m_TempMasukKerja := 0;

    FOR recPegawaiKehadiran IN cTablePegawaiKehadiran(m_BulanProses) LOOP        
        IF ( recPegawaiKehadiran.ROW_NUMBER > 1 ) THEN
        CONTINUE;
        END IF;
        
        IF recPegawaiKehadiran.KELOMPOK = '5H' THEN
            m_HariKerja :=  m_HariKerjaNormal;  
        ELSE
            m_HariKerja :=  m_HariKerjaFull;          
        END IF;
        
        -- APABILA SAMA MAKA DIHAPUS DULU YANG LAMA DITUMPUK DENGAN YANG BARU
        IF m_PegawaiId = recPegawaiKehadiran.PEGAWAI_ID THEN
            EXECUTE IMMEDIATE ' DELETE FROM IMASYS_GAJI.UANG_MAKAN_BANTUAN WHERE PEGAWAI_ID = ' ||recPegawaiKehadiran.PEGAWAI_ID  || ' AND PERIODE = ''' ||  m_BulanProses || '''';
        END IF; 
        
        BEGIN
        m_hariPerak := 0.0;
        m_hariDaerah := 0.0;
        select PERAK, DAERAH INTO m_hariPerak, m_hariDaerah from table( IMASYS_ABSENSI.C_TOTAL_ABSEN_BULAN4(m_BulanProses, recPegawaiKehadiran.PEGAWAI_ID, 'MAKAN'));
        EXCEPTION WHEN OTHERS THEN
        m_hariPerak := 0.0;
        m_hariDaerah := 0.0;
        END;
        
        IF ( m_hariPerak > 0 ) THEN
        m_UangMakan :=  40000;
        m_MasukKerja := m_hariPerak;
        m_ProsentasePotongan := ROUND(recPegawaiKehadiran.POTONGAN_PPH * 100, 2);
        m_Jumlah := NVL(m_MasukKerja, 0) * m_UangMakan * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100);
        m_Jumlah := ROUND(m_Jumlah);
        m_JumlahPotongan := ROUND(m_Jumlah * recPegawaiKehadiran.POTONGAN_PPH);
        
       m_Query := 'INSERT INTO IMASYS_GAJI.UANG_MAKAN_BANTUAN (
           PEGAWAI_ID, PERIODE, HARI_KERJA, 
           MASUK_KERJA, JUMLAH, UANG_MAKAN, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, KAPAL, KRU_JABATAN_ID, JABATAN) 
        VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_UangMakan || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ''' ||
               recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';         
        EXECUTE IMMEDIATE m_Query;
        END IF;
        
        IF ( m_hariDaerah > 0 ) THEN
        m_UangMakan :=  20000;
        m_MasukKerja := m_hariDaerah;
        m_ProsentasePotongan := ROUND(recPegawaiKehadiran.POTONGAN_PPH * 100, 2);
        m_Jumlah := NVL(m_MasukKerja, 0) * m_UangMakan * (recPegawaiKehadiran.PROSENTASE_UANG_MAKAN / 100);
        m_Jumlah := ROUND(m_Jumlah);
        m_JumlahPotongan := ROUND(m_Jumlah * recPegawaiKehadiran.POTONGAN_PPH);
        
       m_Query := 'INSERT INTO IMASYS_GAJI.UANG_MAKAN_BANTUAN (
           PEGAWAI_ID, PERIODE, HARI_KERJA, 
           MASUK_KERJA, JUMLAH, UANG_MAKAN, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, KAPAL, KRU_JABATAN_ID, JABATAN) 
        VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_UangMakan || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ''' ||
               recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';         
        EXECUTE IMMEDIATE m_Query;
        END IF; 
        
        m_PegawaiId := recPegawaiKehadiran.PEGAWAI_ID;
        m_HariKeluar := recPegawaiKehadiran.KELUAR;
        m_TempMasukKerja := m_MasukKerja;
        
    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,m_Query);
    END;
/


DROP PROCEDURE PROSES_HITUNG_UANG_TRANS;

CREATE OR REPLACE PROCEDURE          PROSES_HITUNG_UANG_TRANS
         IS 

CURSOR cTablePegawaiKehadiran(pBulanProses IN VARCHAR2) IS
SELECT A.PEGAWAI_ID, A.NRP, A.NPWP, A.NAMA, C.JENIS_PEGAWAI_ID, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_TRANSPORTASI) FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                JUMLAH_TRANSPORTASI
        END 
        JUMLAH_TRANSPORTASI, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(PROSENTASE_TRANSPORTASI) FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                PROSENTASE_TRANSPORTASI
        END         
        PROSENTASE_TRANSPORTASI, CASE WHEN NVL(E.KELOMPOK, 'X') = 'X' THEN '5H' ELSE E.KELOMPOK END KELOMPOK,
        H.NAMA KAPAL, G.KRU_JABATAN_ID, G.NAMA JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM PPI_SIMPEG.PEGAWAI A 
INNER JOIN PPI_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanProses, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
INNER JOIN PPI_OPERASIONAL.PEGAWAI_KAPAL_HISTORI F ON A.PEGAWAI_ID = F.PEGAWAI_ID AND (TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses)
LEFT JOIN PPI_OPERASIONAL.KRU_JABATAN G ON F.KRU_JABATAN_ID = G.KRU_JABATAN_ID
LEFT JOIN PPI_OPERASIONAL.KAPAL H ON F.KAPAL_ID = H.KAPAL_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR J ON A.PEGAWAI_ID = J.PEGAWAI_ID
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH I ON C.JENIS_PEGAWAI_ID = I.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'TRANSPORT' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND J.KELAS IN (SELECT REGEXP_SUBSTR(I.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(I.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
WHERE 1 = 1 AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0 AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
UNION ALL
SELECT A.PEGAWAI_ID, A.NRP, A.NPWP, A.NAMA, C.JENIS_PEGAWAI_ID, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_TRANSPORTASI) FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                JUMLAH_TRANSPORTASI
        END 
        JUMLAH_TRANSPORTASI, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(PROSENTASE_TRANSPORTASI) FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                PROSENTASE_TRANSPORTASI
        END         
        PROSENTASE_TRANSPORTASI, CASE WHEN NVL(E.KELOMPOK, 'X') = 'X' THEN '5H' ELSE E.KELOMPOK END KELOMPOK,
        '' KAPAL, NULL KRU_JABATAN_ID, '' JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM PPI_SIMPEG.PEGAWAI A 
INNER JOIN PPI_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanProses, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND PPI_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR J ON A.PEGAWAI_ID = J.PEGAWAI_ID
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH I ON C.JENIS_PEGAWAI_ID = I.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'TRANSPORT' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND J.KELAS IN (SELECT REGEXP_SUBSTR(I.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(I.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
WHERE 1 = 1 AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0 AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
AND NOT EXISTS(SELECT 1 FROM PPI_OPERASIONAL.PEGAWAI_KAPAL_HISTORI X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND (TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses) )
ORDER BY PEGAWAI_ID;

/*
SELECT A.PEGAWAI_ID, NRP, A.NPWP, A.NAMA, C.JENIS_PEGAWAI_ID, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_TRANSPORTASI) FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                JUMLAH_TRANSPORTASI
        END 
        JUMLAH_TRANSPORTASI, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(PROSENTASE_TRANSPORTASI) FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                PROSENTASE_TRANSPORTASI
        END         
        PROSENTASE_TRANSPORTASI, CASE WHEN NVL(E.KELOMPOK, 'X') = 'X' THEN '5H' ELSE E.KELOMPOK END KELOMPOK,
        H.NAMA KAPAL, G.KRU_JABATAN_ID, G.NAMA JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM PPI_SIMPEG.PEGAWAI A 
INNER JOIN PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN PPI_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
LEFT JOIN PPI_OPERASIONAL.PEGAWAI_KAPAL_HISTORI F ON A.PEGAWAI_ID = F.PEGAWAI_ID AND (TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses)
LEFT JOIN PPI_OPERASIONAL.KRU_JABATAN G ON F.KRU_JABATAN_ID = G.KRU_JABATAN_ID
LEFT JOIN PPI_OPERASIONAL.KAPAL H ON F.KAPAL_ID = H.KAPAL_ID
INNER JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR J ON A.PEGAWAI_ID = J.PEGAWAI_ID
INNER JOIN PPI_GAJI.PERHITUNGAN_PPH I ON C.JENIS_PEGAWAI_ID = I.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'TRANSPORT' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND J.KELAS IN (SELECT REGEXP_SUBSTR(I.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(I.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
WHERE 1 = 1 AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0 AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY');
*/

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT PPI_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(PPI_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;
    
CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
select PPI_ABSENSI.C_TOTAL_ABSEN_BULAN2(pPeriode, pPegawaiId, 'TRANSPORT') JUMLAH_H from dual;
/*SELECT  
    JUMLAH_H 
FROM PPI_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
*/
CURSOR cTableHariMasukKerjaKapal(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
select PPI_ABSENSI.C_TOTAL_ABSEN_BULAN2(pPeriode, pPegawaiId, 'TRANSPORT') JUMLAH_H from dual;
/*
SELECT  
    JUMLAH_H 
FROM PPI_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
 */   
m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_HariKerja INTEGER;
m_MasukKerja NUMBER(4,1);
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_UangTransport NUMBER;
m_PegawaiId INTEGER;
JML_HARI NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE PPI_GAJI.UANG_TRANSPORT_BANTUAN 
            WHERE PERIODE = m_BulanProses; 


OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');
m_PegawaiId := 0;

    FOR recPegawaiKehadiran IN cTablePegawaiKehadiran(m_BulanProses) LOOP    
    DBMS_OUTPUT.put_line (recPegawaiKehadiran.PEGAWAI_ID)    ;
        
        IF NOT m_PegawaiId = recPegawaiKehadiran.PEGAWAI_ID THEN
        
            m_MasukKerja := 0;
            
            IF recPegawaiKehadiran.KELOMPOK = '5H' THEN
                m_HariKerja :=  m_HariKerjaNormal;  
                OPEN cTableHariMasukKerja(m_BulanProses, recPegawaiKehadiran.PEGAWAI_ID);
                
                FETCH cTableHariMasukKerja INTO m_MasukKerja;
                    
                CLOSE cTableHariMasukKerja;
            ELSE
                m_HariKerja :=  m_HariKerjaFull;
                OPEN cTableHariMasukKerjaKapal(m_BulanProses, recPegawaiKehadiran.PEGAWAI_ID);
                
                FETCH cTableHariMasukKerjaKapal INTO m_MasukKerja;
                    
                CLOSE cTableHariMasukKerjaKapal;       
            END IF;
            
                   
            m_ProsentasePotongan := recPegawaiKehadiran.POTONGAN_PPH * 100;
            
            m_UangTransport := recPegawaiKehadiran.JUMLAH_TRANSPORTASI * (recPegawaiKehadiran.PROSENTASE_TRANSPORTASI / 100);
                   
            m_Jumlah := NVL(m_MasukKerja, 0) * m_UangTransport;
            m_Jumlah := ROUND(m_Jumlah);

            m_JumlahPotongan := ROUND(m_Jumlah * recPegawaiKehadiran.POTONGAN_PPH);
            
            IF (recPegawaiKehadiran.KAPAL IS NOT NULL AND m_Jumlah > (50000 * m_HariKerjaFull)) THEN
                m_Jumlah := (50000 * m_HariKerjaFull);
            END IF;
            
            EXECUTE IMMEDIATE 'INSERT INTO PPI_GAJI.UANG_TRANSPORT_BANTUAN (
               PEGAWAI_ID, PERIODE, HARI_KERJA, 
               MASUK_KERJA, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, UANG_TRANSPORT, KAPAL, KRU_JABATAN_ID, JABATAN) 
            VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || 
                   NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ' || m_UangTransport || ', ''' ||
                   recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';           
        
        END IF;
        
        m_PegawaiId := recPegawaiKehadiran.PEGAWAI_ID;

        END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_UANG_TRANS_V1;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_UANG_TRANS_V1
         IS 

CURSOR cTablePegawaiKehadiran(pBulanProses IN VARCHAR2) IS


SELECT A.PEGAWAI_ID, NRP, A.NPWP, A.NAMA, C.JENIS_PEGAWAI_ID, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_TRANSPORTASI) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                JUMLAH_TRANSPORTASI
        END 
        JUMLAH_TRANSPORTASI, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(PROSENTASE_TRANSPORTASI) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                PROSENTASE_TRANSPORTASI
        END         
        PROSENTASE_TRANSPORTASI, CASE WHEN NVL(E.KELOMPOK, 'X') = 'X' THEN '5H' ELSE E.KELOMPOK END KELOMPOK,
        H.NAMA KAPAL, G.KRU_JABATAN_ID, G.NAMA JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH
FROM IMASYS_SIMPEG.PEGAWAI A 
INNER JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR B ON A.PEGAWAI_ID = B.PEGAWAI_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
LEFT JOIN IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI F ON A.PEGAWAI_ID = F.PEGAWAI_ID AND TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE)
LEFT JOIN IMASYS_OPERASIONAL.KRU_JABATAN G ON F.KRU_JABATAN_ID = G.KRU_JABATAN_ID
LEFT JOIN IMASYS_OPERASIONAL.KAPAL H ON F.KAPAL_ID = H.KAPAL_ID
INNER JOIN IMASYS_GAJI.PPH_PARAMETER I ON I.JENIS_PEGAWAI_ID = C.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'TRANSPORT'
WHERE 1 = 1 AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0 AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY');

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT IMASYS_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(IMASYS_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;
    
CURSOR cTableHariMasukKerja(pPeriode IN VARCHAR2, pPegawaiId IN INTEGER) IS
SELECT  
    JUMLAH_H
FROM IMASYS_ABSENSI.REKAP_KEHADIRAN_GAJI WHERE PERIODE = pPeriode AND PEGAWAI_ID = pPegawaiId;
    
m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_HariKerja INTEGER;
m_MasukKerja INTEGER;
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_UangTransport NUMBER;
BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE IMASYS_GAJI.UANG_TRANSPORT_BANTUAN 
            WHERE PERIODE = m_BulanProses; 


OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');

    FOR recPegawaiKehadiran IN cTablePegawaiKehadiran(m_BulanProses) LOOP        
        
        m_MasukKerja := 0;
        
        IF recPegawaiKehadiran.KELOMPOK = '5H' THEN
            m_HariKerja :=  m_HariKerjaNormal;  
        ELSE
            m_HariKerja :=  m_HariKerjaFull;          
        END IF;
        
        OPEN cTableHariMasukKerja(m_BulanProses, recPegawaiKehadiran.PEGAWAI_ID);
            
        FETCH cTableHariMasukKerja INTO m_MasukKerja;
            
        CLOSE cTableHariMasukKerja;
               
        m_ProsentasePotongan := recPegawaiKehadiran.POTONGAN_PPH * 100;
        
        m_UangTransport := recPegawaiKehadiran.JUMLAH_TRANSPORTASI * (recPegawaiKehadiran.PROSENTASE_TRANSPORTASI / 100);
               
        m_Jumlah := NVL(m_MasukKerja, 0) * m_UangTransport;
        m_Jumlah := ROUND(m_Jumlah);

        m_JumlahPotongan := ROUND(m_Jumlah * recPegawaiKehadiran.POTONGAN_PPH);
        
        EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.UANG_TRANSPORT_BANTUAN (
           PEGAWAI_ID, PERIODE, HARI_KERJA, 
           MASUK_KERJA, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, UANG_TRANSPORT, KAPAL, KRU_JABATAN_ID, JABATAN) 
        VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || 
               NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ' || m_UangTransport || ', ''' ||
               recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';           

    END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_HITUNG_UANG_TRANS_V2;

CREATE OR REPLACE PROCEDURE             PROSES_HITUNG_UANG_TRANS_V2
         IS 

CURSOR cTablePegawaiKehadiran(pBulanProses IN VARCHAR2) IS
SELECT C.*, row_number() over ( partition by C.PEGAWAI_ID order by C.PEGAWAI_ID) as ROW_NUMBER FROM (
SELECT A.PEGAWAI_ID, C.JENIS_PEGAWAI_ID, A.NRP, A.NPWP, A.NAMA, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_TRANSPORTASI) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                JUMLAH_TRANSPORTASI
        END 
        JUMLAH_TRANSPORTASI, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(PROSENTASE_TRANSPORTASI) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                PROSENTASE_TRANSPORTASI
        END         
        PROSENTASE_TRANSPORTASI, J.KELOMPOK,
        H.NAMA KAPAL, G.KRU_JABATAN_ID, G.NAMA JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH,
        TANGGAL_MASUK
FROM IMASYS_SIMPEG.PEGAWAI A 
INNER JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanProses, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
INNER JOIN IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI F ON A.PEGAWAI_ID = F.PEGAWAI_ID AND (TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses)
LEFT JOIN IMASYS_OPERASIONAL.KRU_JABATAN G ON F.KRU_JABATAN_ID = G.KRU_JABATAN_ID
LEFT JOIN IMASYS_OPERASIONAL.KAPAL H ON F.KAPAL_ID = H.KAPAL_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR J ON A.PEGAWAI_ID = J.PEGAWAI_ID
INNER JOIN IMASYS_GAJI.PERHITUNGAN_PPH I ON C.JENIS_PEGAWAI_ID = I.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'TRANSPORT' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND J.KELAS IN (SELECT REGEXP_SUBSTR(I.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(I.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
WHERE 1 = 1 AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0 AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY'))) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
UNION
SELECT A.PEGAWAI_ID, C.JENIS_PEGAWAI_ID, A.NRP, A.NPWP, A.NAMA,
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(JUMLAH_TRANSPORTASI) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                JUMLAH_TRANSPORTASI
        END 
        JUMLAH_TRANSPORTASI, 
        CASE WHEN NVL(JUMLAH_TRANSPORTASI, 0) = 0 THEN 
                (SELECT MAX(PROSENTASE_TRANSPORTASI) FROM IMASYS_SIMPEG.PEGAWAI_PENGHASILAN X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0) 
             ELSE 
                PROSENTASE_TRANSPORTASI
        END         
        PROSENTASE_TRANSPORTASI, J.KELOMPOK,
        '' KAPAL,NULL KRU_JABATAN_ID, '' JABATAN,
        CASE WHEN NVL(A.NPWP, 'X') = 'X' THEN I.JUMLAH_TANPA_NPWP ELSE CASE WHEN TANGGAL_NPWP <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TANGGAL_NPWP, 'MMYYYY') = pBulanProses THEN I.JUMLAH_NPWP ELSE I.JUMLAH_TANPA_NPWP END END POTONGAN_PPH,
        SYSDATE TANGGAL_MASUK
FROM IMASYS_SIMPEG.PEGAWAI A 
INNER JOIN IMASYS_SIMPEG.PEGAWAI_PENGHASILAN B ON A.PEGAWAI_ID = B.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_PENGHASILAN_ID_PERIODE(pBulanProses, A.PEGAWAI_ID) = B.PEGAWAI_PENGHASILAN_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JENIS_PEGAWAI C ON A.PEGAWAI_ID = C.PEGAWAI_ID AND IMASYS_SIMPEG.AMBIL_JENIS_PEGAWAI_PERIODE(pBulanProses, A.PEGAWAI_ID) = C.JENIS_PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.PEGAWAI_JAM_KERJA_JENIS D ON A.PEGAWAI_ID = D.PEGAWAI_ID
LEFT JOIN IMASYS_ABSENSI.JAM_KERJA_JENIS E ON D.JAM_KERJA_JENIS_ID  = E.JAM_KERJA_JENIS_ID
INNER JOIN IMASYS_SIMPEG.PEGAWAI_JABATAN_TERAKHIR J ON A.PEGAWAI_ID = J.PEGAWAI_ID
INNER JOIN IMASYS_GAJI.PERHITUNGAN_PPH I ON C.JENIS_PEGAWAI_ID = I.JENIS_PEGAWAI_ID AND JENIS_PENGHASILAN = 'TRANSPORT' AND JENIS_PERHITUNGAN = 'PROSENTASE' 
                                            AND J.KELAS IN (SELECT REGEXP_SUBSTR(I.KELAS,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(I.KELAS, '[^,]+', 1, LEVEL) IS NOT NULL)
WHERE 1 = 1 AND NOT NVL(JUMLAH_TRANSPORTASI, 0) = 0 AND ((A.STATUS_PEGAWAI_ID = 1 OR A.STATUS_PEGAWAI_ID = 5) 
OR (TANGGAL_PENSIUN > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_MUTASI_KELUAR > TO_DATE(pBulanProses, 'MMYYYY') OR TANGGAL_WAFAT > TO_DATE(pBulanProses, 'MMYYYY')
OR A.TGL_NON_AKTIF > TO_DATE(pBulanProses, 'MMYYYY')
)) 
AND (TMT_JENIS_PEGAWAI <= TO_DATE(pBulanProses, 'MMYYYY') OR TO_CHAR(TMT_JENIS_PEGAWAI, 'MMYYYY') = pBulanProses)  AND NVL(TANGGAL_MPP, SYSDATE) >= TO_DATE(pBulanProses, 'MMYYYY')
AND NOT EXISTS(SELECT 1 FROM IMASYS_OPERASIONAL.PEGAWAI_KAPAL_HISTORI X WHERE X.PEGAWAI_ID = A.PEGAWAI_ID AND (TO_DATE('02' || pBulanProses, 'DDMMYYYY') BETWEEN TANGGAL_MASUK AND NVL(TANGGAL_KELUAR, SYSDATE) OR TO_CHAR(TANGGAL_MASUK, 'MMYYYY') = pBulanProses) )
) C ORDER BY PEGAWAI_ID, TANGGAL_MASUK DESC;

CURSOR cTableHariKerja(pPeriode IN VARCHAR2) IS
SELECT IMASYS_ABSENSI.HITUNG_HARI_KERJA(TO_DATE('01' || pPeriode, 'DDMMYYYY'), TO_DATE(TO_CHAR(LAST_DAY(TO_DATE('01' || pPeriode,'DDMMYYYY')), 'DD') || pPeriode, 'DDMMYYYY')) - NVL(IMASYS_ABSENSI.HITUNG_TANGGAL_MERAH(pPeriode), 0) HARI_KERJA FROM DUAL;

CURSOR cTableUangTransport(pJenisBantuan IN VARCHAR2, pKelompok IN VARCHAR2, pJenisPegawai IN VARCHAR2) IS
SELECT JUMLAH FROM IMASYS_GAJI.UANG_BANTUAN
WHERE JENIS_BANTUAN = pJenisBantuan
AND KELOMPOK = pKelompok
AND JENIS_PEGAWAI LIKE '%' || pJenisPegawai || '%';

CURSOR cTableValidation IS
    SELECT PERIODE FROM IMASYS_GAJI.GAJI_PERIODE_TENGAH_BULAN ORDER BY GAJI_PERIODE_TENGAH_BULAN_ID DESC;

m_Jumlah NUMBER;
m_BulanProses VARCHAR2(6);
m_HariKerjaNormal INTEGER;
m_HariKerjaFull INTEGER;
m_HariKerja INTEGER;
m_MasukKerja NUMBER(4,1);
m_ProsentasePotongan INTEGER;
m_JumlahPotongan NUMBER;
m_UangTransport NUMBER;
m_PegawaiId INTEGER;
JML_HARI NUMBER;
m_hariPerak NUMBER(4,2);
m_hariDaerah NUMBER(4,2);

m_hukuman NUMBER;

BEGIN    

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

DELETE IMASYS_GAJI.UANG_TRANSPORT_BANTUAN 
            WHERE PERIODE = m_BulanProses; 


OPEN cTableHariKerja(m_BulanProses);
            
FETCH cTableHariKerja INTO m_HariKerjaNormal;
            
CLOSE cTableHariKerja;

m_HariKerjaFull := TO_CHAR(LAST_DAY(TO_DATE('01' || m_BulanProses,'DDMMYYYY')), 'DD');
m_PegawaiId := 0;

    FOR recPegawaiKehadiran IN cTablePegawaiKehadiran(m_BulanProses) LOOP    
        IF ( recPegawaiKehadiran.ROW_NUMBER > 1 ) THEN
        CONTINUE;
        END IF;
        
        BEGIN
                select COUNT(1) INTO m_hukuman from imasys_simpeg.PEGAWAI_HUKUMAN
                where jenis_hukuman_id = 14
                and pegawai_id = recPegawaiKehadiran.PEGAWAI_ID
                and (TRUNC(to_date(m_BulanProses,'MMYYYY')) between TRUNC(TMT_SK) AND NVL(AKHIR_TMT,TO_DATE('12'||TO_CHAR(SYSDATE,'YYYY'),'MMYYYY')));
                   
                   IF (m_hukuman > 0 ) THEN
                   
                   IF recPegawaiKehadiran.KELOMPOK = 'D' THEN
                        m_HariKerja :=  m_HariKerjaNormal;
                    ELSE
                        m_HariKerja :=  m_HariKerjaFull;
                    END IF;
       
                    EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.UANG_TRANSPORT_BANTUAN (
                   PEGAWAI_ID, PERIODE, HARI_KERJA, 
                   MASUK_KERJA, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, UANG_TRANSPORT, KAPAL, KRU_JABATAN_ID, JABATAN) 
                VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || 
                       NVL(m_MasukKerja, 0) || ', 0, 0, 0, 0, ''' ||
                       recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';
                   
                   CONTINUE;
                   END IF;
                   
                EXCEPTION WHEN OTHERS THEN
                        NULL;
                END;
        
        IF NOT m_PegawaiId = recPegawaiKehadiran.PEGAWAI_ID THEN
        
            m_MasukKerja := 0;
            
            BEGIN
                m_hariPerak := 0.0;
                m_hariDaerah := 0.0;
                select PERAK, DAERAH INTO m_hariPerak, m_hariDaerah from table( IMASYS_ABSENSI.C_TOTAL_ABSEN_BULAN4(m_BulanProses, recPegawaiKehadiran.PEGAWAI_ID, 'TRANSPORT'));
            EXCEPTION WHEN OTHERS THEN
                m_hariPerak := 0.0;
                m_hariDaerah := 0.0;
            END;
            
            IF recPegawaiKehadiran.KELOMPOK = 'D' THEN
                m_HariKerja :=  m_HariKerjaNormal;
            ELSE
                m_HariKerja :=  m_HariKerjaFull;
            END IF;
            
                   
            m_ProsentasePotongan := recPegawaiKehadiran.POTONGAN_PPH * 100;
            
             IF ( m_hariPerak > 0 ) THEN
                m_MasukKerja := m_hariPerak;
                IF (recPegawaiKehadiran.KELOMPOK = 'D') THEN
                    m_UangTransport := recPegawaiKehadiran.JUMLAH_TRANSPORTASI * (recPegawaiKehadiran.PROSENTASE_TRANSPORTASI / 100);
                ELSE
                    OPEN cTableUangTransport('TRANSPORT', 'KP', recPegawaiKehadiran.JENIS_PEGAWAI_ID);
                    FETCH cTableUangTransport INTO m_uangTransport;
                    CLOSE cTableUangTransport;
                END IF;
                
                m_Jumlah := NVL(m_MasukKerja, 0) * m_UangTransport;
                m_Jumlah := ROUND(m_Jumlah);
                m_JumlahPotongan := ROUND(m_Jumlah * recPegawaiKehadiran.POTONGAN_PPH);
                IF ( m_BulanProses = '072014' AND recPegawaiKehadiran.PEGAWAI_ID IN (1199,1195,1203,1208,1197,1403,1204,1207,1192,1201,1211)) THEN
                    m_Jumlah := 0;
                    m_JumlahPotongan := 0;
                END IF;
                EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.UANG_TRANSPORT_BANTUAN (
                   PEGAWAI_ID, PERIODE, HARI_KERJA, 
                   MASUK_KERJA, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, UANG_TRANSPORT, KAPAL, KRU_JABATAN_ID, JABATAN) 
                VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || 
                       NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ' || m_UangTransport || ', ''' ||
                       recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')'; 
             END IF;
             
             IF (m_hariDaerah > 0) THEN
                m_MasukKerja := m_hariDaerah;
                    OPEN cTableUangTransport('TRANSPORT', 'K', recPegawaiKehadiran.JENIS_PEGAWAI_ID);
                    FETCH cTableUangTransport INTO m_uangTransport;
                    CLOSE cTableUangTransport;
                    
                m_Jumlah := NVL(m_MasukKerja, 0) * m_UangTransport;
                m_Jumlah := ROUND(m_Jumlah);
                m_JumlahPotongan := ROUND(m_Jumlah * recPegawaiKehadiran.POTONGAN_PPH);
                
                EXECUTE IMMEDIATE 'INSERT INTO IMASYS_GAJI.UANG_TRANSPORT_BANTUAN (
                   PEGAWAI_ID, PERIODE, HARI_KERJA, 
                   MASUK_KERJA, JUMLAH, PROSENTASE_POTONGAN, JUMLAH_POTONGAN, UANG_TRANSPORT, KAPAL, KRU_JABATAN_ID, JABATAN) 
                VALUES (' || recPegawaiKehadiran.PEGAWAI_ID || ', ''' || m_BulanProses || ''', ' || m_HariKerja || ', ' || 
                       NVL(m_MasukKerja, 0) || ', ' || m_Jumlah || ', ' || m_ProsentasePotongan || ', ' || m_JumlahPotongan || ', ' || m_UangTransport || ', ''' ||
                       recPegawaiKehadiran.KAPAL || ''', ''' || recPegawaiKehadiran.KRU_JABATAN_ID || ''', ''' || recPegawaiKehadiran.JABATAN || ''')';
             END IF;
             
        END IF;
        
        m_PegawaiId := recPegawaiKehadiran.PEGAWAI_ID;

        END LOOP;    

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_KALKULASI_TRANSPORT;

CREATE OR REPLACE PROCEDURE          PROSES_KALKULASI_TRANSPORT(VPERIODE IN VARCHAR2) AS
PRAGMA AUTONOMOUS_TRANSACTION;


VTARIF     NUMBER;
PTOTALPOTONGAN      NUMBER;
PPEMBAGIPOTONGAN    NUMBER;

    BEGIN
    
        DELETE FROM PPI_GAJI.KALKULASI_TRANSPORT WHERE PERIODE = VPERIODE;
    
        FOR rec IN (
        SELECT PERIODE, A.PEGAWAI_ID, A.NRP, A.NAMA, A.DEPARTEMEN_ID,  C.JENIS_PEGAWAI_ID, D.NAMA JABATAN, NVL(JUMLAH_HADIR, 0) JUMLAH_HADIR 
        FROM PPI_SIMPEG.PEGAWAI A
        LEFT JOIN PPI_ABSENSI.REKAP_KEHADIRAN_TRANS_TOTAL B ON A.PEGAWAI_ID = B.PEGAWAI_ID 
        LEFT JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR C ON A.PEGAWAI_ID = C.PEGAWAI_ID
        LEFT JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR D ON A.PEGAWAI_ID = D.PEGAWAI_ID
        WHERE C.JENIS_PEGAWAI_ID <> '8'  AND PERIODE = VPERIODE
        
        
        ) LOOP 
            
            BEGIN
                SELECT NILAI INTO VTARIF FROM PPI_GAJI.TARIF_TRANSPORT X WHERE X.DEPARTEMEN_ID = REC.DEPARTEMEN_ID AND X.JENIS_PEGAWAI_ID = REC.JENIS_PEGAWAI_ID;
            EXCEPTION
               WHEN NO_DATA_FOUND
               THEN VTARIF := NULL; 
            END;
        
    
            INSERT INTO PPI_GAJI.KALKULASI_TRANSPORT (
               PERIODE, PEGAWAI_ID, JUMLAH_HADIR, 
               TARIF, LAST_CREATE_USER, LAST_CREATE_DATE) 
            VALUES ( VPERIODE, REC.PEGAWAI_ID, REC.JUMLAH_HADIR,
               VTARIF , 'PROSES', SYSDATE);
    
            
            COMMIT;
    
    
        END LOOP;    
      
    END;
/


DROP PROCEDURE PROSES_PERHITUNGAN_GAJI;

CREATE OR REPLACE PROCEDURE          PROSES_PERHITUNGAN_GAJI
       ( pBulanTahun IN varchar2, 
         pDepartemenId  IN varchar2)
         IS 
 
    BEGIN

IF pDepartemenId = '' OR pDepartemenId IS NULL THEN
  DELETE PPI_GAJI.GAJI 
    WHERE BULANTAHUN = pBulanTahun;   
ELSE
  DELETE PPI_GAJI.GAJI 
    WHERE BULANTAHUN = pBulanTahun AND PEGAWAI_ID IN 
        (SELECT PEGAWAI_ID FROM PPI_SIMPEG.PEGAWAI WHERE DEPARTEMEN_ID = pDepartemenId); 
END IF;

   INSERT INTO PPI_GAJI.GAJI(
                   PEGAWAI_ID, BULANTAHUN, 
                   KELAS, PERIODE, MERIT, 
                   TPP, TUNJANGAN_PERBANTUAN, TUNJANGAN_JABATAN, 
                   TOTAL)                     
                   SELECT 
                        A.PEGAWAI_ID, pBulanTahun, A.KELAS, A.PERIODE, B.JUMLAH MERIT, C.JUMLAH TPP, CASE WHEN A.KELAS = G.KELAS THEN D.JUMLAH ELSE E.JUMLAH END PERBANTUAN, F.JUMLAH,
                        (B.JUMLAH + C.JUMLAH +  CASE WHEN A.KELAS = G.KELAS THEN D.JUMLAH ELSE E.JUMLAH END + F.JUMLAH)
                    FROM PPI_SIMPEG.PEGAWAI_PENGHASILAN_TERAKHIR A 
                    INNER JOIN PPI_GAJI.MERIT_PMS B ON A.KELAS = B.KELAS AND A.PERIODE = B.PERIODE
                    INNER JOIN PPI_GAJI.TPP_PMS C ON A.KELAS = C.KELAS
                    INNER JOIN PPI_GAJI.TUNJANGAN_PERBANTUAN_A D ON A.KELAS = D.KELAS AND A.PERIODE = D.PERIODE
                    INNER JOIN PPI_GAJI.TUNJANGAN_PERBANTUAN_B E ON A.KELAS = E.KELAS AND A.PERIODE = E.PERIODE
                    INNER JOIN PPI_GAJI.TUNJANGAN_JABATAN F ON A.JABATAN_ID = F.JABATAN_ID
                    LEFT  JOIN PPI_SIMPEG.PEGAWAI_JABATAN_P3_TERAKHIR G ON A.PEGAWAI_ID = G.PEGAWAI_ID                   
                    WHERE A.PEGAWAI_ID IN 
                        (SELECT PEGAWAI_ID FROM PPI_SIMPEG.PEGAWAI WHERE DEPARTEMEN_ID LIKE pDepartemenId || '%'); 
        COMMIT;
    
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE PROSES_ROLLBACK_CICILAN;

CREATE OR REPLACE PROCEDURE          PROSES_ROLLBACK_CICILAN(pJenisPegawaiId IN VARCHAR2)
         IS 

CURSOR cTableValidation IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE ORDER BY GAJI_PERIODE_ID DESC;

CURSOR cTableValidationCapegPKWT IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_CAPEG_PKWT ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;

CURSOR cTableLastProses(pPeriode IN VARCHAR2) IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE WHERE NOT PERIODE = pPeriode ORDER BY GAJI_PERIODE_ID DESC;

CURSOR cTableLastProsesCapegPKWT(pPeriode IN VARCHAR2) IS
    SELECT PERIODE FROM PPI_GAJI.GAJI_PERIODE_CAPEG_PKWT WHERE NOT PERIODE = pPeriode ORDER BY GAJI_PERIODE_CAPEG_PKWT_ID DESC;
    
m_BulanProses VARCHAR2(6);
m_LastBulanProses VARCHAR2(6);

BEGIN    

IF pJenisPegawaiId = '5' OR pJenisPegawaiId = '3' THEN

OPEN cTableValidationCapegPKWT();
            
FETCH cTableValidationCapegPKWT INTO m_BulanProses;
            
CLOSE cTableValidationCapegPKWT;

OPEN cTableLastProsesCapegPKWT(m_BulanProses);
            
FETCH cTableLastProsesCapegPKWT INTO m_LastBulanProses;
            
CLOSE cTableLastProsesCapegPKWT;

ELSE

OPEN cTableValidation();
            
FETCH cTableValidation INTO m_BulanProses;
            
CLOSE cTableValidation;

OPEN cTableLastProses(m_BulanProses);
            
FETCH cTableLastProses INTO m_LastBulanProses;
            
CLOSE cTableLastProses;

END IF;

DELETE PPI_GAJI.LAIN_KONDISI_PEGAWAI_CICILAN A
            WHERE ANGSURAN_BULAN = m_BulanProses AND EXISTS(SELECT 1 FROM PPI_GAJI.LAIN_KONDISI_PEGAWAI X, PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR Y WHERE X.LAIN_KONDISI_PEGAWAI_ID = A.LAIN_KONDISI_PEGAWAI_ID AND X.PEGAWAI_ID = Y.PEGAWAI_ID AND Y.JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL)); 

UPDATE PPI_GAJI.LAIN_KONDISI_PEGAWAI A SET BULAN_AKHIR_BAYAR = m_LastBulanProses, ANGSURAN_TERBAYAR = ANGSURAN_TERBAYAR - 1 WHERE BULAN_AKHIR_BAYAR = m_BulanProses AND
       EXISTS(SELECT 1 FROM PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR X WHERE A.PEGAWAI_ID = X.PEGAWAI_ID AND X.JENIS_PEGAWAI_ID IN (SELECT REGEXP_SUBSTR(pJenisPegawaiId,'[^,]+', 1, LEVEL) FROM DUAL CONNECT BY REGEXP_SUBSTR(pJenisPegawaiId, '[^,]+', 1, LEVEL) IS NOT NULL) )
; 

    
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
          raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
    END;
/


DROP PROCEDURE SINKRONISASI_PEGAWAI;

CREATE OR REPLACE PROCEDURE          SINKRONISASI_PEGAWAI(VPERIODE IN VARCHAR2) AS
PRAGMA AUTONOMOUS_TRANSACTION;


    BEGIN
    
        DELETE FROM PPI_GAJI.PEGAWAI WHERE PERIODE = VPERIODE;
    
        INSERT INTO PPI_GAJI.PEGAWAI (
           PERIODE, PEGAWAI_ID, CABANG_ID, DEPARTEMEN_ID, KATEGORI_SEKOLAH,
           NRP, NAMA, JENIS_KELAMIN, 
           JENIS_PEGAWAI_ID, PENDIDIKAN_ID, MASA_KERJA, 
           JABATAN_ID, JABATAN, KELAS, KELOMPOK, 
           STATUS_CALPEG, BANK_ID, NAMA_BANK, 
           REKENING_NAMA, REKENING_NO, STATUS_KELUARGA_ID, 
           STATUS_PEGAWAI_ID, STATUS_KAWIN, LAST_CREATE_USER, 
           LAST_CREATE_DATE) 
        SELECT  VPERIODE, A.PEGAWAI_ID, F.CABANG_ID, A.DEPARTEMEN_ID, F.KATEGORI_SEKOLAH,
                A.NRP, A.NAMA, JENIS_KELAMIN, 
                B.JENIS_PEGAWAI_ID, D.PENDIDIKAN_ID, PPI_SIMPEG.AMBIL_UMUR_TAHUN(E.TMT_JENIS_PEGAWAI), 
                C.JABATAN_ID, C.NAMA, KELAS, KELOMPOK, 
                B.STATUS_CALPEG, A.BANK_ID, G.NAMA, 
                A.REKENING_NAMA, A.REKENING_NO, STATUS_KELUARGA_ID, 
                STATUS_PEGAWAI_ID, STATUS_KAWIN, 'PROSEDUR', 
                SYSDATE
          FROM PPI_SIMPEG.PEGAWAI A 
          LEFT JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_TERAKHIR B
               ON A.PEGAWAI_ID = B.PEGAWAI_ID
          LEFT JOIN PPI_SIMPEG.PEGAWAI_JABATAN_TERAKHIR C
               ON A.PEGAWAI_ID = C.PEGAWAI_ID
          LEFT JOIN PPI_SIMPEG.PEGAWAI_PENDIDIKAN_TERAKHIR D 
               ON A.PEGAWAI_ID = D.PEGAWAI_ID
          LEFT JOIN PPI_SIMPEG.PEGAWAI_JENIS_PEGAWAI_AWAL E 
               ON A.PEGAWAI_ID = E.PEGAWAI_ID
          LEFT JOIN PPI_SIMPEG.DEPARTEMEN F
               ON A.DEPARTEMEN_ID = F.DEPARTEMEN_ID
          LEFT JOIN PPI_SIMPEG.BANK G
               ON A.BANK_ID = G.BANK_ID
         WHERE B.JENIS_PEGAWAI_ID != '8' AND STATUS_PEGAWAI_ID = '1';

        COMMIT;
        
    END;
/
