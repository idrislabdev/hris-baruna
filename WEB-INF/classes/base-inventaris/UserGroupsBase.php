<? 
/* *******************************************************************************************************
MODUL NAME 			: SIMWEB
FILE NAME 			: UserGroupsBase.php
AUTHOR				: Ridwan Rismanto
VERSION				: 1.0
MODIFICATION DOC	:
DESCRIPTION			: Entity-base class for tabel usergroups implementation
***************************************************************************************************** */

  /***
  * Entity-base class untuk mengimplementasikan tabel usergroups.
  * 
  * @author M Reza Faisal
  * @generated by Entity Generator 5.8.3
  * @generated on 27-Apr-2005,14:15
  ***/
  include_once("../WEB-INF/classes/db/Entity.php");

  class UserGroupsBase extends Entity{ 

	var $query;
    /**
    * Class constructor.
    * @author M Reza Faisal
    **/
    function UserGroupsBase(){
      $this->Entity(); 
    }

    /**
    * Cek apakah operasi insert dapat dilakukan atau tidak 
    * @author M Reza Faisal
    * @return boolean True jika insert boleh dilakukan, false jika tidak.
    **/
    function canInsert(){
      return true;
    }

    /**
    * Insert record ke database. 
    * @author M Reza Faisal
    * @return boolean True jika insert sukses, false jika tidak.
    **/
    function insert(){
      if(!$this->canInsert())
        showMessageDlg("Data UserGroups tidak dapat di-insert",true);
      else{
		$this->setField("USER_GROUP_ID", $this->getNextId("USER_GROUP_ID","PPI_ASSET.user_group")); 	  			
		$str = "
				INSERT INTO PPI_ASSET.USER_GROUP (
				   USER_GROUP_ID, NAMA) 
                VALUES(
				  '".$this->getField("USER_GROUP_ID")."',
                  '".$this->getField("NAMA")."'
                )"; 
		$this->query = $str;
		$this->id = $this->getField("USER_GROUP_ID");
        return $this->execQuery($str);
      }
    }

    /**
    * Cek apakah operasi update dapat dilakukan atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika update dapat dilakukan, false jika tidak.
    **/
    function canUpdate(){
      return true;
    }

    /**
    * Update record. 
    * @author M Reza Faisal
    * @return boolean True jika update sukses, false jika tidak.
    **/
    function update(){
      if(!$this->canUpdate())
        showMessageDlg("Data usergroups tidak dapat diupdate",true);
      else{
        //$this->setField("PASSWORD", md5($this->getField("PASSWORD")."BAKWAN"));
		$str = "
				UPDATE PPI_ASSET.USER_GROUP 
                SET 
				  NAMA 						= '".$this->getField("NAMA")."'
                WHERE 
                  USER_GROUP_ID = '".$this->getField("USER_GROUP_ID")."'"; 
				  $this->query = $str;
				  
        return $this->execQuery($str);
      }
    }

    function updateByField(){
		$str = "
				UPDATE PPI_ASSET.USER_GROUP 
                SET 
				  ".$this->getField("FIELD_NAME")." = '".$this->getField("FIELD_VALUE")."'
                WHERE 
                  USER_GROUP_ID = '".$this->getField("USER_GROUP_ID")."'"; 
				  $this->query = $str;
				  
        return $this->execQuery($str);
    }
	
    /**
    * Cek apakah record dapat dihapus atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika record dapat dihapus, false jika tidak.
    **/
    function canDelete(){
      return true;
    }

    /**
    * Menghapus record sesuai id-nya. 
    * @author M Reza Faisal
    * @return boolean True jika penghapusan sukses, false jika tidak.
    **/
    function delete(){
      if(!$this->canDelete())
        showMessageDlg("Data usergroups tidak dapat di-hapus",true);
      else{
        $str = "DELETE FROM PPI_ASSET.user_group 
                WHERE 
                  USER_GROUP_ID = '".$this->getField("USER_GROUP_ID")."'"; 
				  $this->query = $str;
        return $this->execQuery($str);
      }
    }

    /**
    * Cari record berdasarkan id-nya. 
    * @author M Reza Faisal
    * @param string USER_NAME Id record 
    * @return boolean True jika pencarian sukses, false jika tidak.
    **/
    function selectById($USER_GROUP_ID){
      $str = "SELECT * FROM PPI_ASSET.user_group
              WHERE 
                USER_GROUP_ID = '".$USER_GROUP_ID."'"; 
				
		$this->query = $str;
		
      $this->select($str);
	  if($this->firstRow()) 
        return true; 
      else 
         return false; 
    }

    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 
    function selectByParams($paramsArray=array(),$limit=-1,$from=-1){
      $str = "
			SELECT 
				USER_GROUP_ID, NAMA, MASTER_DATA, 
				   USER_MANAJEMEN, PENDATAAN, PENGENDALIAN, 
				   PEMBELIAN, PERMOHONAN_PERBAIKAN, PERMOHONAN_PEMUSNAHAN, 
				   PERSETUJUAN_PERBAIKAN, PERSETUJUAN_PEMUSNAHAN
				FROM PPI_ASSET.USER_GROUP 
				WHERE 1 = 1
			"; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key = '$val' ";
      }
      $str .= " ORDER BY NAMA";
	  $this->query = $str;
      return $this->selectLimit($str,$limit,$from); 
    }

    /** 
    * Hitung jumlah record berdasarkan parameter (array). 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @return long Jumlah record yang sesuai kriteria 
    **/ 
    function getCountByParams($paramsArray=array(), $varStatement=""){
      $str = "SELECT COUNT(USER_GROUP_ID) AS ROWCOUNT FROM PPI_ASSET.USER_GROUP WHERE USER_GROUP_ID IS NOT NULL ".$varStatement; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key LIKE '%$val%' ";
      }
      $this->select($str); 
      if($this->firstRow()) 
        return $this->getField("ROWCOUNT"); 
      else 
         return 0; 
    }
  } 
?>